<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>戴铭的博客 - 星光社</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://starming.com/"/>
  <updated>2024-07-03T21:50:01.369Z</updated>
  <id>https://starming.com/</id>
  
  <author>
    <name>戴铭</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>梵高灵感的来自江户浮世绘，颜气江户APP来自江户的色彩</title>
    <link href="https://starming.com/2024/07/04/edocolorapp/"/>
    <id>https://starming.com/2024/07/04/edocolorapp/</id>
    <published>2024-07-03T21:48:02.000Z</published>
    <updated>2024-07-03T21:50:01.369Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>看过我前面博客的同学会发现我很喜欢自己画些配图，每次给画配色都会有些新的体会，却不知道是什么，于是每次都要经过一轮新的摸爬滚打才能调到自己满意的颜色，最近我为了能够提高自己的配色效率，就专门的看了一些色彩相关的书籍，学习了点色彩的理论，还专门的手写了一款 APP，提高了上色的效率呢。这个 APP 叫颜气江户，我已经发到苹果商店（28元），iOS、iPad 和 macOS 商店都可以找到，搜索“颜气江户”。下面我会聊一点色彩的理论，以及怎么将其融入到 APP 中的。</p><p>颜气江户 APP 有一些色彩 APP 的基本功能，200个江户色卡，色卡配图和配色表，以及识别图片配色等功能。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/08.png" class="lozad post-image"src="/uploads/edocolorapp/08.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/06.png" class="lozad post-image"src="/uploads/edocolorapp/06.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/04.png" class="lozad post-image"src="/uploads/edocolorapp/04.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/07.png" class="lozad post-image"src="/uploads/edocolorapp/07.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/03.png" class="lozad post-image"src="/uploads/edocolorapp/03.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/02.png" class="lozad post-image"src="/uploads/edocolorapp/02.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/05.png" class="lozad post-image"src="/uploads/edocolorapp/05.png"></p><h2 id="舒服的配色"><a href="#舒服的配色" class="headerlink" title="舒服的配色"></a>舒服的配色</h2><p>首先，无论你是否画画，你都会觉得一些配色看起来很舒服，也会觉得有些配色看起来很丑。这些其实是有一定规律可循的。你的眼睛会寻求中等灰色才会达到一种平衡状态，互补色调合后会变成灰色，所以灰色和互补色很容易让配色舒服。因此苹果笔记本常年都是主打银灰色，macOS 操作系统的窗口和 Sidebar 一直以来也都是灰色的，非常耐看。有颜色的手机，单个不耐看，放在一起看着就很舒服，也是这个道理。</p><p>色彩即是物理的、化学的，还是生理的和心理的。物理主要是关于光谱和色彩光波，化学就是染色和载色剂相关的东西，对于艺术美学来说，主要是生理和心理方面的作用，看着舒服就是生理方面的，生理学家埃瓦尔德·赫林就说过眼睛和大脑需要中等灰色，没有的话大脑会处于不安状态。</p><p>这种灰色是可以通过色彩调合而成，最简单的调合方式就是互补色加白色。</p><h2 id="互补色"><a href="#互补色" class="headerlink" title="互补色"></a>互补色</h2><p>那么什么是互补色呢。灰色好理解，互补色可能就比较复杂些了。严谨点的理论上通过色轮可以获取不同数量的互补颜色组合。比如双色互补是色轮上的直线段两端的颜色，三色互补是色轮上构成等边三角形火等腰三角形的三种色彩，四色互补是色轮上构成正方形或长方形的四种色彩。</p><p>虽然互补色会让画面配色看起来和谐舒服，但是有些艺术作品是需要有冲击性的，又或者有鲜明个性的，不然就不好玩了。因此创作时是不用严格按照互补色来配色，根据个人主观喜好来用色就好，当觉得配的不好时再运用互补色的理论调整好了。</p><h2 id="对比色"><a href="#对比色" class="headerlink" title="对比色"></a>对比色</h2><p>另外，通过对比色可以突出你想突出的内容，有五种常用的色彩对比方法</p><ul><li>色相对比：十二色轮的主色</li><li>明暗对比：黄色最亮，紫色最暗</li><li>冷暖对比：红色和橙色最暖，蓝绿色最冷，风景画中远处色彩较冷</li><li>补色对比：调合后成灰色的颜色对比</li><li>面积对比：颜色所占比例对比</li></ul><h2 id="色彩的意义"><a href="#色彩的意义" class="headerlink" title="色彩的意义"></a>色彩的意义</h2><p>色彩的组合其实和音乐的音阶一样，了解音阶的理论并不能创作出美妙的旋律，了解配色原理和每个颜色也不并能创作出美丽的作品。</p><p>了解色彩只是一切美好的基础，也是好的开端。</p><p>同时色彩的变迁和演变也伴随着历史、文化和艺术的演变，了解更多色彩的知识也能够探索到更多未知的领域，让日子意义感更足些呢。</p><h2 id="江户色"><a href="#江户色" class="headerlink" title="江户色"></a>江户色</h2><p>19世纪50年代，江户时期的艺术品传入欧洲，在欧洲流行起来，巴黎一些前卫的艺术家很喜欢这些艺术品。1886年梵高来到巴黎见到江户浮世绘后对其产生了极大兴趣。</p><p>梵高起初收集浮世绘作品是想在咖啡馆里卖这些作品，结果没人买。梵高作品《铃鼓咖啡馆里的阿戈斯蒂娜·塞迦陀利》中可以看到咖啡馆上挂着浮世绘艺伎图。</p><p>虽然梵高没有从浮世绘中获取收入，却从其中获取了创作灵感。他临摹了歌川广重的《开花的李树园》和《大桥安宅骤雨》，还有溪斋英泉的《身穿云龙打挂的花魁》。</p><p>梵高《包扎着耳朵的自画像》这张自画像中墙上挂着的是佐藤虎清的《艺者与富士》。梵高曾表示自己很喜欢葛饰北斋的《神奈川冲浪里》，而后创作了最著名的《星月夜》，其中旋转的星云和神奈川冲浪里的浪非常神似。</p><p>梵高曾经说过：“如果你研究日本艺术，你看到的是一个充满智慧、哲思和悟性的人将时间用来做什么呢？研究地球与月亮的距离？不。研究俾斯麦政策？不。他研究一片草叶。这难道不是日本人教给我们的真正的宗教吗?他们简单地生活在自然之中如同花儿一样。”</p><p>我喜欢梵高的配色，同时也喜欢江户时代浮世绘画中的颜色，因此我打算先从江户时代的颜色入手，先做好研究。</p><p>我找了200种当时流行的颜色，颜气江户 APP 目前就内置了这些颜色，并加入了颜色的名字的来源。江户色名主要取自植物、动物、自然现象以及歌舞伎演员等。透过这些色名的来源，我发现还能够了解到江户时期的人们生活文化自然的方方面面。</p><p>举几个由歌舞伎演员名命名的颜色的例子，比如団十郎茶、梅幸茶、路考茶、芝翫茶、璃寛茶。</p><p>団十郎茶是歌舞伎役者市川團十郎爱使用的颜色，成田屋的标志，是一种偏红的棕色。艺荒事（武戏）代表剧“暂”里所用的服装颜色，还有温泉猴子的脸和柿饼也是这种颜色。</p><p>梅幸茶是歌舞伎大师初代尾上菊五郎最喜欢的颜色，颜色名来自菊五郎的俳句名梅幸。</p><p>路考茶是江戸的歌舞伎役者二代目瀬川菊之丞襲名王子路考喜欢的颜色，江户各地女性争相模仿，浮世絵美人衣服很多用的也是这个颜色。</p><p>芝翫茶是大阪花形役者三代目中村歌右衛門喜欢的颜色，呈偏淡的红棕色，芝翫是他的俳名。</p><p>璃寛茶是歌舞伎演员二世嵐吉三郎最喜欢的舞台衣裳的颜色，他的俳句叫瑠寛。虎河豚是一种高级鱼，就是璃寛茶色。</p><p>歌舞伎的演员成了明星和时尚的领导者，庶民喜欢把歌舞伎演员喜欢的颜色叫做役者色，将这些颜色衣裳穿在自己身上，会觉得自己很时尚。</p><p>另外，江户时代颜色有个最显著的特色，那就是茶色和鼠色很多，统称四十八茶百鼠。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/01.png" class="lozad post-image"src="/uploads/edocolorapp/01.png"></p><p>江户中期富裕的商人越来越多，生活变得奢侈起来，更多钱用在了华丽颜色的服饰上，幕府为了避免攀比和浪费，因此提倡节俭，并颁布了奢侈禁止令，让更多的钱用在江户的城市发展上。这样一些以前代表低身份的茶色和鼠色被玩出了花，出现了很多新的颜色，这些颜色变成了流行时尚色。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;看过我前面博客的同学会发现我很喜欢自己画些配图，每次给画配色都会有些新的体会，却不知道是什么，于是每次都要经过一轮新的摸爬滚打才能调到自己满
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="App" scheme="https://starming.com/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>小册子之 SwiftUI 动画</title>
    <link href="https://starming.com/2024/05/25/pamphlet-series-animation/"/>
    <id>https://starming.com/2024/05/25/pamphlet-series-animation/</id>
    <published>2024-05-25T11:20:09.000Z</published>
    <updated>2024-05-25T12:25:18.445Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容已整理到小册子中，小册子代码在 <a href="https://github.com/ming1016/SwiftPamphletApp">Github</a> 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">“戴铭的开发小册子”</a>应用(98元)，来跟踪查看本文内容新增和更新。</p><p>本文属于小册子系列中的一篇，已发布系列文章有：</p><ul><li><a href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/">小册子之如何使用 SwiftData 开发 SwiftUI 应用</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-widget/">小册子之简说 Widget 小组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-listdataview/">小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-layout/">小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-form/">小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</a></li><li>【本篇】<a href="https://starming.com/2024/05/25/pamphlet-series-animation/">小册子之 SwiftUI 动画</a></li></ul><h2 id="SwiftUI动画"><a href="#SwiftUI动画" class="headerlink" title="SwiftUI动画"></a>SwiftUI动画</h2><p>SwiftUI 里实现动画的方式包括有 .animation 隐式动画、withAnimation 和 withTransaction 显示动画、matchedGeometryEffect Hero 动画和 TimelineView 等。</p><p>示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayAnimation</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isChange <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> anis<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token class-name">Animation</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string-literal"><span class="token string">"p1"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p2"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">linear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p3"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">interpolatingSpring</span><span class="token punctuation">(</span>stiffness<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> damping<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p4"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p5"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">easeIn</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p6"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">easeOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p7"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">interactiveSpring</span><span class="token punctuation">(</span>response<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> dampingFraction<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> blendDuration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p8"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p9"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">.</span><span class="token function">repeatCount</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selection <span class="token operator">=</span> <span class="token number">1</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// animation 隐式动画和 withAnimation 显示动画</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span>isChange <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"另一种状态"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"一种状态"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span>easeInOut<span class="token punctuation">,</span> value<span class="token punctuation">:</span> isChange<span class="token punctuation">)</span> <span class="token comment">// 受限的隐式动画，只绑定某个值。</span>            <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                <span class="token comment">// 使用 withAnimation 就是显式动画，效果等同 withTransaction(Transaction(animation: .default))</span>                withAnimation <span class="token punctuation">&#123;</span>                    isChange<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">// 设置 Transaction。和隐式动画共存时，优先执行 withAnimation 或 Transaction。</span>                <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">linear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                t<span class="token punctuation">.</span>disablesAnimations <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 用来禁用隐式动画</span>                <span class="token function">withTransaction</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    isChange<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end onHover</span>                <span class="token class-name">LazyVGrid</span><span class="token punctuation">(</span>columns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">adaptive</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> isChange <span class="token operator">?</span> <span class="token number">60</span> <span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">(</span>anis<span class="token punctuation">.</span>keys<span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span>anis<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> isChange<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>            isChange<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> isChange <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"pause.fill"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"play.fill"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">renderingMode</span><span class="token punctuation">(</span><span class="token punctuation">.</span>original<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>                <span class="token comment">// matchedGeometryEffect 的使用</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"后台"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>            placeStayView            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"前台"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>            placeShowView        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>                <span class="token comment">// 通过使用相同 matchedGeometryEffect 的 id，绑定两个元素变化。</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> isChange <span class="token punctuation">&#123;</span>                <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>pink<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"g1"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"转换"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">linear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    isChange<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token operator">!</span>isChange <span class="token punctuation">&#123;</span>                <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>orange<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"g1"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p1"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token operator">!</span>isChange <span class="token punctuation">&#123;</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p19"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"g1"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p1"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// 使用 isSource，作为移动到相同 matchedGeometryEffect id 的方法。</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p19"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> isChange <span class="token operator">?</span> <span class="token number">100</span> <span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> isChange <span class="token operator">?</span> <span class="token number">100</span> <span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> isChange <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"g2"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">,</span> isSource<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                        <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p19"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"g2"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>                                <span class="token comment">// 点击跟随的效果</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">...</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> i <span class="token operator">==</span> selection <span class="token operator">?</span> <span class="token number">200</span> <span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"h</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                    <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                        withAnimation <span class="token punctuation">&#123;</span>                            selection <span class="token operator">=</span> i                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>            <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>pink<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"h</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">selection</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">,</span> isSource<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>                <span class="token comment">// matchedGeometryEffect 还可以应用到 List 中，通过 Array enumerated 获得 index 作为 matchedGeometryEffect 的 id。右侧固定按钮可以直接让对应 id 的视图滚动到固定按钮的位置</span>                        <span class="token comment">// TimelineView</span>        <span class="token class-name">TimelineView</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">periodic</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> <span class="token punctuation">.</span>now<span class="token punctuation">,</span> by<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> t <span class="token keyword">in</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">t<span class="token punctuation">.</span>date</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token class-name">HStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">let</span> e <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"p</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token class-name">Int</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token operator">...</span><span class="token number">30</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">.</span><span class="token function">repeatCount</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> e<span class="token punctuation">)</span>                                <span class="token class-name">TimelineSubView</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> t<span class="token punctuation">.</span>date<span class="token punctuation">)</span> <span class="token comment">// 需要传入 timeline 的时间给子视图才能够起作用。</span>                                <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>                <span class="token comment">// matchedGeometryEffect</span>        <span class="token comment">/// TimelineScheduler 的使用，TimelineScheduler 有以下类型</span>        <span class="token comment">/// .animation：制定更新的频率，可以控制暂停</span>        <span class="token comment">/// .everyMinute：每分钟更新一次</span>        <span class="token comment">/// .explicit：所有要更新的放到一个数组里</span>        <span class="token comment">/// .periodic：设置开始时间和更新频率</span>        <span class="token comment">/// 也可以自定义 TimelineScheduler</span>        <span class="token class-name">TimelineView</span><span class="token punctuation">(</span><span class="token punctuation">.</span>everySecond<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> t <span class="token keyword">in</span>            <span class="token keyword">let</span> e <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"p</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token class-name">Int</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token operator">...</span><span class="token number">30</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>                <span class="token comment">// 自定义的 TimelineScheduler</span>        <span class="token class-name">TimelineView</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">everyLoop</span><span class="token punctuation">(</span>timeOffsets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> t <span class="token keyword">in</span>            <span class="token class-name">TimelineSubView</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> t<span class="token punctuation">.</span>date<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// MARK: - TimelineSubView</span>    <span class="token keyword">struct</span> <span class="token class-name">TimelineSubView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> date <span class="token punctuation">:</span> <span class="token class-name">Date</span>        <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"let's go"</span></span>        <span class="token comment">// 顺序从数组中取值，取完再重头开始</span>        <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> idx<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">1</span>        <span class="token keyword">func</span> <span class="token function-definition function">advanceIndex</span><span class="token punctuation">(</span>count<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            idx <span class="token operator">=</span> <span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> count            <span class="token keyword">if</span> idx <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span> idx <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>                <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">HStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">idx</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeIn</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> date<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> date<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> newValue <span class="token keyword">in</span>                        <span class="token function">advanceIndex</span><span class="token punctuation">(</span>count<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>                        s <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">date<span class="token punctuation">.</span>hour</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">date<span class="token punctuation">.</span>minute</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">date<span class="token punctuation">.</span>second</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>                        <span class="token function">advanceIndex</span><span class="token punctuation">(</span>count<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                                    <span class="token class-name">Text</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// MARK: - 用 matchedGeometryEffect 做动画</span>    <span class="token comment">/// matchedGeometryEffect 可以无缝的将一个图像变成另外一个图像。</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> placeStayItems <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"p1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"p2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"p3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"p4"</span></span><span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> placeShowItems<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token attribute atrule">@Namespace</span> <span class="token keyword">private</span> <span class="token keyword">var</span> mgeStore        <span class="token keyword">private</span> <span class="token keyword">var</span> placeStayView<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">LazyVGrid</span><span class="token punctuation">(</span>columns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">adaptive</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>placeStayItems<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> s<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                    <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                        withAnimation <span class="token punctuation">&#123;</span>                            placeStayItems<span class="token punctuation">.</span>removeAll <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span> <span class="token operator">==</span> s <span class="token punctuation">&#125;</span>                            placeShowItems<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end ForEach</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end LazyVGrid</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// private var placeStayView</span>        <span class="token keyword">private</span> <span class="token keyword">var</span> placeShowView<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">LazyVGrid</span><span class="token punctuation">(</span>columns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">adaptive</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>placeShowItems<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> s<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                    <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                        withAnimation <span class="token punctuation">&#123;</span>                            placeShowItems<span class="token punctuation">.</span>removeAll <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span> <span class="token operator">==</span> s <span class="token punctuation">&#125;</span>                            placeStayItems<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>white<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end ForEach</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end LazyVGrid</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end private var placeShowView</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end struct PlayAnimation</span><span class="token comment">// MARK: - 扩展 TimelineSchedule</span><span class="token keyword">extension</span> <span class="token class-name">TimelineSchedule</span> <span class="token keyword">where</span> <span class="token keyword">Self</span> <span class="token operator">==</span> <span class="token class-name">PeriodicTimelineSchedule</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> everySecond<span class="token punctuation">:</span> <span class="token class-name">PeriodicTimelineSchedule</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">get</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> <span class="token punctuation">.</span>now<span class="token punctuation">,</span> by<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 自定义一个 TimelineSchedule</span><span class="token comment">// timeOffsets 用完，就会再重头重新再来一遍</span><span class="token keyword">struct</span> <span class="token class-name">PCLoopTimelineSchedule</span><span class="token punctuation">:</span> <span class="token class-name">TimelineSchedule</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> timeOffsets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">TimeInterval</span><span class="token punctuation">]</span>        <span class="token keyword">func</span> <span class="token function-definition function">entries</span><span class="token punctuation">(</span>from startDate<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">,</span> mode<span class="token punctuation">:</span> <span class="token class-name">TimelineScheduleMode</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Entries</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Entries</span><span class="token punctuation">(</span>last<span class="token punctuation">:</span> startDate<span class="token punctuation">,</span> offsets<span class="token punctuation">:</span> timeOffsets<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">struct</span> <span class="token class-name">Entries</span><span class="token punctuation">:</span> <span class="token class-name">Sequence</span><span class="token punctuation">,</span> <span class="token class-name">IteratorProtocol</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> last<span class="token punctuation">:</span> <span class="token class-name">Date</span>        <span class="token keyword">let</span> offsets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">TimeInterval</span><span class="token punctuation">]</span>        <span class="token keyword">var</span> idx<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>        <span class="token keyword">mutating</span> <span class="token keyword">func</span> <span class="token function-definition function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Date</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>            idx <span class="token operator">=</span> <span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> offsets<span class="token punctuation">.</span>count            last <span class="token operator">=</span> last<span class="token punctuation">.</span><span class="token function">addingTimeInterval</span><span class="token punctuation">(</span>offsets<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> last        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end Struct Entries</span><span class="token punctuation">&#125;</span><span class="token comment">// 为自定义的 PCLoopTimelineSchedule 做一个 TimelineSchedule 的扩展函数，方便使用</span><span class="token keyword">extension</span> <span class="token class-name">TimelineSchedule</span> <span class="token keyword">where</span> <span class="token keyword">Self</span> <span class="token operator">==</span> <span class="token class-name">PCLoopTimelineSchedule</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">everyLoop</span><span class="token punctuation">(</span>timeOffsets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">TimeInterval</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">PCLoopTimelineSchedule</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>timeOffsets<span class="token punctuation">:</span> timeOffsets<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="contentTransition"><a href="#contentTransition" class="headerlink" title="contentTransition"></a>contentTransition</h2><p><code>.contentTransition(.numericText())</code> 修饰符用于在视图内容发生变化时，以数字动画的方式进行过渡。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> filmNumber<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">filmNumber</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contentTransition</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">numericText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span>easeIn<span class="token punctuation">,</span> value<span class="token punctuation">:</span> filmNumber<span class="token punctuation">)</span>            <span class="token class-name">Stepper</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影数量"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> $filmNumber<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token operator">...</span><span class="token number">100</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>indigo<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="animation修饰符"><a href="#animation修饰符" class="headerlink" title="animation修饰符"></a>animation修饰符</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>在 SwiftUI 中，创建一个动画需要以下三个组成部分：</p><ul><li>一个时间曲线函数</li><li>一个声明将状态（或特定的依赖项）与该时间曲线函数关联起来</li><li>一个依赖于该状态（或特定的依赖项）的可动画组件</li></ul><p>动画的接口定义为 <code>Animation(timingFunction:property:duration:delay)</code></p><ul><li><code>timingFunction</code> 是时间曲线函数，可以是线性、缓动、弹簧等</li><li><code>property</code> 是动画属性，可以是颜色、大小、位置等</li><li><code>duration</code> 是动画持续时间</li><li><code>delay</code> 是动画延迟时间</li></ul><p>三种写法</p><ul><li><code>withAnimation(_:_:)</code> 全局应用</li><li><code>animation(_:value:)</code> 应用于 View</li><li><code>animation(_:)</code> 应用于绑定的变量</li></ul><p>第一种</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    myProperty <span class="token operator">=</span> newValue<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第二种</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> myProperty<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三种</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">1.0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">PosterView</span><span class="token punctuation">(</span>scale<span class="token punctuation">:</span> $scale<span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">linear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PosterView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>            <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>                scale <span class="token operator">=</span> <span class="token number">1.5</span>            <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们创建了一个 <code>MovieView</code>，它有一个状态变量 <code>scale</code>。当 <code>scale</code> 的值改变时，<code>PosterView</code> 中的海报图片会以线性动画的方式进行缩放。当 <code>PosterView</code> 出现时，<code>scale</code> 的值会改变为 1.5，因此海报图片会以线性动画的方式放大到 1.5 倍。</p><p>在 SwiftUI 中，我们也可以创建一个自定义的 <code>AnimatableModifier</code> 来实现对图文卡片大小的动画处理。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isSmall <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">aspectRatio</span><span class="token punctuation">(</span>contentMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>fit<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">rect</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>bold<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">animatableCard</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> isSmall <span class="token operator">?</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>            <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                isSmall<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">AnimatableCardModifier</span><span class="token punctuation">:</span> <span class="token class-name">AnimatableModifier</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> size<span class="token punctuation">:</span> <span class="token class-name">CGSize</span>    <span class="token keyword">var</span> color<span class="token punctuation">:</span> <span class="token class-name">Color</span> <span class="token operator">=</span> <span class="token punctuation">.</span>white        <span class="token keyword">var</span> animatableData<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">.</span><span class="token class-name">AnimatableData</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">get</span> <span class="token punctuation">&#123;</span> <span class="token class-name">CGSize</span><span class="token punctuation">.</span><span class="token class-name">AnimatableData</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>width<span class="token punctuation">,</span> size<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>        <span class="token keyword">set</span> <span class="token punctuation">&#123;</span> size <span class="token operator">=</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> newValue<span class="token punctuation">.</span>first<span class="token punctuation">,</span> height<span class="token punctuation">:</span> newValue<span class="token punctuation">.</span>second<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">func</span> <span class="token function-definition function">body</span><span class="token punctuation">(</span>content<span class="token punctuation">:</span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        content            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> size<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> size<span class="token punctuation">.</span>height<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">animatableCard</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">,</span>                        color<span class="token punctuation">:</span> <span class="token class-name">Color</span> <span class="token operator">=</span> <span class="token punctuation">.</span>white<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">modifier</span><span class="token punctuation">(</span><span class="token class-name">AnimatableCardModifier</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> size<span class="token punctuation">,</span>                                             color<span class="token punctuation">:</span> color<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SwiftUI 内置了许多动画过渡函数，主要分为四类：</p><ul><li>时间曲线动画函数</li><li>弹簧动画函数</li><li>高阶动画函数</li><li>自定义动画函数</li></ul><h3 id="时间曲线动画函数"><a href="#时间曲线动画函数" class="headerlink" title="时间曲线动画函数"></a>时间曲线动画函数</h3><p>时间曲线函数决定了动画的速度如何随时间变化，这对于动画的自然感觉非常重要。</p><p>SwiftUI 提供了以下几种预设的时间曲线函数：</p><ul><li><code>linear</code>：线性动画，动画速度始终保持不变。</li><li><code>easeIn</code>：动画开始时速度较慢，然后逐渐加速。</li><li><code>easeOut</code>：动画开始时速度较快，然后逐渐减速。</li><li><code>easeInOut</code>：动画开始和结束时速度较慢，中间阶段速度较快。</li></ul><p>除此之外，SwiftUI 还提供了 <code>timingCurve</code> 函数，可以通过二次曲线或 Bézier 曲线来自定义插值函数，实现更复杂的动画效果。</p><p>以下是代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">1.0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>            <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                scale <span class="token operator">=</span> <span class="token number">1.5</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们创建了一个 <code>MovieView</code>，它包含一个电影标题和一个电影海报。当视图出现时，海报的大小会以 <code>easeInOut</code> 的方式在 1 秒内放大到 1.5 倍。</p><h3 id="弹簧动画函数"><a href="#弹簧动画函数" class="headerlink" title="弹簧动画函数"></a>弹簧动画函数</h3><p>弹簧动画函数可以模拟物理世界中的弹簧运动，使动画看起来更加自然和生动。</p><p>SwiftUI 提供了以下几种预设的弹簧动画函数：</p><ul><li><code>smooth</code>：平滑的弹簧动画，动画速度逐渐减慢，直到停止。</li><li><code>snappy</code>：快速的弹簧动画，动画速度快速减慢，然后停止。</li><li><code>bouncy</code>：弹跳的弹簧动画，动画在结束时会有一些弹跳效果。</li></ul><p>除此之外，SwiftUI 还提供了 <code>spring</code> 函数，可以自定义弹簧动画的持续时间、弹跳度和混合持续时间，实现更复杂的弹簧动画效果。</p><p>以下是代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">1.0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>            <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span>response<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> dampingFraction<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> blendDuration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                scale <span class="token operator">=</span> <span class="token number">1.5</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们创建了一个 <code>MovieView</code>，它包含一个电影标题和一个电影海报。当视图出现时，海报的大小会以自定义的弹簧动画方式在 0.5 秒内放大到 1.5 倍。</p><h3 id="高阶动画函数"><a href="#高阶动画函数" class="headerlink" title="高阶动画函数"></a>高阶动画函数</h3><p>高级动画函数可以在基础动画函数的基础上，添加延迟、重复、翻转和速度等功能，使动画效果更加丰富和复杂。</p><p>以下是这些函数的简单介绍：</p><ul><li><code>func delay(TimeInterval) -&gt; Animation</code>：此函数可以使动画在指定的时间间隔后开始。</li><li><code>func repeatCount(Int, autoreverses: Bool) -&gt; Animation</code>：此函数可以使动画重复指定的次数。如果 <code>autoreverses</code> 参数为 <code>true</code>，则每次重复时动画都会翻转。</li><li><code>func repeatForever(autoreverses: Bool) -&gt; Animation</code>：此函数可以使动画无限次重复。如果 <code>autoreverses</code> 参数为 <code>true</code>，则每次重复时动画都会翻转。</li><li><code>func speed(Double) -&gt; Animation</code>：此函数可以调整动画的速度，使其比默认速度快或慢。</li></ul><p>以下是代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">MovieView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">1.0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"movie_poster"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>            <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token class-name">Animation</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">repeatCount</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> autoreverses<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">speed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                scale <span class="token operator">=</span> <span class="token number">1.5</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们创建了一个 <code>MovieView</code>，它包含一个电影标题和一个电影海报。当视图出现时，海报的大小会以 <code>easeInOut</code> 的方式在 1 秒内放大到 1.5 倍，然后在 0.5 秒后开始，重复 3 次，每次重复都会翻转，速度是默认速度的 2 倍。</p><h3 id="自定义动画函数"><a href="#自定义动画函数" class="headerlink" title="自定义动画函数"></a>自定义动画函数</h3><p>SwiftUI 可以通过实现 <code>CustomAnimation</code> 协议来完全自定义插值算法。</p><p>以下是一个简单的 <code>Linear</code> 动画函数的实现：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">1.0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">myLinear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> scale<span class="token punctuation">)</span> <span class="token comment">// use myLinear animation</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>            scale <span class="token operator">=</span> <span class="token number">1.5</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">MyLinearAnimation</span><span class="token punctuation">:</span> <span class="token class-name">CustomAnimation</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> duration<span class="token punctuation">:</span> <span class="token class-name">TimeInterval</span>  <span class="token keyword">func</span> <span class="token function-definition function">animate</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">></span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">V</span><span class="token punctuation">,</span> time<span class="token punctuation">:</span> <span class="token class-name">TimeInterval</span><span class="token punctuation">,</span> context<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">AnimationContext</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">V</span><span class="token operator">?</span> <span class="token keyword">where</span> <span class="token class-name">V</span> <span class="token punctuation">:</span> <span class="token class-name">VectorArithmetic</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> time <span class="token operator">&lt;=</span> duration <span class="token punctuation">&#123;</span>      value<span class="token punctuation">.</span><span class="token function">scaled</span><span class="token punctuation">(</span>by<span class="token punctuation">:</span> time <span class="token operator">/</span> duration<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token nil constant">nil</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">func</span> <span class="token function-definition function">velocity</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token punctuation">:</span> <span class="token class-name">VectorArithmetic</span><span class="token operator">></span><span class="token punctuation">(</span>    value<span class="token punctuation">:</span> <span class="token class-name">V</span><span class="token punctuation">,</span> time<span class="token punctuation">:</span> <span class="token class-name">TimeInterval</span><span class="token punctuation">,</span> context<span class="token punctuation">:</span> <span class="token class-name">AnimationContext</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">></span>  <span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">V</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>    value<span class="token punctuation">.</span><span class="token function">scaled</span><span class="token punctuation">(</span>by<span class="token punctuation">:</span> <span class="token number">1.0</span> <span class="token operator">/</span> duration<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">func</span> <span class="token function-definition function">shouldMerge</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">></span><span class="token punctuation">(</span>previous<span class="token punctuation">:</span> <span class="token class-name">Animation</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">V</span><span class="token punctuation">,</span> time<span class="token punctuation">:</span> <span class="token class-name">TimeInterval</span><span class="token punctuation">,</span> context<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">AnimationContext</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Bool</span> <span class="token keyword">where</span> <span class="token class-name">V</span> <span class="token punctuation">:</span> <span class="token class-name">VectorArithmetic</span> <span class="token punctuation">&#123;</span>    <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">Animation</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">myLinear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token class-name">TimeInterval</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Animation</span> <span class="token punctuation">&#123;</span> <span class="token comment">// define function like linear</span>    <span class="token keyword">return</span> <span class="token class-name">Animation</span><span class="token punctuation">(</span><span class="token class-name">MyLinearAnimation</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> duration<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Transaction"><a href="#Transaction" class="headerlink" title="Transaction"></a>Transaction</h2><h3 id="Transaction-使用指南"><a href="#Transaction-使用指南" class="headerlink" title="Transaction 使用指南"></a>Transaction 使用指南</h3><p>这段内容主要介绍了 SwiftUI 中的 <code>Transaction</code> 和 <code>withTransaction</code>。<code>Transaction</code> 是 SwiftUI 中用于控制动画的一种方式，它可以用来定义动画的详细参数，如动画类型、持续时间等。<code>withTransaction</code> 是一个函数，它接受一个 <code>Transaction</code> 实例和一个闭包作为参数，闭包中的代码将在这个 <code>Transaction</code> 的上下文中执行。</p><p>以下是一个使用 <code>Transaction</code> 和 <code>withTransaction</code> 的代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">1.0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> transaction <span class="token operator">=</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token function">withTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                scale <span class="token operator">=</span> <span class="token number">1.5</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们创建了一个 <code>MovieView</code>，它包含一个电影标题和一个电影海报。当视图出现时，我们创建了一个 <code>Transaction</code>，并设置了动画类型为 <code>easeInOut</code>，持续时间为 1 秒。然后我们在 <code>withTransaction</code> 的闭包中改变 <code>scale</code> 的值，这样海报的大小就会以 <code>easeInOut</code> 的方式在 1 秒内放大到 1.5 倍。</p><h3 id="使用-Transaction-和-withTransaction"><a href="#使用-Transaction-和-withTransaction" class="headerlink" title="使用 Transaction 和 withTransaction"></a>使用 <code>Transaction</code> 和 <code>withTransaction</code></h3><p>SwiftUI 中 <code>Transaction</code> 的 <code>disablesAnimations</code> 和 <code>isContinuous</code> 属性，以及 <code>transaction(_:)</code> 方法怎么使用？</p><p><code>disablesAnimations</code> 属性可以用来禁止动画，<code>isContinuous</code> 属性可以用来标识一个连续的交互（例如拖动）。<code>transaction(_:)</code> 方法可以用来创建一个新的 <code>Transaction</code> 并在其闭包中设置动画参数。</p><p>以下是一个使用这些特性的代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> size<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">100</span>    <span class="token attribute atrule">@GestureState</span> <span class="token keyword">var</span> dragSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"fearless"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> size<span class="token punctuation">,</span> height<span class="token punctuation">:</span> size<span class="token punctuation">)</span> <span class="token comment">// 使用 size 控制尺寸，而非位置</span>                <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> size<span class="token punctuation">)</span> <span class="token comment">// 使用弹簧动画</span>                <span class="token punctuation">.</span>transaction <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>isContinuous <span class="token punctuation">&#123;</span>                        <span class="token short-argument">$0</span><span class="token punctuation">.</span>animation <span class="token operator">=</span> <span class="token nil constant">nil</span> <span class="token comment">// 拖动时，不设置动画</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        <span class="token short-argument">$0</span><span class="token punctuation">.</span>animation <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 使用弹簧动画</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">gesture</span><span class="token punctuation">(</span>                    <span class="token class-name">DragGesture</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">updating</span><span class="token punctuation">(</span>$dragSize<span class="token punctuation">,</span> body<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> current<span class="token punctuation">,</span> state<span class="token punctuation">,</span> transaction <span class="token keyword">in</span>                            state <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> current<span class="token punctuation">.</span>translation<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> current<span class="token punctuation">.</span>translation<span class="token punctuation">.</span>height<span class="token punctuation">)</span>                            transaction<span class="token punctuation">.</span>isContinuous <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 拖动时，设置标识</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">)</span>            <span class="token class-name">Stepper</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"尺寸: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">size</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> $size<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token operator">...</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token comment">// 使用 Stepper 替代 Slider</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"开始动画"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> transaction <span class="token operator">=</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> size <span class="token operator">&lt;</span> <span class="token number">150</span> <span class="token punctuation">&#123;</span> transaction<span class="token punctuation">.</span>disablesAnimations <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span>                <span class="token function">withTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    size <span class="token operator">=</span> <span class="token number">50</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，当 <code>size</code> 小于 150 时，我们禁用动画。通过 <code>.isContinuous</code> 属性，我们可以标识一个连续的交互（例如拖动）。在这个示例中，当拖动时，我们禁用动画。通过 <code>transaction(_:)</code> 方法，我们可以创建一个新的 <code>Transaction</code> 并在其中设置动画参数。</p><h3 id="用于视图组件"><a href="#用于视图组件" class="headerlink" title="用于视图组件"></a>用于视图组件</h3><p>大部分 SwiftUI 视图组件都有 <code>transaction(_:)</code> 方法，可以用来设置动画参数。比如 NavigationStack, Sheet, Alert 等。</p><p><code>Transaction</code> 也可以用于 <code>Binding</code> 和 <code>FetchRequest</code>。</p><p>看下面的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> size<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">100</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isBold<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">let</span> animation<span class="token punctuation">:</span> <span class="token class-name">Animation</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token punctuation">.</span>spring    <span class="token keyword">var</span> sizeBinding<span class="token punctuation">:</span> <span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">CGFloat</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> transaction <span class="token operator">=</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> animation<span class="token punctuation">)</span>        <span class="token keyword">return</span> $size<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> isBoldBinding<span class="token punctuation">:</span> <span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">Bool</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> transaction <span class="token operator">=</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> animation<span class="token punctuation">)</span>        <span class="token keyword">return</span> $isBold<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"film"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> size<span class="token punctuation">,</span> height<span class="token punctuation">:</span> size<span class="token punctuation">)</span> <span class="token comment">// 使用 size 控制尺寸，而非位置</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> size<span class="token punctuation">,</span> weight<span class="token punctuation">:</span> isBold <span class="token operator">?</span> <span class="token punctuation">.</span>bold <span class="token punctuation">:</span> <span class="token punctuation">.</span>regular<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 使用 isBold 控制粗细</span>            <span class="token class-name">Stepper</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"尺寸: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">size</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> sizeBinding<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token operator">...</span><span class="token number">200</span><span class="token punctuation">)</span>            <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"粗细"</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> isBoldBinding<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="传播行为"><a href="#传播行为" class="headerlink" title="传播行为"></a>传播行为</h3><p><code>Transaction</code> 可以用于控制动画的传播行为。在 SwiftUI 中，动画可以在视图层次结构中传播，这意味着一个视图的动画效果可能会影响到其子视图。<code>Transaction</code> 可以用来控制动画的传播行为，例如禁用动画、设置动画类型等。</p><p>以下是一个使用 <code>Transaction</code> 控制动画传播行为的代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">enum</span> <span class="token class-name">BookStatus</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> small<span class="token punctuation">,</span> medium<span class="token punctuation">,</span> large<span class="token punctuation">,</span> extraLarge<span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@ViewBuilder</span> <span class="token keyword">func</span> <span class="token function-definition function">debugAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        transaction <span class="token punctuation">&#123;</span>            <span class="token function">debugPrint</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">.</span>animation <span class="token operator">??</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> status<span class="token punctuation">:</span> <span class="token class-name">BookStatus</span> <span class="token operator">=</span> <span class="token punctuation">.</span>small    <span class="token keyword">var</span> animation<span class="token punctuation">:</span> <span class="token class-name">Animation</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> status <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>small<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">.</span>linear        <span class="token keyword">case</span> <span class="token punctuation">.</span>medium<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">.</span>easeIn        <span class="token keyword">case</span> <span class="token punctuation">.</span>large<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">.</span>easeOut        <span class="token keyword">case</span> <span class="token punctuation">.</span>extraLarge<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> size<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> status <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>small<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token number">100</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>medium<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token number">200</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>large<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token number">300</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>extraLarge<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token number">400</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"book"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> size<span class="token punctuation">,</span> height<span class="token punctuation">:</span> size<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">debugAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 查看动画变化信息</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"改变状态"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> transaction <span class="token operator">=</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                <span class="token function">withTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">switch</span> <span class="token keyword">self</span><span class="token punctuation">.</span>status <span class="token punctuation">&#123;</span>                    <span class="token keyword">case</span> <span class="token punctuation">.</span>small<span class="token punctuation">:</span>                        <span class="token keyword">self</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token punctuation">.</span>medium                    <span class="token keyword">case</span> <span class="token punctuation">.</span>medium<span class="token punctuation">:</span>                        <span class="token keyword">self</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token punctuation">.</span>large                    <span class="token keyword">case</span> <span class="token punctuation">.</span>large<span class="token punctuation">:</span>                        <span class="token keyword">self</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token punctuation">.</span>extraLarge                    <span class="token keyword">case</span> <span class="token punctuation">.</span>extraLarge<span class="token punctuation">:</span>                        <span class="token keyword">self</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token punctuation">.</span>small                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个示例中，我们创建了一个 <code>BookView</code>，它包含一个书籍图标。我们通过 <code>BookStatus</code> 枚举来控制书籍的大小，通过 <code>animation</code> 计算属性来根据状态返回不同的动画类型。在 <code>withTransaction</code> 中，我们根据状态创建一个新的 <code>Transaction</code>，并在其中设置动画类型。通过 <code>debugAnimation</code> 修饰符，我们可以查看动画的变化信息。</p><h3 id="TransactionKey"><a href="#TransactionKey" class="headerlink" title="TransactionKey"></a>TransactionKey</h3><p>TransactionKey 是一种在 SwiftUI 的视图更新过程中传递额外信息的机制，它可以让你在不同的视图和视图更新之间共享数据。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> store <span class="token operator">=</span> <span class="token class-name">MovieStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">saturation</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>isPlaying <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// 滤镜变化</span>                <span class="token punctuation">.</span>transaction <span class="token punctuation">&#123;</span>                    <span class="token short-argument">$0</span><span class="token punctuation">.</span>animation <span class="token operator">=</span> <span class="token short-argument">$0</span><span class="token punctuation">[</span><span class="token class-name">StatusKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span><span class="token punctuation">.</span>animation                <span class="token punctuation">&#125;</span>            <span class="token class-name">PlayView</span><span class="token punctuation">(</span>store<span class="token punctuation">:</span> store<span class="token punctuation">)</span>            <span class="token class-name">PauseView</span><span class="token punctuation">(</span>store<span class="token punctuation">:</span> store<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PlayView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> store<span class="token punctuation">:</span> <span class="token class-name">MovieStore</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"播放"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">withTransaction</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>status<span class="token punctuation">,</span> <span class="token punctuation">.</span>playing<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                store<span class="token punctuation">.</span>isPlaying<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PauseView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> store<span class="token punctuation">:</span> <span class="token class-name">MovieStore</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"暂停"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">withTransaction</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>status<span class="token punctuation">,</span> <span class="token punctuation">.</span>paused<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                store<span class="token punctuation">.</span>isPlaying<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token attribute atrule">@Observable</span><span class="token keyword">class</span> <span class="token class-name">MovieStore</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> isPlaying <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token keyword">enum</span> <span class="token class-name">MovieStatus</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> playing    <span class="token keyword">case</span> paused    <span class="token keyword">case</span> stopped    <span class="token keyword">var</span> animation<span class="token punctuation">:</span> <span class="token class-name">Animation</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token keyword">self</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>playing<span class="token punctuation">:</span>            <span class="token class-name">Animation</span><span class="token punctuation">.</span><span class="token function">linear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>paused<span class="token punctuation">:</span>            <span class="token nil constant">nil</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>stopped<span class="token punctuation">:</span>            <span class="token class-name">Animation</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">StatusKey</span><span class="token punctuation">:</span> <span class="token class-name">TransactionKey</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> defaultValue<span class="token punctuation">:</span> <span class="token class-name">MovieStatus</span> <span class="token operator">=</span> <span class="token punctuation">.</span>stopped<span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">Transaction</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> status<span class="token punctuation">:</span> <span class="token class-name">MovieStatus</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">get</span> <span class="token punctuation">&#123;</span> <span class="token keyword">self</span><span class="token punctuation">[</span><span class="token class-name">StatusKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span>        <span class="token keyword">set</span> <span class="token punctuation">&#123;</span> <span class="token keyword">self</span><span class="token punctuation">[</span><span class="token class-name">StatusKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span> <span class="token operator">=</span> newValue <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们创建了一个 <code>MovieStore</code> 类，用于存储电影播放状态。我们通过 <code>PlayView</code> 和 <code>PauseView</code> 分别创建了播放和暂停按钮，点击按钮时，我们通过 <code>withTransaction</code> 函数改变了 <code>MovieStore</code> 的 <code>isPlaying</code> 属性，并根据状态设置了动画类型。在 <code>ContentView</code> 中，我们通过 <code>transaction</code> 修饰符设置了动画类型为 <code>MovieStatus</code> 中的动画类型。</p><h3 id="AnyTransition"><a href="#AnyTransition" class="headerlink" title="AnyTransition"></a>AnyTransition</h3><p><code>AnyTransition</code> 是一个用于创建自定义过渡效果的类型，它可以让你定义视图之间的过渡动画。你可以使用 <code>AnyTransition</code> 的 <code>modifier</code> 方法将自定义过渡效果应用到视图上。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token attribute atrule">@StateObject</span> <span class="token keyword">var</span> musicViewModel <span class="token operator">=</span> <span class="token class-name">MusicViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>musicViewModel<span class="token punctuation">.</span>musicNames<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>description<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> musicName <span class="token keyword">in</span>                <span class="token keyword">if</span> musicName <span class="token operator">==</span> musicViewModel<span class="token punctuation">.</span>currentMusic <span class="token punctuation">&#123;</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span>musicName<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">250</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">250</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">.</span>glitch<span class="token punctuation">.</span><span class="token function">combined</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> <span class="token punctuation">.</span>opacity<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Next Music"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                musicViewModel<span class="token punctuation">.</span><span class="token function">selectNextMusic</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">buttonStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>borderedProminent<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">MyTransition</span><span class="token punctuation">:</span> <span class="token class-name">ViewModifier</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> active<span class="token punctuation">:</span> <span class="token class-name">Bool</span>    <span class="token keyword">func</span> <span class="token function-definition function">body</span><span class="token punctuation">(</span>content<span class="token punctuation">:</span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        content            <span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span>active <span class="token operator">?</span> <span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">10</span><span class="token operator">...</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>zero<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> active <span class="token operator">?</span> <span class="token class-name">CGFloat</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">10</span><span class="token operator">...</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> active <span class="token operator">?</span> <span class="token class-name">CGFloat</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">10</span><span class="token operator">...</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">AnyTransition</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> glitch<span class="token punctuation">:</span> <span class="token class-name">AnyTransition</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">AnyTransition</span><span class="token punctuation">.</span><span class="token function">modifier</span><span class="token punctuation">(</span>            active<span class="token punctuation">:</span> <span class="token class-name">MyTransition</span><span class="token punctuation">(</span>active<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            identity<span class="token punctuation">:</span> <span class="token class-name">MyTransition</span><span class="token punctuation">(</span>active<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">MusicViewModel</span><span class="token punctuation">:</span> <span class="token class-name">ObservableObject</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Published</span> <span class="token keyword">var</span> currentMusic <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>        <span class="token keyword">let</span> musicNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"fearless"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"red"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"speaknow"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"lover"</span></span><span class="token punctuation">]</span>        <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        currentMusic <span class="token operator">=</span> musicNames<span class="token punctuation">.</span>first <span class="token operator">??</span> <span class="token string-literal"><span class="token string">"fearless"</span></span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">func</span> <span class="token function-definition function">selectNextMusic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">guard</span> <span class="token keyword">let</span> currentIndex <span class="token operator">=</span> musicNames<span class="token punctuation">.</span><span class="token function">firstIndex</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> currentMusic<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>                <span class="token keyword">let</span> nextIndex <span class="token operator">=</span> currentIndex <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> musicNames<span class="token punctuation">.</span>count <span class="token operator">?</span> currentIndex <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span>                <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            currentMusic <span class="token operator">=</span> musicNames<span class="token punctuation">[</span>nextIndex<span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们创建了一个 <code>MusicViewModel</code> 类，用于存储音乐播放状态。我们通过 <code>MyTransition</code> 自定义了一个过渡效果，通过 <code>AnyTransition</code> 的 <code>modifier</code> 方法将自定义过渡效果应用到视图上。在 <code>ContentView</code> 中，我们通过 <code>transition</code> 修饰符设置了过渡效果为 <code>glitch</code>，并在点击按钮时切换音乐。</p><h2 id="Matched-Geometry-Effect"><a href="#Matched-Geometry-Effect" class="headerlink" title="Matched Geometry Effect"></a>Matched Geometry Effect</h2><h3 id="位置变化"><a href="#位置变化" class="headerlink" title="位置变化"></a>位置变化</h3><p>Matched Geometry Effect 是一种特殊的动画效果。当你有两个视图，并且你想在一个视图消失，另一个视图出现时，创建一个平滑的过渡动画，你就可以使用这个效果。你只需要给这两个视图添加同样的标识符和命名空间，然后当你删除一个视图并添加另一个视图时，就会自动创建一个动画，让一个视图看起来像是滑动到另一个视图的位置。</p><p>示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@StateObject</span> <span class="token keyword">var</span> viewModel <span class="token operator">=</span> <span class="token class-name">ViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@Namespace</span> <span class="token keyword">var</span> musicSelectionNamespace    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>viewModel<span class="token punctuation">.</span>topMusic<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> viewModel<span class="token punctuation">.</span><span class="token function">selectTopMusic</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Image</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">)</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">fontDesign</span><span class="token punctuation">(</span><span class="token punctuation">.</span>rounded<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> item<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> musicSelectionNamespace<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>minHeight<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">)</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">250</span><span class="token punctuation">)</span>            <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>viewModel<span class="token punctuation">.</span>bottomMusic<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> viewModel<span class="token punctuation">.</span><span class="token function">selectBottomMusic</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Image</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">90</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">90</span><span class="token punctuation">)</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>bold<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> item<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> musicSelectionNamespace<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>minHeight<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们创建了一个 <code>ContentView</code> 视图，其中包含两个 <code>HStack</code> 视图，分别展示了 <code>viewModel</code> 中的 <code>topMusic</code> 和 <code>bottomMusic</code> 数组。我们为每个 <code>topMusic</code> 和 <code>bottomMusic</code> 元素创建了一个 <code>Button</code> 视图，当用户点击按钮时，会调用 <code>viewModel</code> 中的 <code>selectTopMusic</code> 和 <code>selectBottomMusic</code> 方法。我们使用 <code>matchedGeometryEffect</code> 修饰符为每个 <code>Button</code> 视图添加了一个标识符，这样当用户点击按钮时，就会自动创建一个动画，让一个视图看起来像是滑动到另一个视图的位置。</p><h3 id="大小变化"><a href="#大小变化" class="headerlink" title="大小变化"></a>大小变化</h3><p>Matched Geometry Effect 在大小和位置上都可以进行动画过渡，这样可以让你创建更加复杂的动画效果。</p><p>以下是一个视图大小切换的示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isExpanded<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">private</span> <span class="token keyword">var</span> albumId <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Album"</span></span>        <span class="token attribute atrule">@Namespace</span> <span class="token keyword">var</span> expansionAnimation        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token function">albumView</span><span class="token punctuation">(</span>isExpanded<span class="token punctuation">:</span> isExpanded<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>            withAnimation <span class="token punctuation">&#123;</span>                isExpanded<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@ViewBuilder</span>    <span class="token keyword">func</span> <span class="token function-definition function">albumView</span><span class="token punctuation">(</span>isExpanded<span class="token punctuation">:</span> <span class="token class-name">Bool</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> imageSize <span class="token operator">=</span> isExpanded <span class="token operator">?</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">450</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">)</span>        <span class="token class-name">Image</span><span class="token punctuation">(</span>isExpanded <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"evermore"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"fearless"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">aspectRatio</span><span class="token punctuation">(</span>contentMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>fill<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> imageSize<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> imageSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">clipped</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> albumId<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> expansionAnimation<span class="token punctuation">)</span>            <span class="token punctuation">.</span>overlay <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Taylor Swift"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span>isExpanded <span class="token operator">?</span> <span class="token punctuation">.</span>largeTitle <span class="token punctuation">:</span> <span class="token punctuation">.</span>headline<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fontDesign</span><span class="token punctuation">(</span><span class="token punctuation">.</span>monospaced<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fontDesign</span><span class="token punctuation">(</span><span class="token punctuation">.</span>rounded<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="内容位置变化"><a href="#内容位置变化" class="headerlink" title="内容位置变化"></a>内容位置变化</h3><p>内容位置变化的动画效果。以下是一个内容位置变化的示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> show <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token attribute atrule">@Namespace</span> <span class="token keyword">var</span> placeHolder    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> albumCoverSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> songListSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Taylor Swift，1989年12月13日出生于美国宾夕法尼亚州，美国乡村音乐、流行音乐女歌手、词曲创作人、演员、慈善家。"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fontDesign</span><span class="token punctuation">(</span><span class="token punctuation">.</span>monospaced<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fontDesign</span><span class="token punctuation">(</span><span class="token punctuation">.</span>rounded<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>                <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Color</span><span class="token punctuation">.</span>clear                <span class="token comment">// AlbumCover placeholder</span>                <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Color</span><span class="token punctuation">.</span>clear <span class="token comment">// AlbumCoverView().opacity(0.01)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> albumCoverSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"bottom"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> placeHolder<span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">,</span> isSource<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"top"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> placeHolder<span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">,</span> isSource<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>                    <span class="token class-name">AlbumCoverView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">sizeInfo</span><span class="token punctuation">(</span>$albumCoverSize<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"bottom"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> placeHolder<span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> show <span class="token operator">?</span> <span class="token punctuation">.</span>bottom <span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">,</span> isSource<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>                    <span class="token class-name">SongListView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"top"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> placeHolder<span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> show <span class="token operator">?</span> <span class="token punctuation">.</span>bottom <span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">,</span> isSource<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> show<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">overlayButton</span><span class="token punctuation">(</span>show<span class="token punctuation">:</span> $show<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">AlbumCoverView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">aspectRatio</span><span class="token punctuation">(</span>contentMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>fill<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SongListView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Fearless"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Speak Now"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span>            <span class="token comment">// ...</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">overlayButton</span><span class="token punctuation">(</span>show<span class="token punctuation">:</span> <span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">Bool</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    show<span class="token punctuation">.</span>wrappedValue<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"arrow.up.arrow.down.square"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>topTrailing        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">func</span> <span class="token function-definition function">sizeInfo</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> size<span class="token punctuation">:</span> <span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">CGSize</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>            <span class="token class-name">GeometryReader</span> <span class="token punctuation">&#123;</span> geometry <span class="token keyword">in</span>                <span class="token class-name">Color</span><span class="token punctuation">.</span>clear<span class="token punctuation">.</span><span class="token function">preference</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token class-name">SizePreferenceKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> geometry<span class="token punctuation">.</span>size<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">onPreferenceChange</span><span class="token punctuation">(</span><span class="token class-name">SizePreferenceKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> size<span class="token punctuation">.</span>wrappedValue <span class="token operator">=</span> <span class="token short-argument">$0</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SizePreferenceKey</span><span class="token punctuation">:</span> <span class="token class-name">PreferenceKey</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> defaultValue<span class="token punctuation">:</span> <span class="token class-name">CGSize</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">reduce</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">CGSize</span><span class="token punctuation">,</span> nextValue<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGSize</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        value <span class="token operator">=</span> <span class="token function">nextValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们使用 <code>matchedGeometryEffect</code> 修饰符为 <code>AlbumCoverView</code> 和 <code>SongListView</code> 添加了一个标识符，这样当用户点击按钮时，就会自动创建一个动画，让 <code>AlbumCoverView</code> 和 <code>SongListView</code> 看起来像是从一个位置切换到另一个位置。</p><h3 id="点击显示详细信息"><a href="#点击显示详细信息" class="headerlink" title="点击显示详细信息"></a>点击显示详细信息</h3><p>点击显示详细信息的动画效果。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Namespace</span> <span class="token keyword">var</span> animation    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> showDetail <span class="token operator">=</span> <span class="token boolean">false</span>            <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>showDetail<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Taylor Swift"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"artist"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"美国歌手"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"description"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                    <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>black<span class="token punctuation">.</span>gradient<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"background"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                <span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SingerView</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> animation<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>            withAnimation <span class="token punctuation">&#123;</span>                showDetail<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SingerView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> animation<span class="token punctuation">:</span> <span class="token class-name">Namespace</span><span class="token punctuation">.</span><span class="token constant">ID</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Taylor Swift"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"artist"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"美国歌手"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"description"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"泰勒·阿利森·斯威夫特（Taylor Swift），1989年12月13日出生于美国宾夕法尼亚州，美国乡村音乐、流行音乐女歌手、词曲创作人、演员、慈善家。"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>subheadline<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                        <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">rect</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Evermore 是 Taylor Swift 的最新专辑，这是她在 2020 年的第二张专辑，也是她的第九张录音室专辑。"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>subheadline<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> maxHeight<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>            <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>black<span class="token punctuation">.</span>gradient<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"background"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="导航动画"><a href="#导航动画" class="headerlink" title="导航动画"></a>导航动画</h3><p>以下是一个导航动画的示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Namespace</span> <span class="token keyword">var</span> animation    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> selectedManga<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span>            <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>selectedManga <span class="token operator">==</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">MangaListView</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> animation<span class="token punctuation">,</span> selectedManga<span class="token punctuation">:</span> $selectedManga<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">MangaDetailView</span><span class="token punctuation">(</span>selectedManga<span class="token punctuation">:</span> $selectedManga<span class="token punctuation">,</span> animation<span class="token punctuation">:</span> animation<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">MangaDetailView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> selectedManga<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>    <span class="token keyword">var</span> animation<span class="token punctuation">:</span> <span class="token class-name">Namespace</span><span class="token punctuation">.</span><span class="token constant">ID</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">selectedManga <span class="token operator">??</span> <span class="token string-literal"><span class="token string">""</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"mangaTitle"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>                        <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    selectedManga <span class="token operator">=</span> <span class="token nil constant">nil</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"返回"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">.</span>gradient<span class="token punctuation">)</span>            <span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> maxHeight<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>            <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token class-name">UIColor</span><span class="token punctuation">.</span>systemTeal<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"background"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">MangaListView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> animation<span class="token punctuation">:</span> <span class="token class-name">Namespace</span><span class="token punctuation">.</span><span class="token constant">ID</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> selectedManga<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    selectedManga <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"海贼王"</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"海贼王"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"mangaTitle"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>teal<span class="token punctuation">)</span>            <span class="token punctuation">)</span>                        <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    selectedManga <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"火影忍者"</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"火影忍者"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>mint<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"background"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>            <span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    selectedManga <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"进击的巨人"</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"进击的巨人"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>orange<span class="token punctuation">)</span>            <span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    selectedManga <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"鬼灭之刃"</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"鬼灭之刃"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>purple<span class="token punctuation">)</span>            <span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    selectedManga <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"我的英雄学院"</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"我的英雄学院"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">)</span>            <span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="geometryGroup"><a href="#geometryGroup" class="headerlink" title="geometryGroup"></a>geometryGroup</h3><p><code>.geometryGroup()</code> 主要用于处理一组视图动画变化时不协调的问题。如果你有一组视图，它们的位置和大小会随着动画变化，你可以使用 <code>.geometryGroup()</code> 修饰符来确保它们的位置和大小保持一致。</p><h2 id="PhaseAnimator"><a href="#PhaseAnimator" class="headerlink" title="PhaseAnimator"></a>PhaseAnimator</h2><p>PhaseAnimator</p><p>以下代码示例演示了如何使用 <code>PhaseAnimator</code> 视图修饰符创建一个动画，该动画通过循环遍历所有动画步骤来连续运行。在这个例子中，我们使用 <code>PhaseAnimator</code> 来创建一个简单的动画，该动画通过循环遍历所有动画步骤来连续运行。当观测值发生变化时，动画会触发一次。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">enum</span> <span class="token class-name">AlbumAnimationPhase</span><span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">CaseIterable</span><span class="token punctuation">,</span> <span class="token class-name">Comparable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> evermore<span class="token punctuation">,</span> fearless<span class="token punctuation">,</span> folklore<span class="token punctuation">,</span> lover<span class="token punctuation">,</span> midnights<span class="token punctuation">,</span> red<span class="token punctuation">,</span> speaknow    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token operator">&lt;</span> <span class="token punctuation">(</span>lhs<span class="token punctuation">:</span> <span class="token class-name">AlbumAnimationPhase</span><span class="token punctuation">,</span> rhs<span class="token punctuation">:</span> <span class="token class-name">AlbumAnimationPhase</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Bool</span> <span class="token punctuation">&#123;</span>        lhs<span class="token punctuation">.</span>rawValue <span class="token operator">&lt;</span> rhs<span class="token punctuation">.</span>rawValue    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> animate<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">PhaseAnimator</span><span class="token punctuation">(</span>                <span class="token class-name">AlbumAnimationPhase</span><span class="token punctuation">.</span>allCases<span class="token punctuation">,</span>                trigger<span class="token punctuation">:</span> animate<span class="token punctuation">,</span>                content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> phase <span class="token keyword">in</span>                    <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">AlbumAnimationPhase</span><span class="token punctuation">.</span>allCases<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> album <span class="token keyword">in</span>                            <span class="token keyword">if</span> phase <span class="token operator">>=</span> album <span class="token punctuation">&#123;</span>                                <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                                    <span class="token class-name">Image</span><span class="token punctuation">(</span>album<span class="token punctuation">.</span>rawValue<span class="token punctuation">)</span>                                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span>                                    <span class="token class-name">Text</span><span class="token punctuation">(</span>album<span class="token punctuation">.</span>rawValue<span class="token punctuation">.</span>capitalized<span class="token punctuation">)</span>                                        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                                <span class="token punctuation">&#125;</span>                                <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">asymmetric</span><span class="token punctuation">(</span>insertion<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>edge<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">)</span><span class="token punctuation">,</span> removal<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>edge<span class="token punctuation">:</span> <span class="token punctuation">.</span>trailing<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> animation<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> phase <span class="token keyword">in</span>                    <span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end ScrollView</span>        <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            animate<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"开始"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上面的代码中，我们首先定义了一个枚举类型 <code>AlbumAnimationPhase</code>，用于表示专辑的不同阶段。然后，我们在 <code>ContentView</code> 视图中创建了一个 <code>PhaseAnimator</code> 视图修饰符，该修饰符接受一个观测值 <code>trigger</code>，用于触发动画。在 <code>content</code> 闭包中，我们遍历所有专辑，并根据当前阶段 <code>phase</code> 来决定是否显示专辑。在 <code>animation</code> 闭包中，我们使用 <code>.spring(duration: 0.5)</code> 创建了一个弹簧动画效果。   </p><h2 id="KeyframeAnimator"><a href="#KeyframeAnimator" class="headerlink" title="KeyframeAnimator"></a>KeyframeAnimator</h2><p><code>KeyframeAnimator</code>是一个在SwiftUI中创建关键帧动画的工具。关键帧动画是一种动画类型，其中定义了动画开始和结束的关键帧，以及可能的一些中间关键帧，然后动画系统会在这些关键帧之间进行插值以创建平滑的动画。</p><p><code>KeyframeAnimator</code>接受一个初始值，一个内容闭包，以及一个关键帧闭包。初始值是一个包含了动画所需的所有属性的结构（在这个例子中是<code>scale</code>，<code>rotation</code>和<code>offset</code>）。内容闭包接受一个这样的结构实例，并返回一个视图。这个视图将使用结构中的值进行配置，以便它可以根据这些值进行动画。关键帧闭包接受一个这样的结构实例，并定义了一系列的关键帧轨道。每个轨道都对应于结构中的一个属性，并定义了一系列的关键帧。每个关键帧都定义了一个值和一个时间点，动画系统将在这些关键帧之间进行插值。</p><p>此外，SwiftUI提供了四种不同类型的关键帧：<code>LinearKeyframe</code>，<code>SpringKeyframe</code>，<code>CubicKeyframe</code>和<code>MoveKeyframe</code>。前三种关键帧使用不同的动画过渡函数进行插值，而<code>MoveKeyframe</code>则立即跳转到指定值，无需插值。</p><p><code>KeyframeAnimator</code>可以用于创建各种复杂的动画效果，例如根据滚动位置调整关键帧驱动的效果，或者根据时间进行更新。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> animationTrigger<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">KeyframeAnimator</span><span class="token punctuation">(</span>                initialValue<span class="token punctuation">:</span> <span class="token class-name">AnimatedMovie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> movie <span class="token keyword">in</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>movie<span class="token punctuation">.</span>scaleRatio<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span>movie<span class="token punctuation">.</span>rotationAngle<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span> movie<span class="token punctuation">.</span>verticalOffset<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> keyframes<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> movie <span class="token keyword">in</span>                    <span class="token class-name">KeyframeTrack</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>scaleRatio<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">LinearKeyframe</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.36</span><span class="token punctuation">)</span>                        <span class="token class-name">SpringKeyframe</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span> spring<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span>                        <span class="token class-name">SpringKeyframe</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> spring<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token class-name">KeyframeTrack</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>rotationAngle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">CubicKeyframe</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span>                        <span class="token class-name">CubicKeyframe</span><span class="token punctuation">(</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token class-name">KeyframeTrack</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>verticalOffset<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">LinearKeyframe</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">)</span>                        <span class="token class-name">SpringKeyframe</span><span class="token punctuation">(</span><span class="token number">20.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.15</span><span class="token punctuation">,</span> spring<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span>                        <span class="token class-name">CubicKeyframe</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">60.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">)</span>                        <span class="token class-name">MoveKeyframe</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">AnimatedMovie</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> scaleRatio<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">var</span> rotationAngle <span class="token operator">=</span> <span class="token class-name">Angle</span><span class="token punctuation">.</span>zero    <span class="token keyword">var</span> verticalOffset<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们首先定义了一个<code>AnimatedMovie</code>结构，它包含了动画所需的所有属性。然后，我们在<code>ContentView</code>视图中创建了一个<code>KeyframeAnimator</code>，该修饰符接受一个观测值<code>animationTrigger</code>，用于触发动画。在<code>content</code>闭包中，我们使用<code>Image</code>视图创建了一个电影海报，并根据<code>AnimatedMovie</code>结构中的值对其进行配置。在<code>keyframes</code>闭包中，我们为每个属性定义了一系列的关键帧轨道。例如，我们为<code>scaleRatio</code>属性定义了三个关键帧，分别使用<code>LinearKeyframe</code>和<code>SpringKeyframe</code>进行插值。我们还为<code>rotationAngle</code>和<code>verticalOffset</code>属性定义了两个关键帧轨道，分别使用<code>CubicKeyframe</code>和<code>MoveKeyframe</code>进行插值。</p><p>也可以使用 <code>.keyframeAnimator</code> 修饰符来创建关键帧动画。以下是一个示例，演示了如何使用 .keyframeAnimator 修饰符创建一个关键帧动画，该动画在用户点击时触发。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> animationTrigger<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>animationTrigger <span class="token operator">?</span> <span class="token number">1.5</span> <span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span>animationTrigger <span class="token operator">?</span> <span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>zero<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span> animationTrigger <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">60.0</span> <span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">keyframeAnimator</span><span class="token punctuation">(</span>initialValue<span class="token punctuation">:</span> <span class="token class-name">AnimatedMovie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                              trigger<span class="token punctuation">:</span> animationTrigger<span class="token punctuation">,</span>                              content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> view<span class="token punctuation">,</span> value <span class="token keyword">in</span>                view                    <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>scaleRatio<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>rotationAngle<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                              keyframes<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> value <span class="token keyword">in</span>                <span class="token class-name">KeyframeTrack</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>scaleRatio<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">LinearKeyframe</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.36</span><span class="token punctuation">)</span>                    <span class="token class-name">SpringKeyframe</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span> spring<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span>                    <span class="token class-name">SpringKeyframe</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">,</span> spring<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                                <span class="token class-name">KeyframeTrack</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>rotationAngle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">CubicKeyframe</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span>                    <span class="token class-name">CubicKeyframe</span><span class="token punctuation">(</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                                <span class="token class-name">KeyframeTrack</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>verticalOffset<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">LinearKeyframe</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">60.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">)</span>                    <span class="token class-name">SpringKeyframe</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.15</span><span class="token punctuation">,</span> spring<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span>                    <span class="token class-name">CubicKeyframe</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">60.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">)</span>                    <span class="token class-name">MoveKeyframe</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    animationTrigger<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">AnimatedMovie</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> scaleRatio<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">var</span> rotationAngle <span class="token operator">=</span> <span class="token class-name">Angle</span><span class="token punctuation">.</span>zero    <span class="token keyword">var</span> verticalOffset<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个 <code>AnimatedMovie</code> 结构，它包含了动画所需的所有属性。然后，我们在 <code>ContentView</code> 视图中创建了一个 <code>KeyframeAnimator</code>，该修饰符接受一个观测值 <code>animationTrigger</code>，用于触发动画。在 <code>content</code> 闭包中，我们使用 <code>Image</code> 视图创建了一个电影海报，并根据 <code>AnimatedMovie</code> 结构中的值对其进行配置。在 <code>keyframes</code> 闭包中，我们为每个属性定义了一系列的关键帧轨道。例如，我们为 <code>scaleRatio</code> 属性定义了三个关键帧，分别使用 <code>LinearKeyframe</code> 和 <code>SpringKeyframe</code> 进行插值。我们还为 <code>rotationAngle</code> 和 <code>verticalOffset</code> 属性定义了两个关键帧轨道，分别使用 <code>CubicKeyframe</code> 和 <code>MoveKeyframe</code> 进行插值。</p><h2 id="布局动画"><a href="#布局动画" class="headerlink" title="布局动画"></a>布局动画</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">struct</span> <span class="token class-name">AnimateLayout</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span> <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> changeLayout<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token attribute atrule">@Namespace</span> <span class="token keyword">var</span> namespace <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">VStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">if</span> changeLayout <span class="token punctuation">&#123;</span>    <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span> items <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span> items <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"切换布局"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    withAnimation <span class="token punctuation">&#123;</span> changeLayout<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token attribute atrule">@ViewBuilder</span> <span class="token keyword">var</span> items<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"one"</span></span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"one"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> namespace<span class="token punctuation">)</span>  <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Two"</span></span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Two"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> namespace<span class="token punctuation">)</span>  <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Three"</span></span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Three"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> namespace<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="动画-例子"><a href="#动画-例子" class="headerlink" title="动画-例子"></a>动画-例子</h2><p>动画的例子有很多。准备中… 请期待。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容已整理到小册子中，小册子代码在 &lt;a href=&quot;https://github.com/ming1016/SwiftPamphletApp&quot;&gt;Github&lt;/a&gt; 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买&lt;a href=&quot;https://apps
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</title>
    <link href="https://starming.com/2024/05/18/pamphlet-series-form/"/>
    <id>https://starming.com/2024/05/18/pamphlet-series-form/</id>
    <published>2024-05-18T02:24:12.000Z</published>
    <updated>2024-05-25T12:26:56.827Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容已整理到小册子中，小册子代码在 <a href="https://github.com/ming1016/SwiftPamphletApp">Github</a> 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">“戴铭的开发小册子”</a>应用(98元)，来跟踪查看本文内容新增和更新。</p><p>本文属于小册子系列中的一篇，已发布系列文章有：</p><ul><li><a href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/">小册子之如何使用 SwiftData 开发 SwiftUI 应用</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-widget/">小册子之简说 Widget 小组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-listdataview/">小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-layout/">小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</a></li><li>【本篇】<a href="https://starming.com/2024/05/18/pamphlet-series-form/">小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/25/pamphlet-series-animation/">小册子之 SwiftUI 动画</a></li></ul><h2 id="Form"><a href="#Form" class="headerlink" title="Form"></a>Form</h2><table><thead><tr><th>控件视图</th><th>说明</th><th>Style</th></tr></thead><tbody><tr><td>Button</td><td>触发操作的按钮</td><td>.bordered, .borderless, .borderedProminent, .plain</td></tr><tr><td>Picker</td><td>提供多选项供选择</td><td>.wheel, .inline, .segmented, .menu, .radioGroup</td></tr><tr><td>DatePicker and MultiDatePicker</td><td>选择日期的工具</td><td>.compact, .wheel, .graphical</td></tr><tr><td>Toggle</td><td>切换两种状态的开关</td><td>.switch, .botton, .checkbox</td></tr><tr><td>Stepper</td><td>调整数值的步进器</td><td>无样式选项</td></tr><tr><td>Menu</td><td>显示选项列表的菜单</td><td>.borderlessButton, .button</td></tr></tbody></table><p>Form 有 ColumnFormStyle 还有 GroupedFormStyle。使用 buttonStyle 修饰符：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>   <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">formStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>grouped<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Form 新版也得到了增强，示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SimpleFormView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> eventDescription <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> accent <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>red    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scheme <span class="token operator">=</span> <span class="token class-name">ColorScheme</span><span class="token punctuation">.</span>light    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">DatePicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Date"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $date<span class="token punctuation">)</span>                <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Description"</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $eventDescription<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">lineLimit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">Section</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Vibe"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Accent color"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $accent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>accentColors<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> color <span class="token keyword">in</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>description<span class="token punctuation">.</span>capitalized<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Color scheme"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $scheme<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Light"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">ColorScheme</span><span class="token punctuation">.</span>light<span class="token punctuation">)</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Dark"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">ColorScheme</span><span class="token punctuation">.</span>dark<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">formStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>grouped<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">Color</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">let</span> accentColors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Color</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span> <span class="token punctuation">.</span>green<span class="token punctuation">,</span> <span class="token punctuation">.</span>blue<span class="token punctuation">,</span> <span class="token punctuation">.</span>orange<span class="token punctuation">,</span> <span class="token punctuation">.</span>pink<span class="token punctuation">,</span> <span class="token punctuation">.</span>purple<span class="token punctuation">,</span> <span class="token punctuation">.</span>yellow<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Form 的样式除了 <code>.formStyle(.grouped)</code> 还有 <code>.formStyle(..columns)</code>。</p><p>关于 Form 字体、单元、背景颜色设置，参看下面代码：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> movieTitle <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isWatched <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> rating <span class="token operator">=</span> <span class="token number">1</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> watchDate <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $movieTitle<span class="token punctuation">)</span>                <span class="token class-name">LabeledContent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"导演"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"克里斯托弗·诺兰"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> header<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"关于电影"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">listRowBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"已观看"</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> $isWatched<span class="token punctuation">)</span>                <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"评分"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $rating<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">...</span><span class="token number">5</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> number <span class="token keyword">in</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">number</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 星"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> header<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影详情"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">listRowBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">DatePicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"观看日期"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $watchDate<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">listRowBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"重置所有电影数据"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">resetAllData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">listRowBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>indigo<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>yellow<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">scrollContentBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>hidden<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">navigationBarTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影追踪器"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">resetAllData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        movieTitle <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>        isWatched <span class="token operator">=</span> <span class="token boolean">false</span>        rating <span class="token operator">=</span> <span class="token number">1</span>        watchDate <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">LabeledContent</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> label<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> value<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> label<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>label <span class="token operator">=</span> label        <span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Picker选择器"><a href="#Picker选择器" class="headerlink" title="Picker选择器"></a>Picker选择器</h2><h3 id="Picker"><a href="#Picker" class="headerlink" title="Picker"></a>Picker</h3><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/picker-ap01.jpeg" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/picker-ap01.jpeg"></p><p>SwiftUI 中的 <code>Picker</code> 视图是一个用于选择列表中的一个选项的用户界面元素。你可以使用 <code>Picker</code> 视图来创建各种类型的选择器，包括滚动选择器、弹出菜单和分段控制。</p><p>示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayPickerView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> select <span class="token operator">=</span> <span class="token number">1</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> color <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span>        <span class="token keyword">var</span> dateFt<span class="token punctuation">:</span> <span class="token class-name">DateFormatter</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> ft <span class="token operator">=</span> <span class="token class-name">DateFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        ft<span class="token punctuation">.</span>dateStyle <span class="token operator">=</span> <span class="token punctuation">.</span>long        <span class="token keyword">return</span> ft    <span class="token punctuation">&#125;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 默认是下拉的风格</span>        <span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Section</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选区"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选一个"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $select<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"1"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"2"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// Segment 风格，</span>        <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选一个"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $select<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"one"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"two"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token class-name">SegmentedPickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// 颜色选择器</span>        <span class="token class-name">ColorPicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选一个颜色"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $color<span class="token punctuation">,</span> supportsOpacity<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>                <span class="token comment">// 时间选择器</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">DatePicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $date<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token operator">...</span><span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> displayedComponents<span class="token punctuation">:</span> <span class="token punctuation">.</span>date<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选时间"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">DatePicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选时间"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $date<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">datePickerStyle</span><span class="token punctuation">(</span><span class="token class-name">GraphicalDatePickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxHeight<span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">)</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"时间：</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">date<span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> dateFt</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的代码中，有三种类型的 <code>Picker</code> 视图：</p><ol><li>默认的下拉风格 <code>Picker</code> 视图。这种类型的 <code>Picker</code> 视图在 <code>Form</code> 中使用，用户可以点击选择器来打开一个下拉菜单，然后从菜单中选择一个选项。</li></ol><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Section</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选区"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选一个"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $select<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"1"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"2"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>分段控制风格 <code>Picker</code> 视图。这种类型的 <code>Picker</code> 视图使用 <code>SegmentedPickerStyle()</code> 修饰符，它将选择器显示为一组水平排列的按钮，用户可以点击按钮来选择一个选项。</li></ol><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选一个"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $select<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"one"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"two"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token class-name">SegmentedPickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><code>ColorPicker</code> 和 <code>DatePicker</code> 视图。这两种类型的视图是 <code>Picker</code> 视图的特殊形式，它们分别用于选择颜色和日期。</li></ol><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">ColorPicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选一个颜色"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $color<span class="token punctuation">,</span> supportsOpacity<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token class-name">DatePicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选时间"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $date<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">datePickerStyle</span><span class="token punctuation">(</span><span class="token class-name">GraphicalDatePickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在所有这些 <code>Picker</code> 视图中，你都需要提供一个绑定的选择状态，这个状态会在用户选择一个新的选项时更新。你还需要为每个选项提供一个视图和一个唯一的标签。</p><h3 id="文字Picker"><a href="#文字Picker" class="headerlink" title="文字Picker"></a>文字Picker</h3><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p>文字 Picker 示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">StaticDataPickerView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedCategory <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"动作"</span></span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择的类别: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">selectedCategory</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影类别"</span></span><span class="token punctuation">,</span>                 selection<span class="token punctuation">:</span> $selectedCategory<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"动作"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"动作"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"喜剧"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"喜剧"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"剧情"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"剧情"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"恐怖"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"恐怖"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="使用枚举"><a href="#使用枚举" class="headerlink" title="使用枚举"></a>使用枚举</h4><p>使用枚举来创建选取器的示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">enum</span> <span class="token class-name">MovieCategory</span><span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">CaseIterable</span><span class="token punctuation">,</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> action <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"动作"</span></span>    <span class="token keyword">case</span> comedy <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"喜剧"</span></span>    <span class="token keyword">case</span> drama <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"剧情"</span></span>    <span class="token keyword">case</span> horror <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"恐怖"</span></span>    <span class="token keyword">var</span> id<span class="token punctuation">:</span> <span class="token class-name">MovieCategory</span> <span class="token punctuation">&#123;</span> <span class="token keyword">self</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">MoviePicker</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>   <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedCategory<span class="token punctuation">:</span> <span class="token class-name">MovieCategory</span> <span class="token operator">=</span> <span class="token punctuation">.</span>action  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>     <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影类别"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selectedCategory<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">MovieCategory</span><span class="token punctuation">.</span>allCases<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> category <span class="token keyword">in</span>             <span class="token class-name">Text</span><span class="token punctuation">(</span>category<span class="token punctuation">.</span>rawValue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span>       <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h4><p>SwiftUI 提供了多种内置的 <code>Picker</code> 样式，以改变 <code>Picker</code> 的外观和行为。以下是一些主要的 <code>Picker</code> 样式及其使用示例：</p><ul><li><code>DefaultPickerStyle</code>：根据平台和环境自动调整样式。这是默认的 <code>Picker</code> 样式。</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Label"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span>options<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>options<span class="token punctuation">[</span><span class="token short-argument">$0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>WheelPickerStyle</code>：以旋转轮的形式展示选项。在 iOS 上，这种样式会显示一个滚动的选择器。</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Label"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span>options<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>options<span class="token punctuation">[</span><span class="token short-argument">$0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token class-name">WheelPickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>SegmentedPickerStyle</code>：将选项以分段控件的形式展示。这种样式会显示一个分段控制，用户可以在其中选择一个选项。</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Label"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span>options<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>options<span class="token punctuation">[</span><span class="token short-argument">$0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token class-name">SegmentedPickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>InlinePickerStyle</code>：在列表或表格中内联展示选项。这种样式会在 <code>Form</code> 或 <code>List</code> 中显示一个内联的选择器。</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Label"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span>options<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>options<span class="token punctuation">[</span><span class="token short-argument">$0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token class-name">InlinePickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>MenuPickerStyle</code>：点击时以菜单的形式展示选项。这种样式会显示一个菜单，用户可以在其中选择一个选项。</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Label"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span>options<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>options<span class="token punctuation">[</span><span class="token short-argument">$0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token class-name">MenuPickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>.navigationLink</code>：在 iOS 16+ 中，点击后进入下一个页面。这种样式会显示一个导航链接，用户可以点击它来打开一个新的视图。</li><li><code>.radioGrouped</code>：仅在 macOS 中可用，以单选按钮组的形式展示选项。这种样式会显示一个单选按钮组，用户可以在其中选择一个选项。</li></ul><h3 id="ColorPicker"><a href="#ColorPicker" class="headerlink" title="ColorPicker"></a>ColorPicker</h3><p><code>ColorPicker</code> 是一个允许用户选择颜色的视图。以下是一个 <code>ColorPicker</code> 的使用示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedColor <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>white    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ColorPicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择一个颜色"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selectedColor<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"你选择的颜色"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span>selectedColor<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们创建了一个 <code>ColorPicker</code> 视图，用户可以通过这个视图选择一个颜色。我们使用 <code>@State</code> 属性包装器来创建一个可以绑定到 <code>ColorPicker</code> 的 <code>selectedColor</code> 状态。当用户选择一个新的颜色时，<code>selectedColor</code> 状态会自动更新，<code>Text</code> 视图的前景色也会相应地更新。</p><h3 id="DatePicker"><a href="#DatePicker" class="headerlink" title="DatePicker"></a>DatePicker</h3><h4 id="基本使用-1"><a href="#基本使用-1" class="headerlink" title="基本使用"></a>基本使用</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> releaseDate<span class="token punctuation">:</span> <span class="token class-name">Date</span> <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">DatePicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择电影发布日期"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $releaseDate<span class="token punctuation">,</span> displayedComponents<span class="token punctuation">:</span> <span class="token punctuation">.</span>date<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择的发布日期: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">releaseDate<span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> <span class="token class-name">DateFormatter</span><span class="token punctuation">.</span>dateMedium</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="选择多个日期"><a href="#选择多个日期" class="headerlink" title="选择多个日期"></a>选择多个日期</h4><p>在 iOS 16 中，您现在可以允许用户选择多个日期，MultiDatePicker 视图会显示一个日历，用户可以选择多个日期，可以设置选择范围。示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PMultiDatePicker</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>calendar<span class="token punctuation">)</span> <span class="token keyword">var</span> cal    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> dates<span class="token punctuation">:</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token class-name">DateComponents</span><span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">MultiDatePicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择个日子"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $dates<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>now<span class="token operator">...</span><span class="token punctuation">)</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> s<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token punctuation">&#123;</span>        dates<span class="token punctuation">.</span>compactMap <span class="token punctuation">&#123;</span> c <span class="token keyword">in</span>            cal<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span>c<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">formatted</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token punctuation">.</span>long<span class="token punctuation">,</span> time<span class="token punctuation">:</span> <span class="token punctuation">.</span>omitted<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">formatted</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="指定日期范围"><a href="#指定日期范围" class="headerlink" title="指定日期范围"></a>指定日期范围</h4><p>指定日期的范围，例如只能选择当前日期之后的日期，示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">DatePicker</span><span class="token punctuation">(</span>    <span class="token string-literal"><span class="token string">"选择日期"</span></span><span class="token punctuation">,</span>    selection<span class="token punctuation">:</span> $selectedDate<span class="token punctuation">,</span>    <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">,</span>    displayedComponents<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>date<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datePickerStyle</span><span class="token punctuation">(</span><span class="token class-name">WheelDatePickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">labelsHidden</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中：</p><ul><li><code>selection: $selectedDate</code> 表示选定的日期和时间。</li><li><code>in: Date()...</code> 表示可选日期的范围。在这个例子中，用户只能选择当前日期之后的日期。你也可以使用 <code>...Date()</code> 来限制用户只能选择当前日期之前的日期，或者使用 <code>Date().addingTimeInterval(86400*7)</code> 来限制用户只能选择从当前日期开始的接下来一周内的日期。</li><li><code>displayedComponents: [.date]</code> 表示 <code>DatePicker</code> 应该显示哪些组件。在这个例子中，我们只显示日期组件。你也可以使用 <code>.hourAndMinute</code> 来显示小时和分钟组件，或者同时显示日期和时间组件。</li><li><code>.datePickerStyle(WheelDatePickerStyle())</code> 表示 <code>DatePicker</code> 的样式。在这个例子中，我们使用滚轮样式。你也可以使用 <code>GraphicalDatePickerStyle()</code> 来应用图形样式。</li><li><code>.labelsHidden()</code> 表示隐藏 <code>DatePicker</code> 的标签。</li></ul><h3 id="PhotoPicker"><a href="#PhotoPicker" class="headerlink" title="PhotoPicker"></a>PhotoPicker</h3><h4 id="PhotoPicker-使用示例"><a href="#PhotoPicker-使用示例" class="headerlink" title="PhotoPicker 使用示例"></a>PhotoPicker 使用示例</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">PhotosUI</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedItem<span class="token punctuation">:</span> <span class="token class-name">PhotosPickerItem</span><span class="token operator">?</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedPhotoData<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token operator">?</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token keyword">let</span> item <span class="token operator">=</span> selectedItem<span class="token punctuation">,</span> <span class="token keyword">let</span> data <span class="token operator">=</span> selectedPhotoData<span class="token punctuation">,</span> <span class="token keyword">let</span> image <span class="token operator">=</span> <span class="token class-name">UIImage</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span>uiImage<span class="token punctuation">:</span> image<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择电影海报"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影海报"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>                <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>navigationBarTrailing<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">PhotosPicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selectedItem<span class="token punctuation">,</span> matching<span class="token punctuation">:</span> <span class="token punctuation">.</span>images<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择照片"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"photo"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>indigo<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">controlSize</span><span class="token punctuation">(</span><span class="token punctuation">.</span>extraLarge<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">buttonStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>borderedProminent<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> selectedItem<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> oldValue<span class="token punctuation">,</span> newValue <span class="token keyword">in</span>                <span class="token class-name">Task</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> <span class="token keyword">await</span> newValue<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">loadTransferable</span><span class="token punctuation">(</span>type<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        selectedPhotoData <span class="token operator">=</span> data                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="限制选择媒体类型"><a href="#限制选择媒体类型" class="headerlink" title="限制选择媒体类型"></a>限制选择媒体类型</h4><p>我们可以使用 <code>matching</code> 参数来过滤 <code>PhotosPicker</code> 中显示的媒体类型。这个参数接受一个 <code>PHAssetMediaType</code> 枚举值，可以是 <code>.images</code>、<code>.videos</code>、<code>.audio</code>、<code>.any</code> 等。</p><p>例如，如果我们只想显示图片，可以这样设置：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">PhotosPicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selectedItem<span class="token punctuation">,</span> matching<span class="token punctuation">:</span> <span class="token punctuation">.</span>images<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择照片"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"photo"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果我们想同时显示图片和视频，可以使用 <code>.any(of:)</code> 方法：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">PhotosPicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selectedItem<span class="token punctuation">,</span> matching<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>images<span class="token punctuation">,</span> <span class="token punctuation">.</span>videos<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择照片"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"photo"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>此外，我们还可以使用 <code>.not(_:)</code> 方法来排除某种类型的媒体。例如，如果我们想显示所有的图片，但是不包括 Live Photo，可以这样设置：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">PhotosPicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selectedItem<span class="token punctuation">,</span> matching<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>images<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">.</span>livePhotos<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择照片"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"photo"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这些设置可以让我们更精确地控制 <code>PhotosPicker</code> 中显示的媒体类型。</p><h4 id="选择多张图片"><a href="#选择多张图片" class="headerlink" title="选择多张图片"></a>选择多张图片</h4><p>以下示例演示了如何使用 <code>PhotosPicker</code> 选择多张图片，并将它们显示在一个 <code>LazyVGrid</code> 中：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">PhotosUI</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedItems<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">PhotosPickerItem</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">PhotosPickerItem</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedPhotosData<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Data</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">Data</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">LazyVGrid</span><span class="token punctuation">(</span>columns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">adaptive</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>selectedPhotosData<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> photoData <span class="token keyword">in</span>                        <span class="token keyword">if</span> <span class="token keyword">let</span> image <span class="token operator">=</span> <span class="token class-name">UIImage</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> photoData<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Image</span><span class="token punctuation">(</span>uiImage<span class="token punctuation">:</span> image<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token number">10.0</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"书籍"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>                <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>navigationBarTrailing<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">PhotosPicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selectedItems<span class="token punctuation">,</span> maxSelectionCount<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> matching<span class="token punctuation">:</span> <span class="token punctuation">.</span>images<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"book.fill"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>brown<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> selectedItems<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> oldValue<span class="token punctuation">,</span> newValue <span class="token keyword">in</span>                        <span class="token keyword">for</span> newItem <span class="token keyword">in</span> newValue <span class="token punctuation">&#123;</span>                            <span class="token class-name">Task</span> <span class="token punctuation">&#123;</span>                                <span class="token keyword">if</span> <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> <span class="token keyword">await</span> newItem<span class="token punctuation">.</span><span class="token function">loadTransferable</span><span class="token punctuation">(</span>type<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                    selectedPhotosData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>                                <span class="token punctuation">&#125;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上示例中，我们使用了 <code>PhotosPicker</code> 的 <code>maxSelectionCount</code> 参数来限制用户最多只能选择 5 张图片。当用户选择图片后，我们将图片数据保存在 <code>selectedPhotosData</code> 数组中，并在 <code>LazyVGrid</code> 中显示这些图片。</p><h3 id="字体Picker"><a href="#字体Picker" class="headerlink" title="字体Picker"></a>字体Picker</h3><p>这段代码实现了一个字体选择器的功能，用户可以在其中选择和查看自己喜欢的字体。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> fontFamily<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择字体:"</span></span><span class="token punctuation">)</span>            <span class="token class-name">FontPicker</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">:</span> $fontFamily<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">equatable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">FontPicker</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token punctuation">,</span> <span class="token class-name">Equatable</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> fontFamily<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">fontFamily</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $fontFamily<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">NSFontManager</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>availableFontFamilies<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> family <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span>family<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span>family<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token operator">==</span> <span class="token punctuation">(</span>l<span class="token punctuation">:</span> <span class="token class-name">FontPicker</span><span class="token punctuation">,</span> r<span class="token punctuation">:</span> <span class="token class-name">FontPicker</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Bool</span> <span class="token punctuation">&#123;</span>        l<span class="token punctuation">.</span>fontFamily <span class="token operator">==</span> r<span class="token punctuation">.</span>fontFamily    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="WheelPicker"><a href="#WheelPicker" class="headerlink" title="WheelPicker"></a>WheelPicker</h3><p>本示例是一个可折叠的滚轮选择器 <code>CollapsibleWheelPicker</code>。这个选择器允许用户从一组书籍中选择一本。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selection <span class="token operator">=</span> <span class="token number">0</span>  <span class="token keyword">let</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Book 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Book 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Book 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Book 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Book 5"</span></span><span class="token punctuation">]</span>  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">NavigationStack</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">CollapsibleWheelPicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">item</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Books"</span></span><span class="token punctuation">)</span>          <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">items<span class="token punctuation">[</span>selection<span class="token punctuation">]</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">CollapsibleWheelPicker</span><span class="token operator">&lt;</span><span class="token class-name">SelectionValue</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">,</span> <span class="token class-name">Label</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">SelectionValue</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token punctuation">,</span> <span class="token class-name">Label</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> selection<span class="token punctuation">:</span> <span class="token class-name">SelectionValue</span>    <span class="token attribute atrule">@ViewBuilder</span> <span class="token keyword">let</span> content<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span>    <span class="token attribute atrule">@ViewBuilder</span> <span class="token keyword">let</span> label<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Label</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">CollapsibleView</span><span class="token punctuation">(</span>label<span class="token punctuation">:</span> label<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Picker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selection<span class="token punctuation">,</span> content<span class="token punctuation">:</span> content<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">EmptyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>wheel<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">CollapsibleView</span><span class="token operator">&lt;</span><span class="token class-name">Label</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">Label</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isSecondaryViewVisible <span class="token operator">=</span> <span class="token boolean">false</span>  <span class="token attribute atrule">@ViewBuilder</span> <span class="token keyword">let</span> label<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Label</span>  <span class="token attribute atrule">@ViewBuilder</span> <span class="token keyword">let</span> content<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span>  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Group</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> isSecondaryViewVisible<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> label<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">buttonStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>plain<span class="token punctuation">)</span>      <span class="token keyword">if</span> isSecondaryViewVisible <span class="token punctuation">&#123;</span>        <span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 <code>ContentView</code> 中，我们创建了一个 <code>CollapsibleWheelPicker</code> 视图。这个视图包含一个滚轮样式的选择器，用户可以从中选择一本书。选择的书籍会绑定到 <code>selection</code> 变量。</p><p><code>CollapsibleWheelPicker</code> 视图是一个可折叠的滚轮选择器，它接受一个绑定的选择变量、一个内容视图和一个标签视图。内容视图是一个 <code>Picker</code> 视图，用于显示可供选择的书籍。标签视图是一个 <code>Text</code> 视图，显示当前选择的书籍。</p><h2 id="Toggle"><a href="#Toggle" class="headerlink" title="Toggle"></a>Toggle</h2><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/toggle-ap01.png" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/toggle-ap01.png"></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>使用示例如下</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayToggleView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isEnable <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 普通样式</span>        <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isEnable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">isEnable <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"开了"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"关了"</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// 按钮样式</span>        <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isEnable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">isEnable <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"打开了"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"关闭了"</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"cloud.moon"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>pink<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">controlSize</span><span class="token punctuation">(</span><span class="token punctuation">.</span>large<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>button<span class="token punctuation">)</span>                <span class="token comment">// Switch 样式</span>        <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isEnable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">isEnable <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"开了"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"关了"</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token class-name">SwitchToggleStyle</span><span class="token punctuation">(</span>tint<span class="token punctuation">:</span> <span class="token punctuation">.</span>orange<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// 自定义样式</span>        <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isEnable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>isEnable <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"录音中"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"已静音"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token class-name">PCToggleStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 自定义样式</span><span class="token keyword">struct</span> <span class="token class-name">PCToggleStyle</span><span class="token punctuation">:</span> <span class="token class-name">ToggleStyle</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">makeBody</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> <span class="token class-name">Configuration</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            configuration<span class="token punctuation">.</span>label            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"mic.square.fill"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"mic.slash.circle.fill"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">renderingMode</span><span class="token punctuation">(</span><span class="token punctuation">.</span>original<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                    configuration<span class="token punctuation">.</span>isOn<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="样式-1"><a href="#样式-1" class="headerlink" title="样式"></a>样式</h3><p>Toggle 可以设置 toggleStyle，可以自定义样式。</p><p>下表是不同平台支持的样式</p><ul><li>DefaultToggleStyle：iOS 表现的是 Switch，macOS 是 Checkbox</li><li>SwitchToggleStyle：iOS 和 macOS 都支持</li><li>CheckboxToggleStyle：只支持 macOS</li></ul><h3 id="纯图像的-Toggle"><a href="#纯图像的-Toggle" class="headerlink" title="纯图像的 Toggle"></a>纯图像的 Toggle</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isMuted <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isMuted<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> isMuted <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"speaker.slash.fill"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"speaker.fill"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>button<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="自定义-ToggleStyle"><a href="#自定义-ToggleStyle" class="headerlink" title="自定义 ToggleStyle"></a>自定义 ToggleStyle</h3><p>做一个自定义的切换按钮 OfflineModeToggleStyle。这个切换按钮允许用户控制是否开启离线模式。代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isOfflineMode <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isOfflineMode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Offline Mode"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token class-name">OfflineModeToggleStyle</span><span class="token punctuation">(</span>systemImage<span class="token punctuation">:</span> isOfflineMode <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"wifi.slash"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"wifi"</span></span><span class="token punctuation">,</span> activeColor<span class="token punctuation">:</span> <span class="token punctuation">.</span>blue<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">OfflineModeToggleStyle</span><span class="token punctuation">:</span> <span class="token class-name">ToggleStyle</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> systemImage<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> activeColor<span class="token punctuation">:</span> <span class="token class-name">Color</span>    <span class="token keyword">func</span> <span class="token function-definition function">makeBody</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> <span class="token class-name">Configuration</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            configuration<span class="token punctuation">.</span>label            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> activeColor <span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token punctuation">.</span>systemGray5<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span>overlay <span class="token punctuation">&#123;</span>                    <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span>overlay <span class="token punctuation">&#123;</span>                            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> systemImage<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> activeColor <span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token punctuation">.</span>systemGray5<span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                        <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token number">8</span> <span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                    <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        configuration<span class="token punctuation">.</span>isOn<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们定义了一个 OfflineModeToggleStyle，它接受两个参数：systemImage 和 activeColor。systemImage 是一个字符串，表示图像的系统名称。activeColor 是一个颜色，表示激活状态的颜色。</p><h3 id="动画化的-Toggle"><a href="#动画化的-Toggle" class="headerlink" title="动画化的 Toggle"></a>动画化的 Toggle</h3><p>以下是一个自定义的切换按钮 MuteToggleStyle。这个切换按钮允许用户控制是否开启静音模式。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isMuted <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isMuted<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Mute Mode"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span>isMuted <span class="token operator">?</span> <span class="token punctuation">.</span>white <span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token class-name">MuteToggleStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> maxHeight<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">MuteToggleStyle</span><span class="token punctuation">:</span> <span class="token class-name">ToggleStyle</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> onImage <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"speaker.slash.fill"</span></span>    <span class="token keyword">var</span> offImage <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"speaker.2.fill"</span></span>    <span class="token keyword">func</span> <span class="token function-definition function">makeBody</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> <span class="token class-name">Configuration</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            configuration<span class="token punctuation">.</span>label            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token punctuation">.</span>systemGray6<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>yellow<span class="token punctuation">)</span>                <span class="token punctuation">.</span>overlay <span class="token punctuation">&#123;</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> onImage <span class="token punctuation">:</span> offImage<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token number">10</span> <span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                    <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        configuration<span class="token punctuation">.</span>isOn<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">ToggleStyle</span> <span class="token keyword">where</span> <span class="token keyword">Self</span> <span class="token operator">==</span> <span class="token class-name">MuteToggleStyle</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> mute<span class="token punctuation">:</span> <span class="token class-name">MuteToggleStyle</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们定义了一个 MuteToggleStyle，它接受两个参数：onImage 和 offImage。onImage 是一个字符串，表示激活状态的图像的系统名称。offImage 是一个字符串，表示非激活状态的图像的系统名称。</p><h3 id="两个标签的-Toggle"><a href="#两个标签的-Toggle" class="headerlink" title="两个标签的 Toggle"></a>两个标签的 Toggle</h3><p>以下是一个自定义的切换按钮，它有两个标签。这个切换按钮允许用户控制是否开启静音模式。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $mute<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"静音"</span></span><span class="token punctuation">)</span>  <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"这将关闭所有声音"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Slider"><a href="#Slider" class="headerlink" title="Slider"></a>Slider</h2><p>简单示例</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlaySliderView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> count<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Slider</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> $count<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token operator">...</span><span class="token number">100</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token class-name">Int</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下代码演示了如何创建一个自定义的 <code>Slider</code> 控件，用于调整亮度。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> brightness<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token operator">=</span> <span class="token number">50</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isEditing<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Brightness Control"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">BrightnessSlider</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> $brightness<span class="token punctuation">,</span> range<span class="token punctuation">:</span> <span class="token number">0</span><span class="token operator">...</span><span class="token number">100</span><span class="token punctuation">,</span> step<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> isEditing<span class="token punctuation">:</span> $isEditing<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Brightness: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token class-name">Int</span><span class="token punctuation">(</span>brightness<span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">, is changing: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">isEditing</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>footnote<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">BrightnessSlider</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> value<span class="token punctuation">:</span> <span class="token class-name">Double</span>    <span class="token keyword">var</span> range<span class="token punctuation">:</span> <span class="token class-name">ClosedRange</span><span class="token operator">&lt;</span><span class="token class-name">Double</span><span class="token operator">></span>    <span class="token keyword">var</span> step<span class="token punctuation">:</span> <span class="token class-name">Double</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> isEditing<span class="token punctuation">:</span> <span class="token class-name">Bool</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Slider</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> $value<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> range<span class="token punctuation">,</span> step<span class="token punctuation">:</span> step<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"亮度"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"light.max"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> minimumValueLabel<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token class-name">Int</span><span class="token punctuation">(</span>range<span class="token punctuation">.</span>lowerBound<span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> maximumValueLabel<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token class-name">Int</span><span class="token punctuation">(</span>range<span class="token punctuation">.</span>upperBound<span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> onEditingChanged<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token function">print</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们创建了一个 <code>BrightnessSlider</code> 控件，它是一个自定义的 <code>Slider</code> 控件，用于调整亮度。<code>BrightnessSlider</code> 接受一个 <code>value</code> 绑定，一个 <code>range</code> 范围，一个 <code>step</code> 步长，以及一个 <code>isEditing</code> 绑定。在 <code>BrightnessSlider</code> 中，我们使用 <code>Slider</code> 控件来显示亮度调整器。我们还使用 <code>Label</code> 来显示亮度调整器的标题，并使用 <code>minimumValueLabel</code> 和 <code>maximumValueLabel</code> 来显示亮度调整器的最小值和最大值。最后，我们使用 <code>onEditingChanged</code> 修饰符来监听亮度调整器的编辑状态。</p><h2 id="Stepper"><a href="#Stepper" class="headerlink" title="Stepper"></a>Stepper</h2><p><code>Stepper</code> 控件允许用户通过点击按钮来增加或减少数值。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> count<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">2</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Stepper</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> $count<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token operator">...</span><span class="token number">20</span><span class="token punctuation">,</span> step<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"共</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">count</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> onEditingChanged<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> b <span class="token keyword">in</span>            <span class="token function">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end Stepper</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 <code>ContentView</code> 中，我们定义了一个状态变量 <code>count</code>，并将其初始化为 2。然后，我们创建了一个 <code>Stepper</code> 视图，并将其绑定到 <code>count</code> 状态变量。</p><p><code>Stepper</code> 视图的值范围为 2 到 20，步进值为 2，这意味着每次点击按钮，<code>count</code> 的值会增加或减少 2。我们还添加了一个标签，显示当前的 <code>count</code> 值。</p><p>我们还添加了 <code>onEditingChanged</code> 回调，当 <code>Stepper</code> 的值改变时，会打印出一个布尔值，表示 <code>Stepper</code> 是否正在被编辑。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容已整理到小册子中，小册子代码在 &lt;a href=&quot;https://github.com/ming1016/SwiftPamphletApp&quot;&gt;Github&lt;/a&gt; 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买&lt;a href=&quot;https://apps
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</title>
    <link href="https://starming.com/2024/05/18/pamphlet-series-layout/"/>
    <id>https://starming.com/2024/05/18/pamphlet-series-layout/</id>
    <published>2024-05-18T01:48:04.000Z</published>
    <updated>2024-05-25T12:27:13.953Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容已整理到小册子中，小册子代码在 <a href="https://github.com/ming1016/SwiftPamphletApp">Github</a> 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">“戴铭的开发小册子”</a>应用(98元)，来跟踪查看本文内容新增和更新。</p><p>本文属于小册子系列中的一篇，已发布系列文章有：</p><ul><li><a href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/">小册子之如何使用 SwiftData 开发 SwiftUI 应用</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-widget/">小册子之简说 Widget 小组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-listdataview/">小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</a></li><li>【本篇】<a href="https://starming.com/2024/05/18/pamphlet-series-layout/">小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-form/">小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/25/pamphlet-series-animation/">小册子之 SwiftUI 动画</a></li></ul><h2 id="Navigation导航"><a href="#Navigation导航" class="headerlink" title="Navigation导航"></a>Navigation导航</h2><h3 id="Navigation"><a href="#Navigation" class="headerlink" title="Navigation"></a>Navigation</h3><p>控制导航启动状态、管理 size class 之间的 transition 和响应 deep link。</p><p>Navigation bar 有新的默认行为，如果没有提供标题，导航栏默认为 inline  title 显示模式。使用 <code>navigationBarTitleDisplayMode(_:)</code> 改变显示模式。如果 navigation bar  没有标题、工具栏项或搜索内容，它就会自动隐藏。使用 <code>.toolbar(.visible)</code> modifier 显示一个空 navigation bar。</p><p>参考：</p><ul><li><a href="https://developer.apple.com/documentation/swiftui/migrating-to-new-navigation-types?changes=latest_minor">Migrating to New Navigation Types</a> 官方迁移指南</li><li><a href="https://developer.apple.com/documentation/swiftui/navigationstack?changes=latest_minor">NavigationStack</a></li><li><a href="https://developer.apple.com/documentation/swiftui/navigationsplitview">NavigationSplitView</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2022/10054/">The SwiftUI cookbook for navigation</a></li></ul><p>NavigationStack 的示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PNavigationStack</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span> <span class="token comment">// 深层链接</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> $a<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">..&lt;</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"第 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 行"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">.circle"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"第 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 行内容"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"NavigationStack Demo"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的 path 设置了 stack 的深度路径。</p><p>NavigationSplitView 两栏的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PNavigationSplitViewTwoColumn</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"one"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"two"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"three"</span></span><span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> choice<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationSplitView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $choice<span class="token punctuation">,</span> rowContent<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> detail<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>choice <span class="token operator">??</span> <span class="token string-literal"><span class="token string">"选一个"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>NavigationSplitView 三栏的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PNavigationSplitViewThreeColumn</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">struct</span> <span class="token class-name">Group</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Hashable</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>        <span class="token keyword">var</span> subs<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> gps <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token class-name">Group</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"One"</span></span><span class="token punctuation">,</span> subs<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"o1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"o2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"o3"</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Group</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Two"</span></span><span class="token punctuation">,</span> subs<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"t1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"t2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"t3"</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>        <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> choiceGroup<span class="token punctuation">:</span> <span class="token class-name">Group</span><span class="token operator">?</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> choiceSub<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>        <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> cv <span class="token operator">=</span> <span class="token class-name">NavigationSplitViewVisibility</span><span class="token punctuation">.</span>automatic        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationSplitView</span><span class="token punctuation">(</span>columnVisibility<span class="token punctuation">:</span> $cv<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>gps<span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $choiceGroup<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> g <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationSplitViewColumnWidth</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>choiceGroup<span class="token operator">?</span><span class="token punctuation">.</span>subs <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $choiceSub<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> detail<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>choiceSub <span class="token operator">??</span> <span class="token string-literal"><span class="token string">"选一个"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"点击"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                cv <span class="token operator">=</span> <span class="token punctuation">.</span>all            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">navigationSplitViewStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>prominentDetail<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>navigationSplitViewColumnWidth() </code> 是用来自定义宽的，<code>navigationSplitViewStyle</code> 设置为 <code>.prominentDetail</code> 是让 detail 的视图尽量保持其大小。</p><p>SwiftUI 新加了个<a href="https://developer.apple.com/documentation/swiftui/presentedwindowcontent/toolbar(_:in:)">功能</a>可以配置是否隐藏 Tabbar，这样在从主页进入下一级时就可以选择不显示底部标签栏了，示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toolbar</span><span class="token punctuation">(</span><span class="token punctuation">.</span>hidden<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>tabBar<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>相比较以前 NavigationView 增强的是 destination 可以根据值的不同类型展示不同的目的页面，示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PNavigationStackDestination</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"字符串"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"字符串"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"红色"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"不同类型 Destination"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> c <span class="token keyword">in</span>                c<span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">s</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 的 detail"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对 toolbar 的自定义，示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">toolbar</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"toolbar"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"new"</span></span><span class="token punctuation">,</span> placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>secondaryAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"New Invitation"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"envelope"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">toolbarRole</span><span class="token punctuation">(</span><span class="token punctuation">.</span>editor<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下是废弃的 NavigationView 的用法。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/navigation-ap01.jpeg" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/navigation-ap01.jpeg"></p><p>对应代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayNavigationView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> lData <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">...</span><span class="token number">10</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">LinearGradient</span><span class="token punctuation">(</span>colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>pink<span class="token punctuation">,</span> <span class="token punctuation">.</span>orange<span class="token punctuation">]</span><span class="token punctuation">,</span> startPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>topLeading<span class="token punctuation">,</span> endPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottomTrailing<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token class-name">List</span><span class="token punctuation">(</span>lData<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token class-name">NavigationLink</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">PNavDetailView</span><span class="token punctuation">(</span>contentStr<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">LinearGradient</span><span class="token punctuation">(</span>colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>mint<span class="token punctuation">,</span> <span class="token punctuation">.</span>yellow<span class="token punctuation">]</span><span class="token punctuation">,</span> startPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>topLeading<span class="token punctuation">,</span> endPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottomTrailing<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"一个 NavigationView 的示例"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>white<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">safeAreaInset</span><span class="token punctuation">(</span>edge<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"bottom1"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"bottom2"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"bottom3"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                    <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">LinearGradient</span><span class="token punctuation">(</span>colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>purple<span class="token punctuation">,</span> <span class="token punctuation">.</span>blue<span class="token punctuation">]</span><span class="token punctuation">,</span> startPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>topLeading<span class="token punctuation">,</span> endPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottomTrailing<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"数字列表"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>            <span class="token comment">// placement 共有 keyboard、destructiveAction、cancellationAction、confirmationAction、status、primaryAction、navigation、principal、automatic 这些</span>            <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>primaryAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"primaryAction"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token punctuation">.</span>ultraThinMaterial<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// 通过 ToolbarItemGroup 可以简化相同位置 ToolbarItem 的编写。</span>            <span class="token class-name">ToolbarItemGroup</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>navigation<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"返回"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"前进"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">PCToolbar</span><span class="token punctuation">(</span>doDestruct<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"删除了"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> doCancel<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"取消了"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> doConfirm<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"确认了"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>status<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"status"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>principal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"principal"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                    <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>keyboard<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Touch Bar Button"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end toolbar</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - NavigationView 的目的页面</span><span class="token keyword">struct</span> <span class="token class-name">PNavDetailView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>presentationMode<span class="token punctuation">)</span> <span class="token keyword">var</span> pMode<span class="token punctuation">:</span> <span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">PresentationMode</span><span class="token operator">></span>    <span class="token keyword">var</span> contentStr<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LinearGradient</span><span class="token punctuation">(</span>colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>purple<span class="token punctuation">,</span> <span class="token punctuation">.</span>blue<span class="token punctuation">]</span><span class="token punctuation">,</span> startPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>topLeading<span class="token punctuation">,</span> endPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottomTrailing<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>contentStr<span class="token punctuation">)</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"返回"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    pMode<span class="token punctuation">.</span>wrappedValue<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end ZStack</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 自定义 toolbar</span><span class="token comment">// 通过 ToolbarContent 创建可重复使用的 toolbar 组</span><span class="token keyword">struct</span> <span class="token class-name">PCToolbar</span><span class="token punctuation">:</span> <span class="token class-name">ToolbarContent</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> doDestruct<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span>    <span class="token keyword">let</span> doCancel<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span>    <span class="token keyword">let</span> doConfirm<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">ToolbarContent</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>destructiveAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"删除"</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> doDestruct<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>cancellationAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"取消"</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> doCancel<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>confirmationAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"确定"</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> doConfirm<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>toolbar 的位置设置可选项如下：</p><ul><li>primaryAction：放置到最主要位置，macOS 就是放在 toolbar 的最左边</li><li>automatic：根据平台不同放到默认位置</li><li>confirmationAction：一些确定的动作</li><li>cancellationAction：取消动作</li><li>destructiveAction：删除的动作</li><li>status：状态变化，比如检查更新等动作</li><li>navigation：导航动作，比如浏览器的前进后退</li><li>principal：突出的位置，iOS 和 macOS 会出现在中间的位置</li><li>keyboard：macOS 会出现在 Touch Bar 里。iOS 会出现在弹出的虚拟键盘上。</li></ul><h3 id="NavigationStack"><a href="#NavigationStack" class="headerlink" title="NavigationStack"></a>NavigationStack</h3><h4 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h4><p>假设我们有一个 TVShow 结构体和一个 Book 结构体，它们分别包含电视剧和书籍的名字。当用户点击一个电视剧或书籍的名字时，他们会被导航到相应的详细信息页面。</p><p>以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">TVShow</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">Book</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> tvShows <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Game of Thrones"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Breaking Bad"</span></span><span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> books <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">Book</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"1984"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Book</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"To Kill a Mockingbird"</span></span><span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Section</span><span class="token punctuation">(</span>header<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Best TV Shows"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>tvShows<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> show <span class="token keyword">in</span>                        <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> show<span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span>show<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Section</span><span class="token punctuation">(</span>header<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Books"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>books<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> book <span class="token keyword">in</span>                        <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> book<span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">TVShow</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> show <span class="token keyword">in</span>                <span class="token class-name">TVShowView</span><span class="token punctuation">(</span>show<span class="token punctuation">:</span> show<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> book <span class="token keyword">in</span>                <span class="token class-name">BookView</span><span class="token punctuation">(</span>book<span class="token punctuation">:</span> book<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Media"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">TVShowView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> show<span class="token punctuation">:</span> <span class="token class-name">TVShow</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Details for </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">show<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">BookView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> book<span class="token punctuation">:</span> <span class="token class-name">Book</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Details for </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="全局路由"><a href="#全局路由" class="headerlink" title="全局路由"></a>全局路由</h4><p>先写个路由的枚举</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">enum</span> <span class="token class-name">Route</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> all    <span class="token keyword">case</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">)</span>    <span class="token keyword">case</span> <span class="token function">detail</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">Book</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> des<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 App 中设置好全局路由</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">LearnNavApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WindowGroup</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">NavigationStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Route</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> route <span class="token keyword">in</span>                        <span class="token keyword">switch</span> route <span class="token punctuation">&#123;</span>                            <span class="token keyword">case</span> <span class="token punctuation">.</span>all<span class="token punctuation">:</span>                                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"显示所有图书"</span></span><span class="token punctuation">)</span>                            <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">let</span> book<span class="token punctuation">)</span><span class="token punctuation">:</span>                                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"添加书 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                            <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">detail</span><span class="token punctuation">(</span><span class="token keyword">let</span> book<span class="token punctuation">)</span><span class="token punctuation">:</span>                                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"详细 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>des</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所有视图都可调用，调用方式如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">NavigationLink</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"查看书籍详细说明"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Route</span><span class="token punctuation">.</span><span class="token function">detail</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"1984"</span></span><span class="token punctuation">,</span> des<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"1984 Detail"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="NavigationPath"><a href="#NavigationPath" class="headerlink" title="NavigationPath"></a>NavigationPath</h3><p><code>NavigationPath</code> 是一个用于管理 SwiftUI 中导航路径的工具。它可以帮助你在 SwiftUI 中实现更复杂的导航逻辑。</p><p>在 SwiftUI 中，我们通常使用 <code>NavigationLink</code> 来实现导航。然而，<code>NavigationLink</code> 只能实现简单的前进导航，如果你需要实现更复杂的导航逻辑，例如后退、跳转到任意页面等，你就需要使用 <code>NavigationPath</code>。</p><p><code>NavigationPath</code> 的工作原理是，它维护了一个路径数组，每个元素代表一个页面。当你需要导航到一个新的页面时，你只需要将这个页面添加到路径数组中。当你需要后退时，你只需要从路径数组中移除最后一个元素。这样，你就可以实现任意复杂的导航逻辑。</p><p>看个例子</p><p>假设我们有一个 TVShow 结构体，它包含电视剧的名字。当用户点击一个电视剧的名字时，他们会被导航到这个电视剧的详细信息页面。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> path <span class="token operator">=</span> <span class="token class-name">NavigationPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> tvShows <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Game of Thrones"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Breaking Bad"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"The Witcher"</span></span><span class="token punctuation">)</span> <span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> $path<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Select a TV show to get started."</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>subheadline<span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>semibold<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>tvShows<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> show <span class="token keyword">in</span>                    <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> show<span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span>show<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>subheadline<span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>medium<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> showFriends<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"This isn't navigation"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">TVShow</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> destination<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> show <span class="token keyword">in</span>                <span class="token class-name">TVShowView</span><span class="token punctuation">(</span>onSelectReset<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> <span class="token function">popToRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> show<span class="token punctuation">:</span> show<span class="token punctuation">,</span> otherShows<span class="token punctuation">:</span> tvShows<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Select your show"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> path<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> oldValue<span class="token punctuation">,</span> newValue <span class="token keyword">in</span>            <span class="token function">print</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">showFriends</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> show <span class="token operator">=</span> <span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Friends"</span></span><span class="token punctuation">)</span>        path<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>show<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">func</span> <span class="token function-definition function">popToRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        path<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span>count<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">TVShowView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> onSelectReset<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span>    <span class="token keyword">var</span> show<span class="token punctuation">:</span> <span class="token class-name">TVShow</span>    <span class="token keyword">var</span> otherShows<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">TVShow</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>show<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>bottom<span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> onSelectReset<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Reset Selection"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>otherShows<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> otherShow <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>otherShow<span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">TVShow</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> premiereDate<span class="token punctuation">:</span> <span class="token class-name">Date</span> <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>now    <span class="token keyword">var</span> description<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"detail"</span></span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码中，<code>NavigationPath</code> 被用作一个 <code>@State</code> 变量，这意味着它会自动响应变化，并更新视图。当你修改 <code>NavigationPath</code> 中的路径数组时，视图会自动更新，显示新的页面。</p><h3 id="NavigationSplitView"><a href="#NavigationSplitView" class="headerlink" title="NavigationSplitView"></a>NavigationSplitView</h3><p>以下是一个基于 NavigationSplitView 的三栏视图的示例。这个示例包含了一个主视图，一个次级视图和一个详细视图。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> books<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Book</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token class-name">Book</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Book 1"</span></span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Author 1"</span></span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Description 1"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Book</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Book 2"</span></span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Author 2"</span></span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Description 2"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Book</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Book 3"</span></span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Author 3"</span></span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Description 3"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> selectedBook<span class="token punctuation">:</span> <span class="token class-name">Book</span><span class="token operator">?</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> splitVisibility<span class="token punctuation">:</span> <span class="token class-name">NavigationSplitViewVisibility</span> <span class="token operator">=</span> <span class="token punctuation">.</span>all    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationSplitView</span><span class="token punctuation">(</span>columnVisibility<span class="token punctuation">:</span> $splitVisibility<span class="token punctuation">,</span> sidebar<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> book <span class="token keyword">in</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> selectedBook <span class="token operator">=</span> book <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> book <span class="token operator">=</span> selectedBook <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Author: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>author</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Select a Book"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> detail<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> book <span class="token operator">=</span> selectedBook <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>description<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Book details will appear here"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> selectedBook<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> oldValue<span class="token punctuation">,</span> newValue <span class="token keyword">in</span>            <span class="token comment">//...</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">Book</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Equatable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> description<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例中，<code>sidebar</code> 是主视图，它显示了一个图书列表。当用户选择一个图书时，<code>content</code> 视图会显示图书的作者，<code>detail</code> 视图会显示图书的详细信息。<code>NavigationSplitView</code> 会根据 <code>splitVisibility</code> 的值来决定显示哪些视图。</p><h3 id="自定义导航栏"><a href="#自定义导航栏" class="headerlink" title="自定义导航栏"></a>自定义导航栏</h3><h4 id="交互样式"><a href="#交互样式" class="headerlink" title="交互样式"></a>交互样式</h4><p>使用 <code>navigationSplitViewStyle(_:)</code> 修饰符</p><h4 id="改变标签栏背景色"><a href="#改变标签栏背景色" class="headerlink" title="改变标签栏背景色"></a>改变标签栏背景色</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">toolbarBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>yellow<span class="token punctuation">.</span>gradient<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>automatic<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toolbarBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>visible<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>automatic<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="列宽"><a href="#列宽" class="headerlink" title="列宽"></a>列宽</h4><p> <code>navigationSplitViewColumnWidth(_:)</code> 修饰符用于指定列宽。</p><p> 设置列的最小、最大和理想大小，使用 <code>navigationSplitViewColumnWidth(min:ideal:max:)</code>。可以修饰于不同的列上。</p><h4 id="自定返回按钮"><a href="#自定返回按钮" class="headerlink" title="自定返回按钮"></a>自定返回按钮</h4><p>先通过修饰符隐藏系统返回按钮 <code>.navigationBarBackButtonHidden(true)</code>。然后通过 <code>ToolbarItem(placement: .navigationBarLeading)</code> 来添加自定义的返回按钮。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">BookDetailView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> book<span class="token punctuation">:</span> <span class="token class-name">Book</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> isDetailShown<span class="token punctuation">:</span> <span class="token class-name">Bool</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Author: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>author</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">navigationBarBackButtonHidden</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>title<span class="token punctuation">)</span>        <span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>            <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>navigationBarLeading<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>                    isDetailShown <span class="token operator">=</span> <span class="token boolean">false</span>                <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"chevron.backward"</span></span><span class="token punctuation">)</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Back to Books"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Inspectors右侧多出一栏"><a href="#Inspectors右侧多出一栏" class="headerlink" title="Inspectors右侧多出一栏"></a>Inspectors右侧多出一栏</h3><p>Inspector 的示例</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">Book</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> description<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> books<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Book</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token class-name">Book</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Book 1"</span></span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Author 1"</span></span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Description 1"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Book</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Book 2"</span></span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Author 2"</span></span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Description 2"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Book</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Book 3"</span></span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Author 3"</span></span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Description 3"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> selectedBook<span class="token punctuation">:</span> <span class="token class-name">Book</span><span class="token operator">?</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> showInspector<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> splitVisibility<span class="token punctuation">:</span> <span class="token class-name">NavigationSplitViewVisibility</span> <span class="token operator">=</span> <span class="token punctuation">.</span>all        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationSplitView</span><span class="token punctuation">(</span>columnVisibility<span class="token punctuation">:</span> $splitVisibility<span class="token punctuation">,</span> sidebar<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> book <span class="token keyword">in</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> selectedBook <span class="token operator">=</span> book <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> book <span class="token operator">=</span> selectedBook <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Author: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>author</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Select a Book"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> detail<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Inspector 开关"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                showInspector<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> book <span class="token operator">=</span> selectedBook <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>description<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Book details will appear here"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">inspector</span><span class="token punctuation">(</span>isPresented<span class="token punctuation">:</span> $showInspector<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> book <span class="token operator">=</span> selectedBook <span class="token punctuation">&#123;</span>                <span class="token class-name">InspectorView</span><span class="token punctuation">(</span>book<span class="token punctuation">:</span> book<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">InspectorView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> book<span class="token punctuation">:</span> <span class="token class-name">Book</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Author: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>author</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">inspectorColumnWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">presentationDetents</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span>medium<span class="token punctuation">,</span> <span class="token punctuation">.</span>large<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>它显示了一个图书列表。当用户选择一个图书时，会显示 InspectorView，这是辅助视图，它显示了图书的详细信息。inspector 方法用于显示和隐藏 InspectorView，inspectorColumnWidth 方法用于设置辅助视图的宽度，presentationDetents 方法用于设置辅助视图的大小。</p><h3 id="导航状态保存和还原"><a href="#导航状态保存和还原" class="headerlink" title="导航状态保存和还原"></a>导航状态保存和还原</h3><p>通过 SceneStorage 保存导航路径，程序终止时会持久化存储路径，重启时恢复路径。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">protocol</span> <span class="token class-name">URLProcessor</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">associatedtype</span> <span class="token class-name">RouteType</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span>    <span class="token keyword">func</span> <span class="token function-definition function">process</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> url<span class="token punctuation">:</span> <span class="token constant">URL</span><span class="token punctuation">,</span> <span class="token keyword">mutating</span><span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token punctuation">[</span><span class="token class-name">RouteType</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">protocol</span> <span class="token class-name">UserActivityProcessor</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">associatedtype</span> <span class="token class-name">RouteType</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span>    <span class="token keyword">func</span> <span class="token function-definition function">process</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> activity<span class="token punctuation">:</span> <span class="token class-name">NSUserActivity</span><span class="token punctuation">,</span> <span class="token keyword">mutating</span><span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token punctuation">[</span><span class="token class-name">RouteType</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token attribute atrule">@Observable</span><span class="token attribute atrule">@MainActor</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">RouteManager</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> navigationPath<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">RouteType</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> jsonDecoder <span class="token operator">=</span> <span class="token class-name">JSONDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> jsonEncoder <span class="token operator">=</span> <span class="token class-name">JSONEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> urlProcessor<span class="token punctuation">:</span> any <span class="token class-name">URLProcessor</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token operator">></span>    <span class="token keyword">private</span> <span class="token keyword">let</span> activityProcessor<span class="token punctuation">:</span> any <span class="token class-name">UserActivityProcessor</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token operator">></span>    <span class="token keyword">init</span><span class="token punctuation">(</span>        urlProcessor<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">URLProcessor</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token operator">></span><span class="token punctuation">,</span>        activityProcessor<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">UserActivityProcessor</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token operator">></span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>urlProcessor <span class="token operator">=</span> urlProcessor        <span class="token keyword">self</span><span class="token punctuation">.</span>activityProcessor <span class="token operator">=</span> activityProcessor    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">process</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> activity<span class="token punctuation">:</span> <span class="token class-name">NSUserActivity</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        activityProcessor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> <span class="token keyword">mutating</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>navigationPath<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">process</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> url<span class="token punctuation">:</span> <span class="token constant">URL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        urlProcessor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">mutating</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>navigationPath<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">RouteManager</span> <span class="token keyword">where</span> <span class="token class-name">RouteType</span><span class="token punctuation">:</span> <span class="token class-name">Codable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">toData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Data</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span><span class="token operator">?</span> jsonEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>navigationPath<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">func</span> <span class="token function-definition function">restore</span><span class="token punctuation">(</span>from data<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            navigationPath <span class="token operator">=</span> <span class="token keyword">try</span> jsonDecoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">RouteType</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> data<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>            navigationPath <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码定义了一个名为 <code>RouteManager</code> 的类，它用于处理和管理导航路径。这个类使用了 SwiftUI 的 <code>@MainActor</code> 和 <code>@Observable</code> 属性包装器，以确保它的操作在主线程上执行，并且当 <code>navigationPath</code> 发生变化时，会自动更新相关的 UI。</p><p><code>RouteManager</code> 类有两个协议类型的属性：<code>urlProcessor</code> 和 <code>activityProcessor</code>。这两个属性分别用于处理 URL 和用户活动（<code>NSUserActivity</code>）。这两个处理器的任务是根据给定的 URL 或用户活动，更新 <code>navigationPath</code>。</p><p><code>RouteManager</code> 类还有两个方法：<code>process(_ activity: NSUserActivity)</code> 和 <code>process(_ url: URL)</code>。这两个方法分别用于处理用户活动和 URL。处理的方式是调用相应的处理器的 <code>process</code> 方法。</p><p>此外，<code>RouteManager</code> 类还有一个扩展，这个扩展只适用于 <code>RouteType</code> 是 <code>Codable</code> 的情况。这个扩展提供了两个方法：<code>toData()</code> 和 <code>restore(from data: Data)</code>。<code>toData()</code> 方法将 <code>navigationPath</code> 转换为 <code>Data</code>，<code>restore(from data: Data)</code> 方法则将 <code>Data</code> 转换回 <code>navigationPath</code>。这两个方法可以用于将 <code>navigationPath</code> 保存到磁盘，并在需要时从磁盘恢复。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">MainView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@SceneStorage</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"navigationState"</span></span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">var</span> navigationData<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token operator">?</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> dataStore <span class="token operator">=</span> <span class="token class-name">DataStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> routeManager <span class="token operator">=</span> <span class="token class-name">RouteManager</span><span class="token operator">&lt;</span><span class="token class-name">Route</span><span class="token operator">></span><span class="token punctuation">(</span>        urlProcessor<span class="token punctuation">:</span> <span class="token class-name">SomeURLProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        activityProcessor<span class="token punctuation">:</span> <span class="token class-name">SomeUserActivityProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> $routeManager<span class="token punctuation">.</span>navigationPath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">SomeView</span><span class="token punctuation">(</span>categories<span class="token punctuation">:</span> dataStore<span class="token punctuation">.</span>categories<span class="token punctuation">)</span>                <span class="token punctuation">.</span>task <span class="token punctuation">&#123;</span> <span class="token keyword">await</span> dataStore<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Route</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> route <span class="token keyword">in</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span>onOpenURL <span class="token punctuation">&#123;</span> routeManager<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>task <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> navigationData <span class="token operator">=</span> navigationData <span class="token punctuation">&#123;</span>                routeManager<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> navigationData<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>                        <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span> routeManager<span class="token punctuation">.</span>$navigationPath<span class="token punctuation">.</span>values <span class="token punctuation">&#123;</span>                navigationData <span class="token operator">=</span> routeManager<span class="token punctuation">.</span><span class="token function">toData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>@SceneStorage(&quot;navigationState&quot;)</code> 是用来保存和恢复导航状态的。当应用程序被挂起时，它会自动将 <code>navigationData</code> 保存到磁盘，当应用程序重新启动时，它会自动从磁盘恢复 <code>navigationData</code>。</p><p><code>@State private var dataStore = DataStore()</code> 和 <code>@State private var routeManager = RouteManager&lt;Route&gt;(...)</code> 是用来存储数据和路由管理器的。<code>DataStore</code> 是用来获取和存储数据的，<code>RouteManager</code> 是用来处理和管理导航路径的。</p><p><code>body</code> 属性定义了视图的内容。它首先创建了一个 <code>NavigationStack</code>，然后在这个 <code>NavigationStack</code> 中创建了一个 <code>SomeView</code>。<code>SomeView</code> 使用了 <code>dataStore.categories</code> 作为它的参数，并且在被创建后立即执行 <code>dataStore.fetch()</code> 来获取数据。</p><p><code>body</code> 属性还定义了一个任务，这个任务在视图被创建后立即执行。这个任务首先检查 <code>navigationData</code> 是否存在，如果存在，就使用 <code>routeManager.restore(from: navigationData)</code> 来恢复导航路径。然后，它监听 <code>routeManager.$navigationPath.values</code>，每当 <code>navigationPath</code> 发生变化时，就使用 <code>routeManager.toData()</code> 来将 <code>navigationPath</code> 转换为 <code>Data</code>，并将结果保存到 <code>navigationData</code> 中。</p><h2 id="布局基础"><a href="#布局基础" class="headerlink" title="布局基础"></a>布局基础</h2><h3 id="布局-基础"><a href="#布局-基础" class="headerlink" title="布局-基础"></a>布局-基础</h3><h4 id="基本元素样式"><a href="#基本元素样式" class="headerlink" title="基本元素样式"></a>基本元素样式</h4><p>通过 <code>.font(.title)</code> 设置字体大小。</p><p><code>.stroke(Color.blue)</code> 设置描边。举个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>orange<span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token class-name">StrokeStyle</span><span class="token punctuation">(</span>lineWidth<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> lineCap<span class="token punctuation">:</span> <span class="token punctuation">.</span>round<span class="token punctuation">,</span> dash<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>StrokeStyle(lineWidth: 10, lineCap: .round, dash: [30])</code> 定义了描边的样式，其中 <code>lineWidth: 10</code> 表示线宽为 10，<code>lineCap: .round</code> 表示线帽样式为圆形，<code>dash: [30]</code> 表示虚线模式，数组中的数字表示虚线和间隙的交替长度。</p><h4 id="frame"><a href="#frame" class="headerlink" title="frame"></a>frame</h4><p><code>.frame(width: 200, height:100, alignment: .topLeading)</code></p><ul><li><code>width: 200</code> 表示视图的宽度为 200 点。</li><li><code>height: 100</code> 表示视图的高度为 100 点。</li><li><code>alignment: .topLeading</code> 表示视图的内容应该在视图的左上角对齐。<code>.topLeading</code> 是 SwiftUI 中的一个对齐方式，表示左上角对齐。</li></ul><h4 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h4><p>多个视图通过 Stack 视图进行对齐排列。这些 Stack 视图主要是：</p><ul><li>ZStack：Z轴排列</li><li>VStack：垂直排列</li><li>HStack：横向排列</li></ul><h4 id="间隔"><a href="#间隔" class="headerlink" title="间隔"></a>间隔</h4><p> 视图之间的间隔可以用 Space()，它可以在各种布局视图中使用。</p><h3 id="布局-留白"><a href="#布局-留白" class="headerlink" title="布局-留白"></a>布局-留白</h3><h4 id="Space"><a href="#Space" class="headerlink" title="Space"></a>Space</h4><p><code>Spacer</code> 是一个灵活的空间，它会尽可能地占用多的空间，从而将其周围的视图推向堆栈的两边。因此，第一个 <code>Text</code> 视图会被推到左边，第二个 <code>Text</code> 视图会被推到中间，第三个 <code>Text</code> 视图会被推到右边。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"左边"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"中间"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"右边"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面这个例子是用 Space() 让三个视图都居右。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"视图1"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"视图2"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"视图3"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="布局-对齐"><a href="#布局-对齐" class="headerlink" title="布局-对齐"></a>布局-对齐</h3><h4 id="frame-对齐"><a href="#frame-对齐" class="headerlink" title="frame 对齐"></a>frame 对齐</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>topLeading<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="可设置对齐的视图"><a href="#可设置对齐的视图" class="headerlink" title="可设置对齐的视图"></a>可设置对齐的视图</h4><p>在 SwiftUI 中，许多视图都接受 <code>alignment</code> 参数，用于控制其子视图的对齐方式。以下是一些常见的接受 <code>alignment</code> 参数的视图：</p><ul><li><code>HStack(alignment: .bottom)</code>：水平堆栈视图，可以控制其子视图在垂直方向上的对齐方式。</li><li><code>VStack(alignment: .trailing)</code>：垂直堆栈视图，可以控制其子视图在水平方向上的对齐方式。</li><li><code>ZStack(alignment: .center)</code>：深度堆栈视图，可以控制其子视图在水平和垂直方向上的对齐方式。</li><li><code>GridRow(alignment: .firstTextBaseline)</code>：用于定义网格的行或列的大小，可以设置行或列中的内容的对齐方式。。</li></ul><h4 id="基线对齐"><a href="#基线对齐" class="headerlink" title="基线对齐"></a>基线对齐</h4><p>你可以使用 <code>alignment</code> 参数来设置视图的对齐方式，包括基线对齐。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">HStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>firstTextBaseline<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Hello"</span></span><span class="token punctuation">)</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"World"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，<code>HStack</code> 是一个水平堆栈视图，它会将其子视图水平排列。<code>alignment: .firstTextBaseline</code> 是一个参数，用于设置堆栈中的内容的对齐方式。<code>.firstTextBaseline</code> 表示所有文本视图都应该根据它们的第一行的基线对齐。基线是文本字符的底部线。</p><p>因此，这个 <code>HStack</code> 中的两个 <code>Text</code> 视图会根据它们的第一行的基线对齐，即使它们的字体大小不同。</p><h3 id="布局-居中"><a href="#布局-居中" class="headerlink" title="布局-居中"></a>布局-居中</h3><p>在 SwiftUI 中，有多种方法可以使视图居中：</p><h4 id="Spacer"><a href="#Spacer" class="headerlink" title="Spacer"></a>Spacer</h4><p>使用 <code>Spacer</code>：<code>Spacer</code> 是一个灵活的空间，它会尽可能地占用多的空间，从而将其周围的视图推向堆栈的两边。如果在一个视图的两边都放置一个 <code>Spacer</code>，那么这个视图就会被推到中间。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"居中"</span></span><span class="token punctuation">)</span>    <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="alignment"><a href="#alignment" class="headerlink" title="alignment"></a>alignment</h4><p>使用 <code>alignment</code> 参数：许多 SwiftUI 视图都接受 <code>alignment</code> 参数，用于控制其子视图的对齐方式。例如，<code>VStack</code> 和 <code>HStack</code> 都接受 <code>alignment</code> 参数。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"居中"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="frame-1"><a href="#frame-1" class="headerlink" title="frame"></a>frame</h4><p>使用 <code>frame</code> 方法：<code>frame</code> 方法可以设置视图的尺寸和对齐方式。如果你想让一个视图在其父视图中居中，你可以使用 <code>frame(maxWidth: .infinity, maxHeight: .infinity)</code> 来使视图尽可能地占用多的空间，然后使用 <code>alignment: .center</code> 来使视图在这个空间中居中。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"居中"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> maxHeight<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="布局-offset偏移"><a href="#布局-offset偏移" class="headerlink" title="布局-offset偏移"></a>布局-offset偏移</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">OffsetDemo</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> offset<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Hello, World!"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span> offset<span class="token punctuation">)</span>            <span class="token class-name">Slider</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> $offset<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">100</span><span class="token operator">...</span><span class="token number">100</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们创建了一个 <code>Text</code> 视图和一个 <code>Slider</code>。<code>Text</code> 视图使用了 <code>.offset(y: offset)</code> 修饰符，这意味着它的 y 偏移量会根据 <code>offset</code> 的值改变。<code>Slider</code> 则用于改变 <code>offset</code> 的值。当你移动滑块时，<code>Text</code> 视图的位置也会相应地上下移动。</p><h3 id="Safe-Area"><a href="#Safe-Area" class="headerlink" title="Safe Area"></a>Safe Area</h3><h4 id="ignoresSafeArea-忽略安全区域"><a href="#ignoresSafeArea-忽略安全区域" class="headerlink" title="ignoresSafeArea 忽略安全区域"></a>ignoresSafeArea 忽略安全区域</h4><p>使用 <code>.ignoresSafeArea()</code> 可以忽略安全区域。默认是所有方向都忽略。</p><p>如果只忽略部分方向，可以按照下面方法做：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">// 默认会同时包含 .keyboard 和 .container。</span><span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span>edges<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span>edges<span class="token punctuation">:</span> <span class="token punctuation">.</span>vertical<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span>edges<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>leading<span class="token punctuation">,</span> <span class="token punctuation">.</span>trailing<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">// 可以对安全区域分别指定</span><span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">.</span>keyboard<span class="token punctuation">,</span> edges<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">.</span>container<span class="token punctuation">,</span> edges<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>leading<span class="token punctuation">,</span> <span class="token punctuation">.</span>trailing<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="safeAreaInset"><a href="#safeAreaInset" class="headerlink" title="safeAreaInset"></a>safeAreaInset</h4><p><code>safeAreaInset</code> 是 SwiftUI 中的一个属性，它允许你将视图放置在安全区域内。”安全区域”是指设备屏幕上的一块区域，这块区域不会被系统界面（如状态栏、导航栏、工具栏、Tab栏等）遮挡。</p><p>例如，你可以使用 <code>safeAreaInset</code> 将一个视图放置在屏幕底部的安全区域内，代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Hello, World!"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">safeAreaInset</span><span class="token punctuation">(</span>edge<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Press me"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Button pressed"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，”Press me” 按钮会被放置在屏幕底部的安全区域内，而且距离底部有 10 个点的间距。</p><p>下面是更完整点的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> tasks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">TaskModel</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">...</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> <span class="token class-name">TaskModel</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Task </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token short-argument">$0</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> taskName <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isFocused<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>tasks<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> task <span class="token keyword">in</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">listStyle</span><span class="token punctuation">(</span><span class="token class-name">PlainListStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">safeAreaInset</span><span class="token punctuation">(</span>edge<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Add task"</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $taskName<span class="token punctuation">,</span> onCommit<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                            <span class="token function">addTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">textFieldStyle</span><span class="token punctuation">(</span><span class="token class-name">RoundedBorderTextFieldStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>leading<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>                                                <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                            <span class="token function">addTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"plus"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>trailing<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>bottom<span class="token punctuation">,</span> isFocused <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">NotificationCenter</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">.</span><span class="token function">publisher</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">UIResponder</span><span class="token punctuation">.</span>keyboardWillShowNotification<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span>                    withAnimation <span class="token punctuation">&#123;</span>                        isFocused <span class="token operator">=</span> <span class="token boolean">true</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">NotificationCenter</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">.</span><span class="token function">publisher</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">UIResponder</span><span class="token punctuation">.</span>keyboardWillHideNotification<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span>                    withAnimation <span class="token punctuation">&#123;</span>                        isFocused <span class="token operator">=</span> <span class="token boolean">false</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationBarTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Task List Demo"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">addTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token operator">!</span>taskName<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span>            withAnimation <span class="token punctuation">&#123;</span>                tasks<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">TaskModel</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> taskName<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            taskName <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">TaskModel</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用户可以在底部的输入框中输入任务名称，然后点击 “+” 按钮将任务添加到任务清单中。添加的任务会显示在屏幕的上方。当键盘出现或消失时，底部的输入框会相应地移动，以确保不会被键盘遮挡。 </p><h3 id="布局原理"><a href="#布局原理" class="headerlink" title="布局原理"></a>布局原理</h3><p>SwiftUI 的布局系统是一个两阶段的协商过程，涉及到父视图和子视图之间的交互。</p><p>建议阶段：在这个阶段，父视图会向子视图提出一个建议尺寸。这个建议尺寸是父视图希望子视图的大小。例如，如果父视图是一个 VStack，那么它可能会向子视图提出一个具有明确高度、宽度未指定的建议尺寸。</p><p>需求阶段：在这个阶段，子视图会根据父视图的建议尺寸来确定自己的需求尺寸。子视图可以选择接受父视图的建议尺寸，也可以选择返回一个不同的尺寸。例如，一个 Text 视图可能会返回一个刚好能够容纳其文本的尺寸。</p><p>在这个过程中，父视图和子视图都有可能影响最终的布局结果。父视图可以通过调整建议尺寸来影响子视图的大小，而子视图可以通过返回不同的需求尺寸来影响自己的大小。</p><p>在一些复杂的布局场景中，可能需要进行多轮的协商才能得到最终的布局结果。例如，如果一个视图使用了 GeometryReader 来获取其在父视图中的位置和尺寸，那么 GeometryReader 可能会在布局稳定之前，多次向子视图发送新的几何信息。</p><p>总的来说 SwiftUI 它允许父视图和子视图之间进行协商，以达到最佳的布局效果。</p><h2 id="布局进阶"><a href="#布局进阶" class="headerlink" title="布局进阶"></a>布局进阶</h2><h3 id="AnyLayout"><a href="#AnyLayout" class="headerlink" title="AnyLayout"></a>AnyLayout</h3><p>使用 AnyLayout 包装布局组件，可以在布局之间进行切换，同时保持动画效果。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">WeatherLayout</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> changeLayout <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> layout <span class="token operator">=</span> changeLayout <span class="token operator">?</span> <span class="token class-name">AnyLayout</span><span class="token punctuation">(</span><span class="token class-name">HStackLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token class-name">AnyLayout</span><span class="token punctuation">(</span><span class="token class-name">VStackLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        layout <span class="token punctuation">&#123;</span>            <span class="token class-name">WeatherView</span><span class="token punctuation">(</span>icon<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"sun.max.fill"</span></span><span class="token punctuation">,</span> temperature<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token punctuation">.</span>yellow<span class="token punctuation">)</span>            <span class="token class-name">WeatherView</span><span class="token punctuation">(</span>icon<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"cloud.rain.fill"</span></span><span class="token punctuation">,</span> temperature<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token punctuation">.</span>blue<span class="token punctuation">)</span>            <span class="token class-name">WeatherView</span><span class="token punctuation">(</span>icon<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"snow"</span></span><span class="token punctuation">,</span> temperature<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token punctuation">.</span>white<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> changeLayout<span class="token punctuation">)</span>        <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>            changeLayout<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">WeatherView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> icon<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> temperature<span class="token punctuation">:</span> <span class="token class-name">Int</span>    <span class="token keyword">let</span> color<span class="token punctuation">:</span> <span class="token class-name">Color</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> icon<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">temperature</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">°"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码中，我们创建了一个 WeatherView 视图，它包含一个天气图标和一个温度标签。然后，我们在 WeatherLayout 视图中使用 AnyLayout 来动态改变布局。用户可以通过点击视图来在水平布局和垂直布局之间切换。</p><h3 id="ViewThatFits"><a href="#ViewThatFits" class="headerlink" title="ViewThatFits"></a>ViewThatFits</h3><p><code>ViewThatFits</code> 是一个自动选择最适合当前屏幕大小的子视图进行显示的视图。它会根据可用空间的大小来决定如何布局和显示子视图。</p><p><code>ViewThatFits</code> 是一个在 SwiftUI 中用于选择最适合显示的视图的组件。它的工作原理如下：</p><ul><li><p>首先，<code>ViewThatFits</code> 会测量在特定轴（水平或垂直）或两个轴（水平和垂直）上的可用空间。这是通过 SwiftUI 的布局系统来完成的，该系统提供了当前视图的大小和位置信息。</p></li><li><p>接着，<code>ViewThatFits</code> 会测量第一个视图的大小。这是通过调用视图的 <code>measure(in:)</code> 方法来完成的，该方法返回一个包含视图理想大小的 <code>CGSize</code> 值。</p></li><li><p>如果第一个视图的大小适合可用空间，<code>ViewThatFits</code> 就会选择并放置这个视图。放置视图是通过调用视图的 <code>layout(in:)</code> 方法来完成的，该方法接受一个 <code>CGRect</code> 值，该值定义了视图在其父视图中的位置和大小。</p></li><li><p>如果第一个视图的大小不适合可用空间，<code>ViewThatFits</code> 会继续测量第二个视图的大小。如果第二个视图的大小适合可用空间，<code>ViewThatFits</code> 就会选择并放置这个视图。</p></li><li><p>如果所有视图的大小都不适合可用空间，<code>ViewThatFits</code> 会选择并放置 <code>ViewBuilder</code> 闭包中的最后一个视图。<code>ViewBuilder</code> 是一个特殊的闭包，它可以根据其内容动态创建视图。</p></li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">ViewThatFits</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"晴天，气温25°"</span></span><span class="token punctuation">)</span> <span class="token comment">// 宽度在200到300之间</span>        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>yellow<span class="token punctuation">)</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"晴天，25°"</span></span><span class="token punctuation">)</span> <span class="token comment">// 宽度在150到200之间</span>        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>gray<span class="token punctuation">)</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"晴25"</span></span><span class="token punctuation">)</span> <span class="token comment">// 宽度在100到150之间</span>        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">)</span> <span class="token comment">// ViewThatFits所需的大小</span><span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>orange<span class="token punctuation">)</span> <span class="token comment">// 父视图提议的大小</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在不同的宽度下，ViewThatFits 会选择不同的视图进行显示。在上面的示例中，当父视图的宽度在100到150之间时，ViewThatFits 会选择显示 “晴25” 这个视图。</p><p>通过 ViewThatFits 来确定内容是否可滚动。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> step<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">3</span>    <span class="token keyword">var</span> count<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Int</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span><span class="token punctuation">.</span>leading<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"数量: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">count</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span>            <span class="token class-name">Stepper</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"数量"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> $step<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token operator">...</span><span class="token number">20</span><span class="token punctuation">)</span>            <span class="token class-name">ViewThatFits</span> <span class="token punctuation">&#123;</span>                content                <span class="token class-name">ScrollView</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">,</span>showsIndicators<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    content                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> content<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">..&lt;</span> count<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                    <span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Layout协议"><a href="#Layout协议" class="headerlink" title="Layout协议"></a>Layout协议</h3><p>通过实现 Layout 协议，创建一个水平堆栈布局，其中所有子视图的宽度都相等。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">OptimizedEqualWidthHStack</span><span class="token punctuation">:</span> <span class="token class-name">Layout</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">func</span> <span class="token function-definition function">sizeThatFits</span><span class="token punctuation">(</span>proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span> subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">,</span> cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGSize</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> subviews<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token punctuation">.</span>zero <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> maxSubviewSize <span class="token operator">=</span> <span class="token function">calculateMaxSize</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> totalSpacing <span class="token operator">=</span> <span class="token function">calculateSpacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> maxSubviewSize<span class="token punctuation">.</span>width <span class="token operator">*</span> <span class="token class-name">CGFloat</span><span class="token punctuation">(</span>subviews<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token operator">+</span> totalSpacing<span class="token punctuation">,</span> height<span class="token punctuation">:</span> maxSubviewSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">func</span> <span class="token function-definition function">placeSubviews</span><span class="token punctuation">(</span><span class="token keyword">in</span> bounds<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">,</span> proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span> subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">,</span> cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> subviews<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> maxSubviewSize <span class="token operator">=</span> <span class="token function">calculateMaxSize</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> spacings <span class="token operator">=</span> <span class="token function">calculateSpacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> placementProposal <span class="token operator">=</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> maxSubviewSize<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> maxSubviewSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span>    <span class="token keyword">var</span> nextX <span class="token operator">=</span> bounds<span class="token punctuation">.</span>minX <span class="token operator">+</span> maxSubviewSize<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span>    <span class="token keyword">for</span> index <span class="token keyword">in</span> subviews<span class="token punctuation">.</span>indices <span class="token punctuation">&#123;</span>      subviews<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">place</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> nextX<span class="token punctuation">,</span> y<span class="token punctuation">:</span> bounds<span class="token punctuation">.</span>midY<span class="token punctuation">)</span><span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">,</span> proposal<span class="token punctuation">:</span> placementProposal<span class="token punctuation">)</span>      nextX <span class="token operator">+=</span> maxSubviewSize<span class="token punctuation">.</span>width <span class="token operator">+</span> spacings<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">calculateMaxSize</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGSize</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> subviews<span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">sizeThatFits</span><span class="token punctuation">(</span><span class="token punctuation">.</span>unspecified<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">.</span>zero<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token short-argument">$1</span><span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">.</span>height<span class="token punctuation">,</span> <span class="token short-argument">$1</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">calculateSpacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">[</span><span class="token class-name">CGFloat</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> subviews<span class="token punctuation">.</span>indices<span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span> <span class="token operator">&lt;</span> subviews<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> subviews<span class="token punctuation">[</span><span class="token short-argument">$0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>spacing<span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> subviews<span class="token punctuation">[</span><span class="token short-argument">$0</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>spacing<span class="token punctuation">,</span> along<span class="token punctuation">:</span> <span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面这段代码中 sizeThatFits 方法计算并返回布局容器需要的大小，以便排列其子视图。它首先检查子视图数组是否为空，如果为空则返回 .zero。然后，它计算子视图的最大尺寸和总间距，最后返回一个 CGSize 对象，其宽度等于最大子视图宽度乘以子视图数量加上总间距，高度等于最大子视图高度。</p><p>placeSubviews 方法将子视图放置在布局容器中。它首先检查子视图数组是否为空，如果为空则返回。然后，它计算子视图的最大尺寸和间距，然后遍历子视图数组，将每个子视图放置在布局容器中的适当位置。</p><p>calculateMaxSize 和 calculateSpacing 是两个私有方法，用于计算子视图的最大尺寸和间距。</p><h3 id="GeometryReader"><a href="#GeometryReader" class="headerlink" title="GeometryReader"></a>GeometryReader</h3><p>在 SwiftUI 中，有多种方法可以获取和控制视图的尺寸：</p><ul><li><code>frame(width:60, height:60)</code>：这个方法会为子视图提供一个建议的尺寸，这里是 60 x 60。</li><li><code>fixedSize()</code>：这个方法会为子视图提供一个未指定模式的建议尺寸，这意味着视图会尽可能地大以适应其内容。</li><li><code>frame(minWidth: 120, maxWidth: 360)</code>：这个方法会将子视图的需求尺寸控制在指定的范围中，这里是宽度在 120 到 360 之间。</li><li><code>frame(idealWidth: 120, idealHeight: 120)</code>：这个方法会返回一个需求尺寸，如果当前视图收到为未指定模式的建议尺寸，那么它会返回 120 x 120 的尺寸。</li><li><code>GeometryReader</code>：<code>GeometryReader</code> 会将建议尺寸作为需求尺寸直接返回，这意味着它会充满全部可用区域。你可以使用 <code>GeometryReader</code> 来获取其内容的尺寸和位置。</li></ul><p><code>GeometryReader</code> 可以获取其内容的尺寸和位置。在这个例子中，我们使用 <code>GeometryReader</code> 来获取视图的尺寸，然后打印出来。这对于理解 SwiftUI 的布局系统和调试布局问题非常有用。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">logSizeInfo</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> label<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token function">background</span><span class="token punctuation">(</span>            <span class="token class-name">GeometryReader</span> <span class="token punctuation">&#123;</span> proxy <span class="token keyword">in</span>                <span class="token class-name">Color</span><span class="token punctuation">.</span>clear                    <span class="token punctuation">.</span><span class="token function">onAppear</span><span class="token punctuation">(</span>perform<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                        <span class="token function">debugPrint</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">label</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> Size: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">proxy<span class="token punctuation">.</span>size</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"大标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">logSizeInfo</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"大标题视图"</span></span><span class="token punctuation">)</span> <span class="token comment">// 打印视图尺寸</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"正文"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">logSizeInfo</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"正文视图"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码首先定义了一个 <code>View</code> 的扩展，添加了一个 <code>logSizeInfo(_:)</code> 方法。这个方法接受一个标签字符串作为参数，然后返回一个新的视图。这个新的视图在背景中使用 <code>GeometryReader</code> 来获取并打印视图的尺寸。</p><p>然后，我们创建了一个 <code>VStack</code> 视图，其中包含一个 <code>Text</code> 视图。我们为 <code>Text</code> 视图调用了 <code>logSizeInfo(_:)</code> 方法，以打印其尺寸。</p><p>如何利用 <code>GeometryReader</code> 来绘制一个圆形？</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">CircleView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">GeometryReader</span> <span class="token punctuation">&#123;</span> proxy <span class="token keyword">in</span>            <span class="token class-name">Path</span> <span class="token punctuation">&#123;</span> path <span class="token keyword">in</span>                <span class="token keyword">let</span> radius <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>proxy<span class="token punctuation">.</span>size<span class="token punctuation">.</span>width<span class="token punctuation">,</span> proxy<span class="token punctuation">.</span>size<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>                <span class="token keyword">let</span> center <span class="token operator">=</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> proxy<span class="token punctuation">.</span>size<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> proxy<span class="token punctuation">.</span>size<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>                path<span class="token punctuation">.</span><span class="token function">addArc</span><span class="token punctuation">(</span>center<span class="token punctuation">:</span> center<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> radius<span class="token punctuation">,</span> startAngle<span class="token punctuation">:</span> <span class="token punctuation">.</span>zero<span class="token punctuation">,</span> endAngle<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>degrees<span class="token punctuation">:</span> <span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">,</span> clockwise<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们首先获取 <code>GeometryReader</code> 的尺寸，然后计算出半径和中心点的位置。然后，我们使用 <code>Path</code> 的 <code>addArc(center:radius:startAngle:endAngle:clockwise:)</code> 方法来添加一个圆形路径。最后，我们使用 <code>fill(_:)</code> 方法来填充路径，颜色为蓝色。</p><p>关于 GeometryReader 性能问题</p><p>GeometryReader 是 SwiftUI 中的一个工具，它可以帮助我们获取视图的大小和位置。但是，它在获取这些信息时，需要等待视图被评估、布局和渲染完成。这就好比你在装修房子时，需要等待墙壁砌好、油漆干燥后，才能测量墙壁的尺寸。这个过程可能需要等待一段时间，而且可能需要多次重复，因为每次墙壁的尺寸改变，都需要重新测量。</p><p>这就是 GeometryReader 可能会影响性能的原因。它需要等待视图完成一轮的评估、布局和渲染，然后才能获取到尺寸数据，然后可能需要根据这些数据重新调整布局，这就需要再次进行评估、布局和渲染。这个过程可能需要重复多次，导致视图被多次重新评估和布局。</p><p>但是，随着 SwiftUI 的更新，这个问题已经有所改善。现在，我们可以创建自定义的布局容器，这些容器可以在布局阶段就获取到父视图的建议尺寸和所有子视图的需求尺寸，这样就可以避免反复传递尺寸数据，减少了视图的反复更新。</p><h3 id="alignmentGuide"><a href="#alignmentGuide" class="headerlink" title="alignmentGuide"></a>alignmentGuide</h3><p><code>alignmentGuide</code>是SwiftUI中的一个修饰符，它允许你自定义视图的对齐方式。你可以使用它来调整视图在其父视图或同级视图中的位置。</p><p>当你在一个视图上应用<code>alignmentGuide</code>修饰符时，你需要提供一个对齐标识符和一个闭包。对齐标识符定义了你想要调整的对齐方式（例如，<code>.leading</code>，<code>.trailing</code>，<code>.center</code>等）。闭包接收一个参数，这个参数包含了视图的尺寸，你可以使用这个参数来计算对齐指南的偏移量。</p><p>举个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">CircleView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">alignmentGuide</span><span class="token punctuation">(</span><span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> vd <span class="token keyword">in</span>                    vd<span class="token punctuation">[</span><span class="token punctuation">.</span>top<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">50</span>                <span class="token punctuation">&#125;</span>            <span class="token class-name">CircleView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">struct</span> <span class="token class-name">CircleView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>mint<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在HStack中，第一个CircleView使用了.alignmentGuide修饰符，这使得它在顶部对齐时向下偏移了50个单位。</p><h3 id="布局进阶-参考资料"><a href="#布局进阶-参考资料" class="headerlink" title="布局进阶-参考资料"></a>布局进阶-参考资料</h3><h4 id="WWDC"><a href="#WWDC" class="headerlink" title="WWDC"></a>WWDC</h4><p>23</p><ul><li><a href="https://developer.apple.com/wwdc23/10111">Go beyond the window with SwiftUI - WWDC23 - Videos - Apple Developer</a></li></ul><p>22</p><ul><li><a href="https://developer.apple.com/wwdc22/10061">Bring multiple windows to your SwiftUI app  - WWDC22 - Videos - Apple Developer</a> 为您的 SwiftUI App 添加多个窗口</li></ul><p>20</p><ul><li><a href="https://developer.apple.com/wwdc20/10031">Stacks, Grids, and Outlines in SwiftUI - WWDC20 - Videos - Apple Developer</a> SwiftUI 中的叠放、网格和大纲</li><li><a href="https://developer.apple.com/news/?id=nixcb564">How to make your app look great on every screen - Discover - Apple Developer</a> How to make your app look greate on every screen</li></ul><h4 id="官方接口文档"><a href="#官方接口文档" class="headerlink" title="官方接口文档"></a>官方接口文档</h4><ul><li><a href="https://developer.apple.com/documentation/swiftui/layout-fundamentals">Layout fundamentals | 接口</a></li><li><a href="https://developer.apple.com/documentation/swiftui/layout-adjustments">Layout adjustments | 接口</a></li><li><a href="https://developer.apple.com/documentation/swiftui/custom-layout">Custom layout | 接口</a></li><li><a href="https://developer.apple.com/documentation/swiftui/view-groupings">View groupings | 接口</a></li></ul><h2 id="Stack-1"><a href="#Stack-1" class="headerlink" title="Stack"></a>Stack</h2><p>Stack View 有 VStack、HStack 和 ZStack</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/stack-ap01.jpeg" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/stack-ap01.jpeg"></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayStackView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 默认是 VStack 竖排</span>                <span class="token comment">// 横排</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"左"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"右"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// Z 轴排</span>        <span class="token class-name">ZStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"logo"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"戴铭的开发小册子"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>                <span class="token class-name">Color</span><span class="token punctuation">.</span>cyan            <span class="token punctuation">.</span><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"一段文字"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="GroupBox"><a href="#GroupBox" class="headerlink" title="GroupBox"></a>GroupBox</h2><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/groupbox-ap01.png" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/groupbox-ap01.png"></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayGroupBoxView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">GroupBox</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"这是 GroupBox 的内容"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"标题一"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"t.square.fill"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token class-name">GroupBox</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"还是 GroupBox 的内容"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"标题二"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"t.square.fill"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">groupBoxStyle</span><span class="token punctuation">(</span><span class="token class-name">PCGroupBoxStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PCGroupBoxStyle</span><span class="token punctuation">:</span> <span class="token class-name">GroupBoxStyle</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">makeBody</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> <span class="token class-name">Configuration</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            configuration<span class="token punctuation">.</span>label                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>            configuration<span class="token punctuation">.</span>content        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token punctuation">.</span>pink<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token punctuation">.</span>continuous<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>叠加 GroupBox 颜色会有区分</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">GroupBox</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电视剧名称: 人民的名义"</span></span><span class="token punctuation">)</span>    <span class="token class-name">GroupBox</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"播放时间: 每周一至周五"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后，您还可以 <code>GroupBox</code> 使用 <code>Label</code> .将 <code>Label</code> 定位为 <code>GroupBox</code> 容器的标题。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">GroupBox</span><span class="token punctuation">(</span>label<span class="token punctuation">:</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电视剧"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"tv"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"播放时间: 每周一至周五"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>GroupBox 也可以用于创建自定义的按钮组，如下所示：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">TVShowCardView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// The header of the card</span>            <span class="token comment">// - Photo, Show Name and Genre</span>            <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>gray<span class="token punctuation">)</span>                <span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"权力的游戏"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>semibold<span class="token punctuation">)</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"奇幻剧"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>caption<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">(</span>uiColor<span class="token punctuation">:</span> <span class="token class-name">UIColor</span><span class="token punctuation">.</span>systemGray6<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span>top<span class="token punctuation">,</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>                        <span class="token comment">// The description of the show in a few lines</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"《权力的游戏》是一部改编自乔治·马丁的奇幻小说系列《冰与火之歌》的电视剧。"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>body<span class="token punctuation">)</span>                        <span class="token comment">// Buttons to watch, share or save the show</span>            <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                <span class="token function">actionGroupBox</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"play.rectangle"</span></span><span class="token punctuation">,</span> actionName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"观看"</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Watching..."</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token function">actionGroupBox</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"square.and.arrow.up"</span></span><span class="token punctuation">,</span> actionName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"分享"</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Sharing..."</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token function">actionGroupBox</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"bookmark"</span></span><span class="token punctuation">,</span> actionName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"保存"</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Saving..."</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// A function to create a GroupBox for an action</span>    <span class="token keyword">func</span> <span class="token function-definition function">actionGroupBox</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> actionName<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">GroupBox</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">VStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> imageName<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>actionName<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>caption<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>            <span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">TVShowCardView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token class-name">UIColor</span><span class="token punctuation">.</span>systemGray6<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电视剧"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token punctuation">.</span>sRGB<span class="token punctuation">,</span> red<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> green<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> blue<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> opacity<span class="token punctuation">:</span> <span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="TabView"><a href="#TabView" class="headerlink" title="TabView"></a>TabView</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayTabView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selection <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ZStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TabView</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"one"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"首页"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">hidden</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"two"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"二栏"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"three"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"三栏"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"four"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"five"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"six"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"seven"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"eight"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"nine"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"ten"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end TabView</span>                                    <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"上一页"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> selection <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>                        selection <span class="token operator">-=</span> <span class="token number">1</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">keyboardShortcut</span><span class="token punctuation">(</span><span class="token punctuation">.</span>cancelAction<span class="token punctuation">)</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"下一页"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> selection <span class="token operator">&lt;</span> <span class="token number">9</span> <span class="token punctuation">&#123;</span>                        selection <span class="token operator">+=</span> <span class="token number">1</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">keyboardShortcut</span><span class="token punctuation">(</span><span class="token punctuation">.</span>defaultAction<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end HStack</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>.tabViewStyle(PageTabViewStyle(indexDisplayMode: .never)) 可以实现 UIPageViewController 的效果，如果要给小白点加上背景，可以多添加一个 .indexViewStyle(PageIndexViewStyle(backgroundDisplayMode: .always)) 修改器。</p><h3 id="添加提醒"><a href="#添加提醒" class="headerlink" title="添加提醒"></a>添加提醒</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> bookVm<span class="token punctuation">:</span> <span class="token class-name">BooksViewModel</span>        <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        bookVm <span class="token operator">=</span> <span class="token class-name">BooksViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TabView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">BookListView</span><span class="token punctuation">(</span>bookVm<span class="token punctuation">:</span> bookVm<span class="token punctuation">)</span>                <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"list.bullet.rectangle.fill"</span></span><span class="token punctuation">)</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Book List"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token class-name">SelectedBooksView</span><span class="token punctuation">(</span>bookVm<span class="token punctuation">:</span> bookVm<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">badge</span><span class="token punctuation">(</span>bookVm<span class="token punctuation">.</span>selectedBooks<span class="token punctuation">.</span>count<span class="token punctuation">)</span>                <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"book.fill"</span></span><span class="token punctuation">)</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Selected Books"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h3><p>iOS 14 和 macOS 11 开始可以使用 tabViewStyle 修饰符更改 TabView 样式。比如有页面指示器的水平滚动图片。</p><p>显示页面指示器：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">tabViewStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>indexDisplayMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>always<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>.tabViewStyle(.page(indexDisplayMode: .never))</code> 修饰符隐藏页面指示器。</p><p>水平滚动图片：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> images <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"pencil"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"scribble"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"highlighter"</span></span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TabView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>images<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> imageName <span class="token keyword">in</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> imageName<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">tabViewStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>indexDisplayMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>always<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>分页视图</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">OnboardingView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TabView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">OnboardingPageView</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"figure.mixed.cardio"</span></span><span class="token punctuation">,</span>                               title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Welcome"</span></span><span class="token punctuation">,</span>                               description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Welcome to MyApp! Get started by exploring our amazing features."</span></span><span class="token punctuation">)</span>            <span class="token class-name">OnboardingPageView</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"figure.archery"</span></span><span class="token punctuation">,</span>                               title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Discover"</span></span><span class="token punctuation">,</span>                               description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Discover new content and stay up-to-date with the latest news and updates."</span></span><span class="token punctuation">)</span>            <span class="token class-name">OnboardingPageView</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"figure.yoga"</span></span><span class="token punctuation">,</span>                               title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Connect"</span></span><span class="token punctuation">,</span>                               description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Connect with friends and share your experiences with the community."</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">tabViewStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>indexDisplayMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>always<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">indexViewStyle</span><span class="token punctuation">(</span><span class="token class-name">PageIndexViewStyle</span><span class="token punctuation">(</span>backgroundDisplayMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>always<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>.indexViewStyle(PageIndexViewStyle(backgroundDisplayMode: .always))</code> 修饰符添加了背景。这将在点周围添加一个背景，使其在任何背景下都更容易看到。</p><h3 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><p>iOS 16 和 macOS 13 开始可以更改 TabView 的背景颜色。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">MainScreen</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TabView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">BookListView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"图书列表"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">toolbarBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>yellow<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>navigationBar<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">toolbarBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>visible<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>navigationBar<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"图书"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"book.closed"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">UserPreferencesView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"设置"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"gearshape"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">toolbarBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>indigo<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>tabBar<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">toolbarBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>visible<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>tabBar<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">toolbarColorScheme</span><span class="token punctuation">(</span><span class="token punctuation">.</span>dark<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>tabBar<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">BookListView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"这里是图书列表"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">UserPreferencesView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"这里是用户设置"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ControlGroup"><a href="#ControlGroup" class="headerlink" title="ControlGroup"></a>ControlGroup</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayControlGroupView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ControlGroup</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"plus"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"plus"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"minus"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"minus"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">controlGroupStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>automatic<span class="token punctuation">)</span> <span class="token comment">// .automatic 是默认样式，还有 .navigation</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Advanced-layout-control"><a href="#Advanced-layout-control" class="headerlink" title="Advanced layout control"></a>Advanced layout control</h2><p>session <a href="https://developer.apple.com/videos/play/wwdc2022-10056">Compose custom layouts with SwiftUI</a> </p><p>提供了新的 Grid 视图来同时满足 VStack 和 HStack。还有一个更低级别 Layout 接口，可以完全控制构建应用所需的布局。另外还有 ViewThatFits 可以自动选择填充可用空间的方式。</p><p>Grid 示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Grid</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">GridRow</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"One"</span></span><span class="token punctuation">)</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"One"</span></span><span class="token punctuation">)</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"One"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token class-name">GridRow</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Two"</span></span><span class="token punctuation">)</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Two"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token class-name">GridRow</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Three"</span></span><span class="token punctuation">)</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Three"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">gridCellColumns</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>gridCellColumns()</code>  modifier 可以让一个单元格跨多列。</p><p>ViewThatFits 的新视图，允许根据适合的大小放视图。ViewThatFits 会自动选择对于当前屏幕大小合适的子视图进行显示。Ryan Lintott 的<a href="https://twitter.com/ryanlintott/status/1534706352177700871">示例效果</a> ，对应示例代码 <a href="https://gist.github.com/ryanlintott/d03140dd155d0493a758dcd284e68eaa">LayoutThatFits.swift</a> 。</p><p>新的 Layout 协议可以观看 Swift Talk 第 308 期 <a href="https://talk.objc.io/episodes/S01E308-the-layout-protocol">The Layout Protocol</a> 。</p><p>通过符合 Layout 协议，我们可以自定义一个自定义的布局容器，直接参与 SwiftUI 的布局过程。新的 ProposedViewSize 结构，它是容器视图提供的大小。 <code>Layout.Subviews</code> 是布局视图的子视图代理集合，我们可以在其中为每个子视图请求各种布局属性。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">public</span> <span class="token keyword">protocol</span> <span class="token class-name">Layout</span><span class="token punctuation">:</span> <span class="token class-name">Animatable</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">static</span> <span class="token keyword">var</span> layoutProperties<span class="token punctuation">:</span> <span class="token class-name">LayoutProperties</span> <span class="token punctuation">&#123;</span> <span class="token keyword">get</span> <span class="token punctuation">&#125;</span>  <span class="token keyword">associatedtype</span> <span class="token class-name">Cache</span> <span class="token operator">=</span> <span class="token class-name">Void</span>  <span class="token keyword">typealias</span> <span class="token class-name">Subviews</span> <span class="token operator">=</span> <span class="token class-name">LayoutSubviews</span>  <span class="token keyword">func</span> <span class="token function-definition function">updateCache</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Cache</span><span class="token punctuation">,</span> subviews<span class="token punctuation">:</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Subviews</span><span class="token punctuation">)</span>  <span class="token keyword">func</span> <span class="token function-definition function">spacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Subviews</span><span class="token punctuation">,</span> cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Cache</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">ViewSpacing</span>  <span class="token comment">/// We return our view size here, use the passed parameters for computing the</span>  <span class="token comment">/// layout.</span>  <span class="token keyword">func</span> <span class="token function-definition function">sizeThatFits</span><span class="token punctuation">(</span>    proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span>     subviews<span class="token punctuation">:</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Subviews</span><span class="token punctuation">,</span>     cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Cache</span> <span class="token comment">// 👈🏻 use this for calculated data shared among Layout methods</span>  <span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGSize</span>    <span class="token comment">/// Use this to tell your subviews where to appear.</span>  <span class="token keyword">func</span> <span class="token function-definition function">placeSubviews</span><span class="token punctuation">(</span>    <span class="token keyword">in</span> bounds<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">,</span> <span class="token comment">// 👈🏻 region where we need to place our subviews into, origin might not be .zero</span>    proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span>     subviews<span class="token punctuation">:</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Subviews</span><span class="token punctuation">,</span>     cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Cache</span>  <span class="token punctuation">)</span>    <span class="token comment">// ... there are more a couple more optional methods</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面例子是一个自定义的水平 stack 视图，为其所有子视图提供其最大子视图的宽度：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">MyEqualWidthHStack</span><span class="token punctuation">:</span> <span class="token class-name">Layout</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/// Returns a size that the layout container needs to arrange its subviews.</span>  <span class="token comment">/// - Tag: sizeThatFitsHorizontal</span>  <span class="token keyword">func</span> <span class="token function-definition function">sizeThatFits</span><span class="token punctuation">(</span>    proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span>    subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">,</span>    cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">Void</span>  <span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGSize</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">guard</span> <span class="token operator">!</span>subviews<span class="token punctuation">.</span>isEmpty <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token punctuation">.</span>zero <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> maxSize <span class="token operator">=</span> <span class="token function">maxSize</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> spacing <span class="token operator">=</span> <span class="token function">spacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> totalSpacing <span class="token operator">=</span> spacing<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span> <span class="token operator">+</span> <span class="token short-argument">$1</span> <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>      width<span class="token punctuation">:</span> maxSize<span class="token punctuation">.</span>width <span class="token operator">*</span> <span class="token class-name">CGFloat</span><span class="token punctuation">(</span>subviews<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token operator">+</span> totalSpacing<span class="token punctuation">,</span>      height<span class="token punctuation">:</span> maxSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">/// Places the stack's subviews.</span>  <span class="token comment">/// - Tag: placeSubviewsHorizontal</span>  <span class="token keyword">func</span> <span class="token function-definition function">placeSubviews</span><span class="token punctuation">(</span>    <span class="token keyword">in</span> bounds<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">,</span>    proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span>    subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">,</span>    cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">Void</span>  <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">guard</span> <span class="token operator">!</span>subviews<span class="token punctuation">.</span>isEmpty <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> maxSize <span class="token operator">=</span> <span class="token function">maxSize</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> spacing <span class="token operator">=</span> <span class="token function">spacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> placementProposal <span class="token operator">=</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> maxSize<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> maxSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span>    <span class="token keyword">var</span> nextX <span class="token operator">=</span> bounds<span class="token punctuation">.</span>minX <span class="token operator">+</span> maxSize<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span>    <span class="token keyword">for</span> index <span class="token keyword">in</span> subviews<span class="token punctuation">.</span>indices <span class="token punctuation">&#123;</span>      subviews<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">place</span><span class="token punctuation">(</span>        at<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> nextX<span class="token punctuation">,</span> y<span class="token punctuation">:</span> bounds<span class="token punctuation">.</span>midY<span class="token punctuation">)</span><span class="token punctuation">,</span>        anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">,</span>        proposal<span class="token punctuation">:</span> placementProposal<span class="token punctuation">)</span>      nextX <span class="token operator">+=</span> maxSize<span class="token punctuation">.</span>width <span class="token operator">+</span> spacing<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">/// Finds the largest ideal size of the subviews.</span>  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">maxSize</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGSize</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> subviewSizes <span class="token operator">=</span> subviews<span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">sizeThatFits</span><span class="token punctuation">(</span><span class="token punctuation">.</span>unspecified<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> maxSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span> <span class="token operator">=</span> subviewSizes<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">.</span>zero<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> currentMax<span class="token punctuation">,</span> subviewSize <span class="token keyword">in</span>      <span class="token class-name">CGSize</span><span class="token punctuation">(</span>        width<span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span>currentMax<span class="token punctuation">.</span>width<span class="token punctuation">,</span> subviewSize<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span>        height<span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span>currentMax<span class="token punctuation">.</span>height<span class="token punctuation">,</span> subviewSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> maxSize  <span class="token punctuation">&#125;</span>  <span class="token comment">/// Gets an array of preferred spacing sizes between subviews in the</span>  <span class="token comment">/// horizontal dimension.</span>  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">spacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">[</span><span class="token class-name">CGFloat</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>    subviews<span class="token punctuation">.</span>indices<span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> index <span class="token keyword">in</span>      <span class="token keyword">guard</span> index <span class="token operator">&lt;</span> subviews<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span> subviews<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>spacing<span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span>        to<span class="token punctuation">:</span> subviews<span class="token punctuation">[</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>spacing<span class="token punctuation">,</span>        along<span class="token punctuation">:</span> <span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自定义 layout 只能访问子视图代理 <code>Layout.Subviews</code> ，而不是视图或数据模型。我们可以通过 LayoutValueKey 在每个子视图上存储自定义值，通过 <code>layoutValue(key:value:)</code> modifier 设置。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">private</span> <span class="token keyword">struct</span> <span class="token class-name">Rank</span><span class="token punctuation">:</span> <span class="token class-name">LayoutValueKey</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">static</span> <span class="token keyword">let</span> defaultValue<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">func</span> <span class="token function-definition function">rank</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> value<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 👈🏻 convenience method</span>    <span class="token function">layoutValue</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token class-name">Rank</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> value<span class="token punctuation">)</span> <span class="token comment">// 👈🏻 the new modifier</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后，我们就可以通过 Layout 方法中的 <code>Layout.Subviews</code> 代理读取自定义 <code>LayoutValueKey</code> 值：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">func</span> <span class="token function-definition function">placeSubviews</span><span class="token punctuation">(</span>  <span class="token keyword">in</span> bounds<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">,</span>  proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span>  subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">,</span>  cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> ranks <span class="token operator">=</span> subviews<span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> subview <span class="token keyword">in</span>    subview<span class="token punctuation">[</span><span class="token class-name">Rank</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span> <span class="token comment">// 👈🏻</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>要在布局之间变化使用动画，需要用 AnyLayout，代码示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PAnyLayout</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isVertical <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> layout <span class="token operator">=</span> isVertical <span class="token operator">?</span> <span class="token class-name">AnyLayout</span><span class="token punctuation">(</span><span class="token class-name">VStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token class-name">AnyLayout</span><span class="token punctuation">(</span><span class="token class-name">HStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        layout <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"star"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>yellow<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Starming.com"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"戴铭"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Click"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            withAnimation <span class="token punctuation">&#123;</span>                isVertical<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end button</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时 Text 和图片也支持了样式布局变化，代码示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PTextTransitionsView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> expandMessage <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> mintWithShadow<span class="token punctuation">:</span> <span class="token class-name">AnyShapeStyle</span> <span class="token operator">=</span> <span class="token class-name">AnyShapeStyle</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>mint<span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> primaryWithoutShadow<span class="token punctuation">:</span> <span class="token class-name">AnyShapeStyle</span> <span class="token operator">=</span> <span class="token class-name">AnyShapeStyle</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>primary<span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Dai Ming Swift Pamphlet"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span>expandMessage <span class="token operator">?</span> <span class="token punctuation">.</span>largeTitle<span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>heavy<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>body<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span>expandMessage <span class="token operator">?</span> mintWithShadow <span class="token punctuation">:</span> primaryWithoutShadow<span class="token punctuation">)</span>            <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span> withAnimation <span class="token punctuation">&#123;</span> expandMessage<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> expandMessage <span class="token operator">?</span> <span class="token number">150</span> <span class="token punctuation">:</span> <span class="token number">250</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">drawingGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token punctuation">.</span>cyan<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ContentUnavailableView"><a href="#ContentUnavailableView" class="headerlink" title="ContentUnavailableView"></a>ContentUnavailableView</h2><p>基本用法</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArchivedInfosView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>modelContext<span class="token punctuation">)</span> <span class="token keyword">var</span> modelContext    <span class="token attribute atrule">@Query</span> <span class="token keyword">var</span> infos<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">IOInfo</span><span class="token punctuation">]</span>    <span class="token operator">...</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selectInfo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>infos<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> info <span class="token keyword">in</span>                <span class="token operator">...</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>overlay <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> infos<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span>                <span class="token class-name">ContentUnavailableView</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"无归档"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"archivebox"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span> description<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"点击下方按钮添加一个归档资料"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span> actions<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"新增"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token function">addInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>搜索</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Bindable</span> <span class="token keyword">var</span> vm<span class="token punctuation">:</span> <span class="token class-name">VModel</span>    <span class="token operator">...</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>items<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token operator">...</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Products"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span>overlay <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> vm<span class="token punctuation">.</span>items<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span>                    <span class="token class-name">ContentUnavailableView</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> vm<span class="token punctuation">.</span>query<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $vm<span class="token punctuation">.</span>query<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容已整理到小册子中，小册子代码在 &lt;a href=&quot;https://github.com/ming1016/SwiftPamphletApp&quot;&gt;Github&lt;/a&gt; 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买&lt;a href=&quot;https://apps
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</title>
    <link href="https://starming.com/2024/05/18/pamphlet-series-listdataview/"/>
    <id>https://starming.com/2024/05/18/pamphlet-series-listdataview/</id>
    <published>2024-05-18T01:06:54.000Z</published>
    <updated>2024-05-25T12:27:25.211Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容已整理到小册子中，小册子代码在 <a href="https://github.com/ming1016/SwiftPamphletApp">Github</a> 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">“戴铭的开发小册子”</a>应用(98元)，来跟踪查看本文内容新增和更新。</p><p>本文属于小册子系列中的一篇，已发布系列文章有：</p><ul><li><a href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/">小册子之如何使用 SwiftData 开发 SwiftUI 应用</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-widget/">小册子之简说 Widget 小组件</a></li><li>【本篇】<a href="https://starming.com/2024/05/18/pamphlet-series-listdataview/">小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-layout/">小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-form/">小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/25/pamphlet-series-animation/">小册子之 SwiftUI 动画</a></li></ul><h2 id="ForEach"><a href="#ForEach" class="headerlink" title="ForEach"></a>ForEach</h2><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>在 SwiftUI 中，<code>ForEach</code> 是一个结构体，它可以创建一组视图，每个视图都有一个与数据集中的元素相对应的唯一标识符。这对于在列表或其他集合视图中显示数据非常有用。</p><p>以下视图集会用到 ForEach：</p><ul><li>List</li><li>ScrollView</li><li>LazyVStack &#x2F; LazyHStack</li><li>Picker</li><li>Grids (LazyVGrid &#x2F; LazyHGrid)</li></ul><p>例如，如果你有一个 <code>BookmarkModel</code> 的数组，并且你想为每个书签创建一个文本视图，你可以这样做：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> bookmarks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">BookmarkModel</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>bookmarks<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> bookmark <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>bookmark<span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>ForEach</code> 遍历 <code>bookmarks</code> 数组，并为每个 <code>BookmarkModel</code> 对象创建一个 <code>Text</code> 视图。<code>bookmark</code> 参数是当前遍历的 <code>BookmarkModel</code> 对象。</p><p><code>BookmarkModel</code> 必须遵循 <code>Identifiable</code> 协议，这样 SwiftUI 才能知道如何唯一地标识每个视图。在你的代码中，<code>BookmarkModel</code> 已经有一个 <code>id</code> 属性，所以你只需要让 <code>BookmarkModel</code> 遵循 <code>Identifiable</code> 协议即可：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">BookmarkModel</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// your code here</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="使用索引范围进行编号"><a href="#使用索引范围进行编号" class="headerlink" title="使用索引范围进行编号"></a>使用索引范围进行编号</h3><p>你可以使用 <code>ForEach</code> 结构体的另一个版本，它接受一个范围作为其数据源。这个范围可以是一个索引范围，这样你就可以为每个项目编号。</p><p>例如，如果你有一个 <code>BookmarkModel</code> 的数组，并且你想为每个书签创建一个文本视图，并在前面添加一个编号，你可以这样做：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> bookmarks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">BookmarkModel</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>bookmarks<span class="token punctuation">.</span>indices<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">index <span class="token operator">+</span> <span class="token number">1</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">. </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">bookmarks<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，<code>ForEach</code> 遍历 <code>bookmarks</code> 数组的索引，并为每个 <code>BookmarkModel</code> 对象创建一个 <code>Text</code> 视图。<code>index</code> 参数是当前遍历的索引。我们使用 <code>\(index + 1). \(bookmarks[index].name)</code> 来创建一个带有编号的文本视图。请注意，我们使用 <code>index + 1</code> 而不是 <code>index</code>，因为数组的索引是从 0 开始的，但我们通常希望编号是从 1 开始的。</p><h3 id="使用-enumerated-编号"><a href="#使用-enumerated-编号" class="headerlink" title="使用 enumerated 编号"></a>使用 enumerated 编号</h3><p> <code>enumerated()</code> </p><p>以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> bookmarks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">BookmarkModel</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">(</span>bookmarks<span class="token punctuation">.</span><span class="token function">enumerated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index<span class="token punctuation">,</span> bookmark <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">index</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">. </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">bookmark<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们使用 <code>Array(bookmarks.enumerated())</code> 来创建一个元组数组，每个元组包含一个索引和一个 <code>BookmarkModel</code> 对象。然后，我们使用 <code>ForEach</code> 遍历这个元组数组，并为每个元组创建一个 <code>Text</code> 视图。<code>index</code> 参数是当前遍历的索引，<code>bookmark</code> 参数是当前遍历的 <code>BookmarkModel</code> 对象。</p><h3 id="使用-zip-编号"><a href="#使用-zip-编号" class="headerlink" title="使用 zip 编号"></a>使用 zip 编号</h3><p><code>zip(_:_:)</code> 函数可以将两个序列合并为一个元组序列。你可以使用这个函数和 <code>ForEach</code> 结构体来为数组中的每个元素添加一个编号。</p><p>例如，如果你有一个 <code>BookmarkModel</code> 的数组，并且你想为每个书签创建一个文本视图，并在前面添加一个编号，你可以这样做：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> bookmarks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">BookmarkModel</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token function">zip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">...</span><span class="token punctuation">,</span> bookmarks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index<span class="token punctuation">,</span> bookmark <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">index</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">. </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">bookmark<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>写出扩展，方便调用</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@dynamicMemberLookup</span><span class="token keyword">struct</span> <span class="token class-name">Numbered</span><span class="token operator">&lt;</span><span class="token class-name">Element</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> number<span class="token punctuation">:</span> <span class="token class-name">Int</span>    <span class="token keyword">var</span> element<span class="token punctuation">:</span> <span class="token class-name">Element</span>        <span class="token keyword">subscript</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">></span><span class="token punctuation">(</span>dynamicMember keyPath<span class="token punctuation">:</span> <span class="token class-name">WritableKeyPath</span><span class="token operator">&lt;</span><span class="token class-name">Element</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">T</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">get</span> <span class="token punctuation">&#123;</span> element<span class="token punctuation">[</span>keyPath<span class="token punctuation">:</span> keyPath<span class="token punctuation">]</span> <span class="token punctuation">&#125;</span>        <span class="token keyword">set</span> <span class="token punctuation">&#123;</span> element<span class="token punctuation">[</span>keyPath<span class="token punctuation">:</span> keyPath<span class="token punctuation">]</span> <span class="token operator">=</span> newValue <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">Sequence</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">numbered</span><span class="token punctuation">(</span>startingAt start<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">[</span><span class="token class-name">Numbered</span><span class="token operator">&lt;</span><span class="token class-name">Element</span><span class="token operator">></span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>        <span class="token function">zip</span><span class="token punctuation">(</span>start<span class="token operator">...</span><span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> <span class="token class-name">Numbered</span><span class="token punctuation">(</span>number<span class="token punctuation">:</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">,</span> element<span class="token punctuation">:</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">Numbered</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token keyword">where</span> <span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> id<span class="token punctuation">:</span> <span class="token class-name">Element</span><span class="token punctuation">.</span><span class="token constant">ID</span> <span class="token punctuation">&#123;</span> element<span class="token punctuation">.</span>id <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">ForEach</span><span class="token punctuation">(</span>bookmark<span class="token punctuation">.</span><span class="token function">numbered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> numberedBookmark <span class="token keyword">in</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">numberedBookmark<span class="token punctuation">.</span>number</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">. </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">numberedBookmark<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Scroll视图"><a href="#Scroll视图" class="headerlink" title="Scroll视图"></a>Scroll视图</h2><h3 id="ScrollView"><a href="#ScrollView" class="headerlink" title="ScrollView"></a>ScrollView</h3><h4 id="新增-modifier"><a href="#新增-modifier" class="headerlink" title="新增 modifier"></a>新增 modifier</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">scrollDisabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// 设置是否可滚动</span><span class="token punctuation">.</span><span class="token function">scrollDismissesKeyboard</span><span class="token punctuation">(</span><span class="token punctuation">.</span>interactively<span class="token punctuation">)</span> <span class="token comment">// 关闭键盘</span><span class="token punctuation">.</span><span class="token function">scrollIndicators</span><span class="token punctuation">(</span><span class="token punctuation">.</span>visible<span class="token punctuation">)</span> <span class="token comment">// 设置滚动指示器是否可见</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ScrollViewReader"><a href="#ScrollViewReader" class="headerlink" title="ScrollViewReader"></a>ScrollViewReader</h4><p>ScrollView 使用 scrollTo 可以直接滚动到指定的位置。ScrollView 还可以透出偏移量，利用偏移量可以定义自己的动态视图，比如向下向上滚动视图时有不同效果，到顶部显示标题视图等。</p><p>示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayScrollView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scrollOffset<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero        <span class="token keyword">var</span> infoView<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">GeometryReader</span> <span class="token punctuation">&#123;</span> g <span class="token keyword">in</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>"移动了 <span class="token punctuation">\</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">(</span>scrollOffset<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">formatted</span><span class="token punctuation">(</span><span class="token punctuation">.</span>number<span class="token punctuation">.</span><span class="token function">precision</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">fractionLength</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rounded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>"<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 标准用法</span>        <span class="token class-name">ScrollViewReader</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>            <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"跳到150"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    s<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end Button</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end ScrollViewReader</span>                <span class="token comment">// 自定义的 ScrollView 透出 offset 供使用</span>        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">PCScrollView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> whenMoved<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> d <span class="token keyword">in</span>                scrollOffset <span class="token operator">=</span> d            <span class="token punctuation">&#125;</span>            infoView                    <span class="token punctuation">&#125;</span> <span class="token comment">// end ZStack</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 自定义 ScrollView</span><span class="token keyword">struct</span> <span class="token class-name">PCScrollView</span><span class="token operator">&lt;</span><span class="token class-name">C</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> c<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">C</span>    <span class="token keyword">let</span> whenMoved<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">CGFloat</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span>        <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token attribute atrule">@ViewBuilder</span> c<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">C</span><span class="token punctuation">,</span> whenMoved<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">CGFloat</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>c <span class="token operator">=</span> c        <span class="token keyword">self</span><span class="token punctuation">.</span>whenMoved <span class="token operator">=</span> whenMoved    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> offsetReader<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">GeometryReader</span> <span class="token punctuation">&#123;</span> g <span class="token keyword">in</span>            <span class="token class-name">Color</span><span class="token punctuation">.</span>clear                <span class="token punctuation">.</span><span class="token function">preference</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token class-name">OffsetPreferenceKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> g<span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">named</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"frameLayer"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>minY<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>            offsetReader            <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>top<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">coordinateSpace</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"frameLayer"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">onPreferenceChange</span><span class="token punctuation">(</span><span class="token class-name">OffsetPreferenceKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> perform<span class="token punctuation">:</span> whenMoved<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span class="token keyword">private</span> <span class="token keyword">struct</span> <span class="token class-name">OffsetPreferenceKey</span><span class="token punctuation">:</span> <span class="token class-name">PreferenceKey</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">static</span> <span class="token keyword">var</span> defaultValue<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero  <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">reduce</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">CGFloat</span><span class="token punctuation">,</span> nextValue<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGFloat</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="固定到滚动视图的顶部"><a href="#固定到滚动视图的顶部" class="headerlink" title="固定到滚动视图的顶部"></a>固定到滚动视图的顶部</h3><p>LazyVStack 有个参数 pinnedViews 可以用于固定滚动视图的顶部。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">LazyVStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> pinnedViews<span class="token punctuation">:</span> <span class="token punctuation">.</span>sectionHeaders<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> book <span class="token keyword">in</span>                <span class="token class-name">BookRowView</span><span class="token punctuation">(</span>book<span class="token punctuation">:</span> book<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> header<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">HeaderView</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"小说"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">....</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="滚动到特定的位置"><a href="#滚动到特定的位置" class="headerlink" title="滚动到特定的位置"></a>滚动到特定的位置</h3><h4 id="scrollPostion-版本"><a href="#scrollPostion-版本" class="headerlink" title="scrollPostion 版本"></a>scrollPostion 版本</h4><p><code>scrollPositon(id:)</code> 比 ScrollViewReader 简单，但是只适用于 ScrollView。数据源遵循 Identifiable，不用显式使用 <code>id</code> 修饰符</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> id<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token operator">?</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Scroll to Bookmark 3"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    id <span class="token operator">=</span> <span class="token number">3</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Scroll to Bookmark 13"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    id <span class="token operator">=</span> <span class="token number">13</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ScrollViewReader</span> <span class="token punctuation">&#123;</span> scrollView <span class="token keyword">in</span>                    <span class="token class-name">LazyVStack</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Bookmark</span><span class="token punctuation">.</span><span class="token function">simpleData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> bookmark <span class="token keyword">in</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">bookmark<span class="token punctuation">.</span>index</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>bookmark<span class="token punctuation">.</span>index<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                                            <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">scrollPosition</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> $id<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">scrollTargetLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">struct</span> <span class="token class-name">Bookmark</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span><span class="token class-name">Hashable</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> index<span class="token punctuation">:</span> <span class="token class-name">Int</span>                <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">simpleData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">[</span><span class="token class-name">Bookmark</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> re <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">Bookmark</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token operator">...</span><span class="token number">100</span> <span class="token punctuation">&#123;</span>                re<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Bookmark</span><span class="token punctuation">(</span>index<span class="token punctuation">:</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> re        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>scrollTargetLayout 可以获得当前滚动位置。锚点不可配，默认是 center。</p><h4 id="ScrollViewReader-版本"><a href="#ScrollViewReader-版本" class="headerlink" title="ScrollViewReader 版本"></a>ScrollViewReader 版本</h4><p>ScrollViewReader 这个版本可以适用于 List，也可以配置锚点</p><p>你可以使用 <code>ScrollViewReader</code> 和 <code>scrollTo(_:anchor:)</code> 方法来滚动到特定的元素。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> bookmarks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">...</span><span class="token number">100</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedBookmarkId<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token operator">?</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Scroll to Bookmark 3"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                selectedBookmarkId <span class="token operator">=</span> <span class="token number">3</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Scroll to Bookmark 13"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                selectedBookmarkId <span class="token operator">=</span> <span class="token number">13</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ScrollViewReader</span> <span class="token punctuation">&#123;</span> scrollView <span class="token keyword">in</span>                    <span class="token class-name">LazyVStack</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">ForEach</span><span class="token punctuation">(</span>bookmarks<span class="token punctuation">.</span>indices<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index <span class="token keyword">in</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">bookmarks<span class="token punctuation">[</span>index<span class="token punctuation">]</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                        <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> selectedBookmarkId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> oldValue<span class="token punctuation">,</span> newValue <span class="token keyword">in</span>                            <span class="token keyword">if</span> <span class="token keyword">let</span> newValue <span class="token operator">=</span> newValue <span class="token punctuation">&#123;</span>                                withAnimation <span class="token punctuation">&#123;</span>                                    scrollView<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span>                                <span class="token punctuation">&#125;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们首先创建了一个 <code>Button</code>，当点击这个按钮时，<code>selectedBookmarkId</code> 的值会被设置为 3。然后，我们创建了一个 <code>ScrollView</code>，并在 <code>ScrollView</code> 中添加了一个 <code>ScrollViewReader</code>。我们在 <code>ScrollViewReader</code> 中添加了一个 <code>LazyVStack</code>，并使用 <code>ForEach</code> 遍历 <code>bookmarks</code> 数组的索引，为每个索引创建一个 <code>Text</code> 视图。我们使用 <code>id(_:)</code> 方法为每个 <code>Text</code> 视图设置了一个唯一的 ID。</p><p>我们使用 <code>onChange(of:perform:)</code> 方法来监听 <code>selectedBookmarkId</code> 的变化。当 <code>selectedBookmarkId</code> 的值改变时，我们会调用 <code>scrollTo(_:anchor:)</code> 方法来滚动到特定的元素。<code>anchor: .top</code> 参数表示我们希望滚动到的元素位于滚动视图的顶部。</p><h3 id="scrollTargetBehavior分页滚动"><a href="#scrollTargetBehavior分页滚动" class="headerlink" title="scrollTargetBehavior分页滚动"></a>scrollTargetBehavior分页滚动</h3><h4 id="按可视尺寸分页"><a href="#按可视尺寸分页" class="headerlink" title="按可视尺寸分页"></a>按可视尺寸分页</h4><p><code>.scrollTargetBehavior(.paging)</code> 可以让 ScrollView 滚动，滚动一页的范围是 ScrollView 的可视尺寸。 </p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LazyHStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">...</span><span class="token number">20</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token function">colorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">scrollTargetBehavior</span><span class="token punctuation">(</span><span class="token punctuation">.</span>paging<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@ViewBuilder</span>    <span class="token keyword">func</span> <span class="token function-definition function">colorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">[</span><span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>yellow<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>mint<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>indigo<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">randomElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="按容器元素对齐分页"><a href="#按容器元素对齐分页" class="headerlink" title="按容器元素对齐分页"></a>按容器元素对齐分页</h4><p>使用 <code>.scrollTargetBehavior(.viewAligned)</code> 配合 scrollTargetLayout。示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LazyHStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">...</span><span class="token number">20</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token function">colorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">scrollTargetLayout</span><span class="token punctuation">(</span>isEnabled<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">scrollTargetBehavior</span><span class="token punctuation">(</span><span class="token punctuation">.</span>viewAligned<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@ViewBuilder</span>    <span class="token keyword">func</span> <span class="token function-definition function">colorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">[</span><span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>yellow<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>mint<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>indigo<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">randomElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="scrollTransition视觉效果"><a href="#scrollTransition视觉效果" class="headerlink" title="scrollTransition视觉效果"></a>scrollTransition视觉效果</h3><p>iOS 17 新推出 <code>.scrollTransition</code>，用于处理滚动时的动画。</p><p><code>.transition</code> 用于视图插入和移除视图树时的动画。</p><p><code>.scrollTransition</code> 会和滚动联合起来进行平滑的过渡动画处理。<code>.scrollTransition</code> 可以修改很多属性，比如大小，可见性还有旋转等。</p><p><code>.scrollTransition</code> 可以针对不同阶段进行处理，目前有三个阶段：</p><ul><li><code>topLeading</code>: 视图进入 ScrollView 可见区域</li><li><code>identity</code>: 在可见区域中</li><li><code>bottomTrailing</code>: 视图离开 ScrollView 可见区域</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LazyHStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">...</span><span class="token number">20</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token function">colorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span>scrollTransition <span class="token punctuation">&#123;</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span>                             content                                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>isIdentity <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0.4</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@ViewBuilder</span>    <span class="token keyword">func</span> <span class="token function-definition function">colorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">[</span><span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>yellow<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>mint<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>indigo<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">randomElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用阶段的值</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">scrollTransition</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">animated</span><span class="token punctuation">(</span><span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span>    content        <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>isIdentity <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> phase<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>不同阶段的产生效果设置</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">scrollTransition</span><span class="token punctuation">(</span>    topLeading<span class="token punctuation">:</span> <span class="token punctuation">.</span>animated<span class="token punctuation">,</span>    bottomTrailing<span class="token punctuation">:</span> <span class="token punctuation">.</span>interactive<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span>    content<span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">radians</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>.rotation3DEffect</code> 也是支持的。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">scrollTransition</span><span class="token punctuation">(</span><span class="token punctuation">.</span>interactive<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span>    content        <span class="token punctuation">.</span><span class="token function">rotation3DEffect</span><span class="token punctuation">(</span>            <span class="token class-name">Angle</span><span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>isIdentity <span class="token operator">?</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            axis<span class="token punctuation">:</span> <span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.9</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span> z<span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> phase<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ScrollView-参考资料"><a href="#ScrollView-参考资料" class="headerlink" title="ScrollView-参考资料"></a>ScrollView-参考资料</h3><h4 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h4><ul><li><a href="https://developer.apple.com/documentation/swiftui/scrollview">ScrollView | Apple Developer Documentation</a> 官方文档</li><li><a href="https://developer.apple.com/documentation/swiftui/scroll-views">Scroll views | 接口</a> 官方接口文档</li></ul><h4 id="WWDC"><a href="#WWDC" class="headerlink" title="WWDC"></a>WWDC</h4><p>23</p><ul><li><a href="https://developer.apple.com/wwdc23/10159">Beyond scroll views - WWDC23 - Videos - Apple Developer</a></li></ul><h2 id="List列表"><a href="#List列表" class="headerlink" title="List列表"></a>List列表</h2><h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/list-ap01.jpeg" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/list-ap01.jpeg"></p><p>List 除了能够展示数据外，还有下拉刷新、过滤搜索和侧滑 Swipe 动作提供更多 Cell 操作的能力。</p><p>通过 List 的可选子项参数提供数据模型的关键路径来制定子项路劲，还可以实现大纲视图，使用 DisclosureGroup 和 OutlineGroup  可以进一步定制大纲视图。</p><p>使用 <code>.listRowSeparator(.hidden, edges: .all)</code> 可以隐藏分割线。</p><p>下面是 List 使用，包括了 DisclosureGroup 和 OutlineGroup 的演示代码：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayListView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@StateObject</span> <span class="token keyword">var</span> l<span class="token punctuation">:</span> <span class="token constant">PLVM</span> <span class="token operator">=</span> <span class="token function">PLVM</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> s<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>        <span class="token keyword">var</span> outlineModel <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"文件夹一"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"folder.fill"</span></span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"个人"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"person.crop.circle.fill"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"群组"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"person.2.circle.fill"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"加好友"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"person.badge.plus"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"文件夹二"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"folder.fill"</span></span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"晴天"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"sun.max.fill"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"夜间"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"moon.fill"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"雨天"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"cloud.rain.fill"</span></span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"雷加雨"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"cloud.bolt.rain.fill"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"太阳雨"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"cloud.sun.rain.fill"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"文件夹三"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"folder.fill"</span></span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"电话"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"phone"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"拍照"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"camera.circle.fill"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"提醒"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"bell"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// List 通过$语法可以将集合的元素转换成可绑定的值</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>$l<span class="token punctuation">.</span>ls<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> $d <span class="token keyword">in</span>                    <span class="token class-name">PRowView</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> d<span class="token punctuation">.</span>s<span class="token punctuation">,</span> i<span class="token punctuation">:</span> d<span class="token punctuation">.</span>i<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">listRowInsets</span><span class="token punctuation">(</span><span class="token class-name">EdgeInsets</span><span class="token punctuation">(</span>top<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> leading<span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> trailing<span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">listRowBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span>refreshable <span class="token punctuation">&#123;</span>                <span class="token comment">// 下拉刷新</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $s<span class="token punctuation">)</span> <span class="token comment">// 搜索</span>            <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> s<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> newValue <span class="token keyword">in</span>                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"搜索关键字：</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">s</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token comment">// 自定义 List</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">PCustomListView</span><span class="token punctuation">(</span>$l<span class="token punctuation">.</span>ls<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> $d <span class="token keyword">in</span>                    <span class="token class-name">PRowView</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> d<span class="token punctuation">.</span>s<span class="token punctuation">,</span> i<span class="token punctuation">:</span> d<span class="token punctuation">.</span>i<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">// 添加数据</span>                <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>                    l<span class="token punctuation">.</span>ls<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">PLModel</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"More"</span></span><span class="token punctuation">,</span> i<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"添加"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token comment">// 使用大纲</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>outlineModel<span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                <span class="token class-name">Label</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>title<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> i<span class="token punctuation">.</span>iconName<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token comment">// 自定义大纲视图</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"可点击标题展开"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>                <span class="token class-name">PCOutlineListView</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> outlineModel<span class="token punctuation">,</span> c<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token class-name">Label</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>title<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> i<span class="token punctuation">.</span>iconName<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token comment">// 使用 OutlineGroup 实现大纲视图</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"OutlineGroup 实现大纲"</span></span><span class="token punctuation">)</span>                                <span class="token class-name">OutlineGroup</span><span class="token punctuation">(</span>outlineModel<span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token class-name">Label</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>title<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> i<span class="token punctuation">.</span>iconName<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                                <span class="token comment">// OutlineGroup 和 List 结合</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"OutlineGroup 和 List 结合"</span></span><span class="token punctuation">)</span>                <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>outlineModel<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>                        <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">OutlineGroup</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>children <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                                <span class="token class-name">Label</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>title<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> i<span class="token punctuation">.</span>iconName<span class="token punctuation">)</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span> header<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Label</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>title<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> s<span class="token punctuation">.</span>iconName<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span> <span class="token comment">// end ForEach</span>                <span class="token punctuation">&#125;</span> <span class="token comment">// end List</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end VStack</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end HStack</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 自定义大纲视图</span><span class="token keyword">struct</span> <span class="token class-name">PCOutlineListView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">D</span><span class="token punctuation">:</span> <span class="token class-name">RandomAccessCollection</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> v<span class="token punctuation">:</span> <span class="token class-name">PCOutlineView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span>        <span class="token keyword">init</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> <span class="token class-name">D</span><span class="token punctuation">,</span> c<span class="token punctuation">:</span> <span class="token class-name">KeyPath</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token operator">?></span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>v <span class="token operator">=</span> <span class="token class-name">PCOutlineView</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> d<span class="token punctuation">,</span> c<span class="token punctuation">:</span> c<span class="token punctuation">,</span> content<span class="token punctuation">:</span> content<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            v        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PCOutlineView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">D</span><span class="token punctuation">:</span> <span class="token class-name">RandomAccessCollection</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> d<span class="token punctuation">:</span> <span class="token class-name">D</span>    <span class="token keyword">let</span> c<span class="token punctuation">:</span> <span class="token class-name">KeyPath</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token operator">?></span>    <span class="token keyword">let</span> content<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isExpanded <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 控制初始是否展开的状态</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ForEach</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> sub <span class="token operator">=</span> i<span class="token punctuation">[</span>keyPath<span class="token punctuation">:</span> c<span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">PCDisclosureGroup</span><span class="token punctuation">(</span>content<span class="token punctuation">:</span> <span class="token class-name">PCOutlineView</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> sub<span class="token punctuation">,</span> c<span class="token punctuation">:</span> c<span class="token punctuation">,</span> content<span class="token punctuation">:</span> content<span class="token punctuation">)</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token function">content</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token function">content</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end if</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end ForEach</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PCDisclosureGroup</span><span class="token operator">&lt;</span><span class="token class-name">C</span><span class="token punctuation">,</span> <span class="token class-name">L</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">C</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token punctuation">,</span> <span class="token class-name">L</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isExpanded <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> content<span class="token punctuation">:</span> <span class="token class-name">C</span>    <span class="token keyword">var</span> label<span class="token punctuation">:</span> <span class="token class-name">L</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">DisclosureGroup</span><span class="token punctuation">(</span>isExpanded<span class="token punctuation">:</span> $isExpanded<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            content        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>                isExpanded<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                label            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">buttonStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>plain<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 大纲模式数据模型</span><span class="token keyword">struct</span> <span class="token class-name">POutlineModel</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span><span class="token punctuation">,</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> iconName<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">POutlineModel</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - List 的抽象，数据兼容任何集合类型</span><span class="token keyword">struct</span> <span class="token class-name">PCustomListView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">:</span> <span class="token class-name">RandomAccessCollection</span> <span class="token operator">&amp;</span> <span class="token class-name">MutableCollection</span> <span class="token operator">&amp;</span> <span class="token class-name">RangeReplaceableCollection</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> data<span class="token punctuation">:</span> <span class="token class-name">D</span>    <span class="token keyword">var</span> content<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span>        <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> data<span class="token punctuation">:</span> <span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token operator">></span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>_data <span class="token operator">=</span> data        <span class="token keyword">self</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>$data<span class="token punctuation">,</span> content<span class="token punctuation">:</span> content<span class="token punctuation">)</span>                    <span class="token punctuation">.</span>onMove <span class="token punctuation">&#123;</span> indexSet<span class="token punctuation">,</span> offset <span class="token keyword">in</span>                        data<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>fromOffsets<span class="token punctuation">:</span> indexSet<span class="token punctuation">,</span> toOffset<span class="token punctuation">:</span> offset<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span>onDelete <span class="token punctuation">&#123;</span> indexSet <span class="token keyword">in</span>                        data<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>atOffsets<span class="token punctuation">:</span> indexSet<span class="token punctuation">)</span> <span class="token comment">// macOS 暂不支持</span>                    <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> header<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"第一栏，共 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">data<span class="token punctuation">.</span>count</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 项"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> footer<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"The End"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">listStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>plain<span class="token punctuation">)</span> <span class="token comment">// 有.automatic、.inset、.plain、sidebar，macOS 暂不支持的有.grouped 和 .insetGrouped</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - Cell 视图</span><span class="token keyword">struct</span> <span class="token class-name">PRowView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> s<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> i<span class="token punctuation">:</span> <span class="token class-name">Int</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">："</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 数据模型设计</span><span class="token keyword">struct</span> <span class="token class-name">PLModel</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span><span class="token punctuation">,</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> s<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> i<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">&#125;</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token constant">PLVM</span><span class="token punctuation">:</span> <span class="token class-name">ObservableObject</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Published</span> <span class="token keyword">var</span> ls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">PLModel</span><span class="token punctuation">]</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">PLModel</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token operator">...</span><span class="token number">20</span> <span class="token punctuation">&#123;</span>            ls<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">PLModel</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">,</span> i<span class="token punctuation">:</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>list 支持 Section footer。</p><p>list 分隔符可以自定义，使用  <code>HorizontalEdge.leading</code> 和 <code>HorizontalEdge.trailing</code> 。</p><p>list 不使用 UITableView 了。</p><p>今年 list 还新增了一个 <a href="https://developer.apple.com/documentation/swiftui/editoperations">EditOperation</a> 可以自动生成移动和删除，新增了 edits 参数，传入 <code>[.delete, .move]</code> 数组即可。这也是一个演示如何更好扩展和配置功能的方式。</p><p><code>.searchable</code> 支持 token 和 scope，示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PSearchTokensAndScopes</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">enum</span> <span class="token class-name">AttendanceScope</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> inPerson<span class="token punctuation">,</span> online    <span class="token punctuation">&#125;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> queryText<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> queryTokens<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">InvitationToken</span><span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scope<span class="token punctuation">:</span> <span class="token class-name">AttendanceScope</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token function">invitationCountView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $queryText<span class="token punctuation">,</span> tokens<span class="token punctuation">:</span> $queryTokens<span class="token punctuation">,</span> scope<span class="token punctuation">:</span> $scope<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> token <span class="token keyword">in</span>                <span class="token class-name">Label</span><span class="token punctuation">(</span>token<span class="token punctuation">.</span>diplayName<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> token<span class="token punctuation">.</span>systemImage<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> scopes<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"In Person"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">AttendanceScope</span><span class="token punctuation">.</span>inPerson<span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Online"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">AttendanceScope</span><span class="token punctuation">.</span>online<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="List-设置样式"><a href="#List-设置样式" class="headerlink" title="List-设置样式"></a>List-设置样式</h3><h4 id="内置样式"><a href="#内置样式" class="headerlink" title="内置样式"></a>内置样式</h4><p>通过 <code>.listStyle</code> 修饰符可以用系统内置样式更改 List 外观。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">List</span> <span class="token punctuation">&#123;</span>   <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">listStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>sidebar<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>不同平台有不同的选项</p><table><thead><tr><th>ListStyle</th><th>iOS</th><th>macOS</th><th>watchOS</th><th>tvOS</th></tr></thead><tbody><tr><td>plain</td><td>iOS 13+</td><td>macOS 10.15+</td><td>watchOS 6+</td><td>tvOS 13+</td></tr><tr><td>sidebar</td><td>iOS 14+</td><td>macOS 10.15+</td><td>-</td><td>-</td></tr><tr><td>inset</td><td>iOS 13+</td><td>macOS 11.15+</td><td>-</td><td>-</td></tr><tr><td>grouped</td><td>iOS 13+</td><td>-</td><td>-</td><td>tvOS 13+</td></tr><tr><td>insetGrouped</td><td>iOS 14+</td><td>-</td><td>-</td><td>-</td></tr><tr><td>bordered</td><td>-</td><td>macOS 12+</td><td>-</td><td>-</td></tr><tr><td>carousel</td><td>-</td><td>-</td><td>watchOS 6+</td><td>-</td></tr><tr><td>elliptical</td><td>-</td><td>-</td><td>watchOS 7+</td><td>-</td></tr></tbody></table><h4 id="行高"><a href="#行高" class="headerlink" title="行高"></a>行高</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">List</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>defaultMinListRowHeight<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>defaultMinListHeaderHeight<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h4><p>listSectionSeparator 和 listRowSeparator 隐藏行和 Section 分隔符。</p><p>listRowSeparatorTint 和 listSectionSeparatorTint 更改分隔符颜色</p><p>例如：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">listRowSeparatorTint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>cyan<span class="token punctuation">,</span> edges<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p><code>.alternatingRowBackgrounds()</code> 可以让 List 的行底色有区分。</p><p>listRowBackground 调整行的背景颜色</p><p>更改背景颜色前需要隐藏内容背景</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">List</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">scrollContentBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>hidden<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>cyan<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个方法同样可用于 ScrollView 和 TextEditor。</p><p>你可以使用 <code>.listRowBackground()</code> 修饰符来更改列表行的背景。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Row </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">index</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">listRowBackground</span><span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>blue <span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含五个元素的 List。我们使用 <code>.listRowBackground()</code> 修饰符来更改每个元素的背景颜色。如果元素的索引是偶数，我们将背景颜色设置为蓝色，否则我们将背景颜色设置为绿色。</p><h4 id="Section"><a href="#Section" class="headerlink" title="Section"></a>Section</h4><p>你可以使用 <code>Section</code> 视图的 <code>header</code> 和 <code>footer</code> 参数来添加头部和尾部。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Row </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">index</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> header<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Header"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> footer<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Footer"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>caption<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>headerProminence（.increase） 可以增加 Section Header 的大小。</p><h4 id="safeAreaInset"><a href="#safeAreaInset" class="headerlink" title="safeAreaInset"></a>safeAreaInset</h4><p>你可以使用 <code>.safeAreaInset()</code> 修饰符来调整视图的安全区域插入。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Row </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">index</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">safeAreaInset</span><span class="token punctuation">(</span>edge<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Header"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含五个元素的 List。然后我们使用 <code>.safeAreaInset()</code> 修饰符来在 List 的顶部添加一个 Header。我们将 <code>edge</code> 参数设置为 <code>.top</code>，将 <code>spacing</code> 参数设置为 20，然后提供一个视图作为 Header。这个 Header 是一个文本视图，它的背景颜色是蓝色，前景颜色是白色，它被居中对齐，并且它的宽度和 List 的宽度相同。</p><h3 id="List-移动元素"><a href="#List-移动元素" class="headerlink" title="List-移动元素"></a>List-移动元素</h3><p>你可以使用 <code>.onMove(perform:)</code> 修饰符来允许用户移动 List 中的元素。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 5"</span></span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">onMove</span><span class="token punctuation">(</span>perform<span class="token punctuation">:</span> move<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>                <span class="token class-name">EditButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">move</span><span class="token punctuation">(</span>from source<span class="token punctuation">:</span> <span class="token class-name">IndexSet</span><span class="token punctuation">,</span> to destination<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        items<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>fromOffsets<span class="token punctuation">:</span> source<span class="token punctuation">,</span> toOffset<span class="token punctuation">:</span> destination<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含五个元素的 List。我们使用 <code>.onMove(perform:)</code> 修饰符来允许用户移动这些元素，并提供了一个 <code>move(from:to:)</code> 方法来处理移动操作。我们还添加了一个 <code>EditButton</code>，用户可以点击它来进入编辑模式，然后就可以移动元素了。</p><h3 id="List-搜索"><a href="#List-搜索" class="headerlink" title="List-搜索"></a>List-搜索</h3><h4 id="搜索和搜索建议"><a href="#搜索和搜索建议" class="headerlink" title="搜索和搜索建议"></a>搜索和搜索建议</h4><p>你可以使用 <code>.searchable()</code> 修饰符的 <code>suggestions</code> 参数来提供搜索建议。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 5"</span></span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> searchText<span class="token punctuation">.</span>isEmpty <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token punctuation">:</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>searchText<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $searchText<span class="token punctuation">,</span> suggestions<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                 <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                    searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Item 1"</span></span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                    searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">navigationBarTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Items"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含五个元素的 List，并添加了一个搜索框。当用户在搜索框中输入文本时，List 会自动更新以显示匹配的元素。同时，我们提供了两个搜索建议 “Item 1” 和 “Item 2”，用户可以点击这些建议来快速填充搜索框。</p><h4 id="在列表中显示搜索建议"><a href="#在列表中显示搜索建议" class="headerlink" title="在列表中显示搜索建议"></a>在列表中显示搜索建议</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>searchSuggestionsPlacement<span class="token punctuation">)</span> <span class="token keyword">var</span> placement    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 5"</span></span><span class="token punctuation">]</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SearchSuggestionView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> searchText<span class="token punctuation">.</span>isEmpty <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token punctuation">:</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>searchText<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $searchText<span class="token punctuation">,</span> suggestions<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                        searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Item 1"</span></span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                        searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">searchSuggestions</span><span class="token punctuation">(</span><span class="token punctuation">.</span>hidden<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>content<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">navigationBarTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Items"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@ViewBuilder</span>    <span class="token keyword">func</span> <span class="token function-definition function">SearchSuggestionView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> placement <span class="token operator">==</span> <span class="token punctuation">.</span>content <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Item 1"</span></span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="搜索状态"><a href="#搜索状态" class="headerlink" title="搜索状态"></a>搜索状态</h4><p>搜索中</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>isSearching<span class="token punctuation">)</span> <span class="token keyword">var</span> isSearching<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关闭搜索</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>dismissSearch<span class="token punctuation">)</span> <span class="token keyword">var</span> dismissSearch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>提交搜索</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">List</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $vm<span class="token punctuation">.</span>searchTerm<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onSubmit</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token punctuation">.</span>search<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="搜索栏外观"><a href="#搜索栏外观" class="headerlink" title="搜索栏外观"></a>搜索栏外观</h4><p>占位文字说明</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $wwdcVM<span class="token punctuation">.</span>searchText<span class="token punctuation">,</span> prompt<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"搜索 WWDC Session 内容"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一直显示搜索栏</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $wwdcVM<span class="token punctuation">.</span>searchText<span class="token punctuation">,</span>             placement<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">navigationBarDrawer</span><span class="token punctuation">(</span>displayMode<span class="token punctuation">:</span><span class="token punctuation">.</span>always<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>更改搜索栏的位置</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $wwdcVM<span class="token punctuation">.</span>searchText<span class="token punctuation">,</span> placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>sidebar<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="搜索去抖动"><a href="#搜索去抖动" class="headerlink" title="搜索去抖动"></a>搜索去抖动</h4><p>你可以使用 Combine 框架来实现搜索的去抖动功能。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">Combine</span><span class="token keyword">class</span> <span class="token class-name">SearchViewModel</span><span class="token punctuation">:</span> <span class="token class-name">ObservableObject</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Published</span> <span class="token keyword">var</span> searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token attribute atrule">@Published</span> <span class="token keyword">var</span> searchResults<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> cancellables <span class="token operator">=</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token class-name">AnyCancellable</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        $searchText            <span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">milliseconds</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scheduler<span class="token punctuation">:</span> <span class="token class-name">RunLoop</span><span class="token punctuation">.</span>main<span class="token punctuation">)</span>            <span class="token punctuation">.</span>sink <span class="token punctuation">&#123;</span> <span class="token punctuation">[</span><span class="token keyword">weak</span> <span class="token keyword">self</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token keyword">self</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>cancellables<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">search</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> text<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 这里是你的搜索逻辑</span>        <span class="token comment">// 例如，你可以从一个数组中过滤出匹配的元素</span>        <span class="token keyword">let</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 5"</span></span><span class="token punctuation">]</span>        searchResults <span class="token operator">=</span> items<span class="token punctuation">.</span>filter <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@StateObject</span> <span class="token keyword">private</span> <span class="token keyword">var</span> viewModel <span class="token operator">=</span> <span class="token class-name">SearchViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Search"</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $viewModel<span class="token punctuation">.</span>searchText<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>viewModel<span class="token punctuation">.</span>searchResults<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> result <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个 <code>SearchViewModel</code> 类，它有一个 <code>searchText</code> 属性和一个 <code>searchResults</code> 属性。当 <code>searchText</code> 属性的值发生变化时，我们使用 Combine 的 <code>debounce(for:scheduler:)</code> 方法来延迟执行搜索操作，从而实现去抖动功能。然后我们在 <code>ContentView</code> 中使用这个 <code>SearchViewModel</code> 来显示搜索框和搜索结果。</p><h3 id="List-下拉刷新"><a href="#List-下拉刷新" class="headerlink" title="List-下拉刷新"></a>List-下拉刷新</h3><p>你可以使用 <code>.refreshable()</code> 修饰符来添加下拉刷新功能。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 5"</span></span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>refreshable <span class="token punctuation">&#123;</span>            <span class="token keyword">await</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 这里是你的刷新逻辑</span>        <span class="token comment">// 例如，你可以从网络获取新的数据，然后更新 items 数组</span>        <span class="token comment">// 这里我们只是简单地将 items 数组反转</span>        items<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含五个元素的 List，并添加了下拉刷新功能。当用户下拉 List 时，<code>refresh()</code> 方法会被调用，然后我们将 items 数组反转，从而模拟刷新操作。注意，<code>refresh()</code> 方法需要是一个异步方法，因为刷新操作通常需要一些时间来完成。</p><h3 id="List-轻扫操作"><a href="#List-轻扫操作" class="headerlink" title="List-轻扫操作"></a>List-轻扫操作</h3><p>你可以使用 <code>.swipeActions()</code> 修饰符来添加轻扫操作。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 5"</span></span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>                <span class="token punctuation">.</span>swipeActions <span class="token punctuation">&#123;</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                        <span class="token comment">// 这里是你的删除操作</span>                        <span class="token keyword">if</span> <span class="token keyword">let</span> index <span class="token operator">=</span> items<span class="token punctuation">.</span><span class="token function">firstIndex</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> item<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            items<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> index<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Delete"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"trash"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含五个元素的 List，并为每个元素添加了一个滑动操作。当用户向左轻扫一个元素时，会显示一个 “Delete” 按钮，用户可以点击这个按钮来删除该元素。</p><h3 id="List-大纲视图"><a href="#List-大纲视图" class="headerlink" title="List-大纲视图"></a>List-大纲视图</h3><h4 id="List-树状结构"><a href="#List-树状结构" class="headerlink" title="List 树状结构"></a>List 树状结构</h4><p>通过 children 参数指定子树路径。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">List</span><span class="token punctuation">(</span>outlineModel<span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>    <span class="token class-name">Label</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>title<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> i<span class="token punctuation">.</span>iconName<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="DisclosureGroup-实现展开和折叠"><a href="#DisclosureGroup-实现展开和折叠" class="headerlink" title="DisclosureGroup 实现展开和折叠"></a>DisclosureGroup 实现展开和折叠</h4><p><code>DisclosureGroup</code> 视图可以用来创建一个可以展开和折叠的内容区域。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isExpanded <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">DisclosureGroup</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Options"</span></span><span class="token punctuation">,</span> isExpanded<span class="token punctuation">:</span> $isExpanded<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Option 1"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Option 2"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Option 3"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个 <code>DisclosureGroup</code> 视图，它的标题是 “Options”，并且它包含三个选项。我们使用一个 <code>@State</code> 属性 <code>isExpanded</code> 来控制 <code>DisclosureGroup</code> 视图是否展开。当用户点击标题时，<code>DisclosureGroup</code> 视图会自动展开或折叠，同时 <code>isExpanded</code> 属性的值也会相应地改变。</p><h4 id="OutlineGroup-创建大纲视图"><a href="#OutlineGroup-创建大纲视图" class="headerlink" title="OutlineGroup 创建大纲视图"></a>OutlineGroup 创建大纲视图</h4><p>可以使用 <code>OutlineGroup</code> 视图来创建一个大纲视图。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">OutlineGroup</span><span class="token punctuation">(</span>sampleData<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">Item</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Item</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> sampleData<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Item</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token class-name">Item</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Parent 1"</span></span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token class-name">Item</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Child 1"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Item</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Child 2"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token class-name">Item</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Parent 2"</span></span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token class-name">Item</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Child 3"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Item</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Child 4"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个 <code>Item</code> 结构体，它有一个 <code>name</code> 属性和一个 <code>children</code> 属性。然后我们创建了一个 <code>sampleData</code> 数组，它包含两个父项，每个父项都有两个子项。最后我们在 <code>ContentView</code> 中使用 <code>OutlineGroup</code> 视图来显示这个数组，每个父项和子项都显示为一个文本视图。</p><h4 id="结合-OutlineGroup-和-DisclosureGroup-实现自定义可折叠大纲视图"><a href="#结合-OutlineGroup-和-DisclosureGroup-实现自定义可折叠大纲视图" class="headerlink" title="结合 OutlineGroup 和 DisclosureGroup 实现自定义可折叠大纲视图"></a>结合 OutlineGroup 和 DisclosureGroup 实现自定义可折叠大纲视图</h4><p>代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SPOutlineListView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">D</span><span class="token punctuation">:</span> <span class="token class-name">RandomAccessCollection</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> v<span class="token punctuation">:</span> <span class="token class-name">SPOutlineView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span>        <span class="token keyword">init</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> <span class="token class-name">D</span><span class="token punctuation">,</span> c<span class="token punctuation">:</span> <span class="token class-name">KeyPath</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token operator">?></span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>v <span class="token operator">=</span> <span class="token class-name">SPOutlineView</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> d<span class="token punctuation">,</span> c<span class="token punctuation">:</span> c<span class="token punctuation">,</span> content<span class="token punctuation">:</span> content<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            v        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SPOutlineView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">D</span><span class="token punctuation">:</span> <span class="token class-name">RandomAccessCollection</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> d<span class="token punctuation">:</span> <span class="token class-name">D</span>    <span class="token keyword">let</span> c<span class="token punctuation">:</span> <span class="token class-name">KeyPath</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token operator">?></span>    <span class="token keyword">let</span> content<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isExpanded <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 控制初始是否展开的状态</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ForEach</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> sub <span class="token operator">=</span> i<span class="token punctuation">[</span>keyPath<span class="token punctuation">:</span> c<span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SPDisclosureGroup</span><span class="token punctuation">(</span>content<span class="token punctuation">:</span> <span class="token class-name">SPOutlineView</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> sub<span class="token punctuation">,</span> c<span class="token punctuation">:</span> c<span class="token punctuation">,</span> content<span class="token punctuation">:</span> content<span class="token punctuation">)</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token function">content</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token function">content</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end if</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end ForEach</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SPDisclosureGroup</span><span class="token operator">&lt;</span><span class="token class-name">C</span><span class="token punctuation">,</span> <span class="token class-name">L</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">C</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token punctuation">,</span> <span class="token class-name">L</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isExpanded <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> content<span class="token punctuation">:</span> <span class="token class-name">C</span>    <span class="token keyword">var</span> label<span class="token punctuation">:</span> <span class="token class-name">L</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">DisclosureGroup</span><span class="token punctuation">(</span>isExpanded<span class="token punctuation">:</span> $isExpanded<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            content        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    isExpanded<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                label            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">buttonStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>plain<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="List-完全可点击的行"><a href="#List-完全可点击的行" class="headerlink" title="List-完全可点击的行"></a>List-完全可点击的行</h3><p>使用 <code>.contentShape(Rectangle())</code> 可以使整个区域都可点击 </p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">..&lt;</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> num <span class="token keyword">in</span>                <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">num</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">contentShape</span><span class="token punctuation">(</span><span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Clicked </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">num</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end list</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="List-索引标题"><a href="#List-索引标题" class="headerlink" title="List-索引标题"></a>List-索引标题</h3><p>这个代码是在创建一个带有索引标题的列表，用户可以通过拖动索引标题来快速滚动列表。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token operator">...</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span>  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ScrollViewReader</span> <span class="token punctuation">&#123;</span> proxy <span class="token keyword">in</span>      <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ArticleListView</span>      <span class="token punctuation">&#125;</span>      <span class="token punctuation">.</span><span class="token function">listStyle</span><span class="token punctuation">(</span><span class="token class-name">InsetGroupedListStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span><span class="token class-name">IndexView</span><span class="token punctuation">(</span>proxy<span class="token punctuation">:</span> proxy<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">IndexView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> proxy<span class="token punctuation">:</span> <span class="token class-name">ScrollViewProxy</span>  <span class="token keyword">let</span> titles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span>  <span class="token attribute atrule">@GestureState</span> <span class="token keyword">private</span> <span class="token keyword">var</span> dragLocation<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">ForEach</span><span class="token punctuation">(</span>titles<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> title <span class="token keyword">in</span>        <span class="token class-name">TitleView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> title<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span><span class="token function">gesture</span><span class="token punctuation">(</span>      <span class="token class-name">DragGesture</span><span class="token punctuation">(</span>minimumDistance<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> coordinateSpace<span class="token punctuation">:</span> <span class="token punctuation">.</span>global<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">updating</span><span class="token punctuation">(</span>$dragLocation<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> value<span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span>          state <span class="token operator">=</span> value<span class="token punctuation">.</span>location        <span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">func</span> <span class="token function-definition function">drag</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">GeometryReader</span> <span class="token punctuation">&#123;</span> geometry <span class="token keyword">in</span>      <span class="token function">drag</span><span class="token punctuation">(</span>geometry<span class="token punctuation">:</span> geometry<span class="token punctuation">,</span> title<span class="token punctuation">:</span> title<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">func</span> <span class="token function-definition function">drag</span><span class="token punctuation">(</span>geometry<span class="token punctuation">:</span> <span class="token class-name">GeometryProxy</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> geometry<span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>global<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>dragLocation<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token keyword">async</span> <span class="token punctuation">&#123;</span>        proxy<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>clear<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面代码中 <code>ContentView</code> 是主视图，它包含一个 <code>List</code> 和一个 <code>IndexView</code>。<code>List</code> 中的内容由 <code>ArticleListView</code> 提供。<code>IndexView</code> 是一个自定义视图，它显示了所有的索引标题。</p><p><code>IndexView</code> 接受一个 <code>ScrollViewProxy</code> 和一个标题数组。它使用 <code>VStack</code> 和 <code>ForEach</code> 来创建一个垂直的索引标题列表。每个标题都是一个 <code>TitleView</code>，并且它有一个背景，这个背景是通过 <code>drag(title:)</code> 方法创建的。</p><p><code>drag(title:)</code> 方法接受一个标题，并返回一个视图。这个视图是一个 <code>GeometryReader</code>，它可以获取其包含的视图的几何信息。然后，这个 <code>GeometryReader</code> 使用 <code>drag(geometry:title:)</code> 方法来创建一个新的视图。</p><p><code>drag(geometry:title:)</code> 方法接受一个 <code>GeometryProxy</code> 和一个标题，并返回一个视图。如果 <code>GeometryProxy</code> 的全局帧包含当前的拖动位置，那么这个方法将返回一个特定的视图。</p><p><code>IndexView</code> 还有一个手势，这个手势是一个 <code>DragGesture</code>。当用户拖动索引标题时，这个手势会更新 <code>dragLocation</code> 属性的值，这个属性是一个 <code>@GestureState</code> 属性，它表示当前的拖动位置。</p><h3 id="List-加载更多"><a href="#List-加载更多" class="headerlink" title="List-加载更多"></a>List-加载更多</h3><p>你可以通过检测列表滚动到底部来实现加载更多的功能。以下是一个简单的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">20</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">item</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>                        <span class="token keyword">if</span> item <span class="token operator">==</span> items<span class="token punctuation">.</span>last <span class="token punctuation">&#123;</span>                            <span class="token function">loadMore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">onAppear</span><span class="token punctuation">(</span>perform<span class="token punctuation">:</span> loadMore<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">loadMore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">asyncAfter</span><span class="token punctuation">(</span>deadline<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> newItems <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>count<span class="token operator">..&lt;</span><span class="token keyword">self</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">)</span>            <span class="token keyword">self</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>contentsOf<span class="token punctuation">:</span> newItems<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含多个元素的 List。当 List 出现最后一项时，我们调用 <code>loadMore</code> 方法来加载更多的元素。在 <code>loadMore</code> 方法中，模拟在一秒后添加新的元素到 <code>items</code> 数组中。</p><p>请注意，这只是一个基本的使用示例，实际的使用方式可能会根据你的需求而变化。例如，你可能需要从网络获取新的元素，而不是像这个例子中那样直接创建新的元素。</p><h2 id="Lazy容器"><a href="#Lazy容器" class="headerlink" title="Lazy容器"></a>Lazy容器</h2><h3 id="LazyVStack和LazyHStack"><a href="#LazyVStack和LazyHStack" class="headerlink" title="LazyVStack和LazyHStack"></a>LazyVStack和LazyHStack</h3><p>LazyVStack 和 LazyHStack 里的视图只有在滚到时才会被创建。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayLazyVStackAndLazyHStackView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LazyVStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">...</span><span class="token number">300</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token class-name">PLHSRowView</span><span class="token punctuation">(</span>i<span class="token punctuation">:</span> i<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PLHSRowView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> i<span class="token punctuation">:</span> <span class="token class-name">Int</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"第 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 个"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">init</span><span class="token punctuation">(</span>i<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"第 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 个初始化了"</span></span><span class="token punctuation">)</span> <span class="token comment">// 用来查看什么时候创建的。</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>i <span class="token operator">=</span> i    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="LazyVGrid和LazyHGrid"><a href="#LazyVGrid和LazyHGrid" class="headerlink" title="LazyVGrid和LazyHGrid"></a>LazyVGrid和LazyHGrid</h3><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/lazyvgridandlazyhgrid-ap01.jpeg" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/lazyvgridandlazyhgrid-ap01.jpeg"></p><p>列的设置有三种，这三种也可以组合用。</p><ul><li>GridItem(.fixed(10)) 会固定设置有多少列。</li><li>GridItem(.flexible()) 会充满没有使用的空间。</li><li>GridItem(.adaptive(minimum: 10)) 表示会根据设置大小自动设置有多少列展示。</li></ul><p>示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayLazyVGridAndLazyHGridView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span><span class="token class-name">Color</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string-literal"><span class="token string">"red"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>red<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"orange"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>orange<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"yellow"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>yellow<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"green"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>green<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"mint"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>mint<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"teal"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>teal<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"cyan"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>cyan<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"blue"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>blue<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"indigo"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>indigo<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"purple"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>purple<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"pink"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>pink<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"brown"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>brown<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"gray"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>gray<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"black"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>black    <span class="token punctuation">]</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LazyVGrid</span><span class="token punctuation">(</span>columns<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token class-name">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">adaptive</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span> pinnedViews<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>sectionHeaders<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Section</span><span class="token punctuation">(</span>header<span class="token punctuation">:</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"🎨调色板"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> maxHeight<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>                                                <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>black<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">(</span>colors<span class="token punctuation">.</span>keys<span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> k <span class="token keyword">in</span>                        colors<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span><span class="token class-name">Double</span><span class="token punctuation">(</span><span class="token class-name">Int</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token operator">...</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>                                <span class="token class-name">Text</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>                            <span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token class-name">LazyVGrid</span><span class="token punctuation">(</span>columns<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token class-name">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">adaptive</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Section</span><span class="token punctuation">(</span>header<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"图标集"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">...</span><span class="token number">30</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                        <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">aspectRatio</span><span class="token punctuation">(</span>contentMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>fit<span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Grid"><a href="#Grid" class="headerlink" title="Grid"></a>Grid</h2><p>Grid 会将最大的一个单元格大小应用于所有单元格</p><p>代码例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Grid</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">,</span>             horizontalSpacing<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>             verticalSpacing<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">GridRow</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Tropical"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Mango"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Pineapple"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">gridCellColumns</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">GridRow</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Leafy"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Spinach"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Kale"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Lettuce"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>gridCellAnchor</code> 可以让 GridRow 给自己设置对齐方式。</p><p><code>gridCellColumns()</code>  modifier 可以让一个单元格跨多列。</p><p>GridRow 的间距通过 Grid 的 <code>horizontalSpacing</code> 和 <code>verticalSpacing</code> 参数来控制。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> numbers<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token class-name">Int</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>    <span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Grid</span><span class="token punctuation">(</span>horizontalSpacing<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> verticalSpacing<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span>indices<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                <span class="token class-name">GridRow</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>indices<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> j <span class="token keyword">in</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> maxHeight<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>按照以上代码这样写，每个数字 GridRow 之间的间隔就是0了。</p><p>空白的单元格可以这样写：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Color</span><span class="token punctuation">.</span>clear    <span class="token punctuation">.</span><span class="token function">gridCellUnsizedAxes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">,</span> <span class="token punctuation">.</span>vertical<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Table表格"><a href="#Table表格" class="headerlink" title="Table表格"></a>Table表格</h2><h3 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h3><p>今年 iOS 和 iPadOS 也可以使用去年只能在 macOS 上使用的 Table了，据 digital lounges 里说，iOS table 的性能和 list 差不多，table 默认为 plian list。我想 iOS 上加上 table 只是为了兼容 macOS 代码吧。</p><p>table 使用示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Table</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">.</span><span class="token function">simpleData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"名字"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"颜色"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>color<span class="token punctuation">)</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"颜色"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token short-argument">$0</span><span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>footnote<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>cyan<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">contextMenu</span><span class="token punctuation">(</span>forSelectionType<span class="token punctuation">:</span> <span class="token class-name">Fruit</span><span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> selection <span class="token keyword">in</span>            <span class="token keyword">if</span> selection<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"添加"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> selection<span class="token punctuation">.</span>count <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"收藏"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"收藏多个"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">struct</span> <span class="token class-name">Fruit</span><span class="token punctuation">:</span><span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>        <span class="token keyword">let</span> color<span class="token punctuation">:</span> <span class="token class-name">String</span>                <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">simpleData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">[</span><span class="token class-name">Fruit</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> re <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">Fruit</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            re<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Apple"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>            re<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Banana"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Yellow"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>            re<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Cherry"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>            re<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Date"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Brown"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>            re<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Elderberry"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Purple"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> re        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Table-样式"><a href="#Table-样式" class="headerlink" title="Table-样式"></a>Table-样式</h3><p>在 SwiftUI 中，<code>Table</code> 视图的 <code>.tableStyle</code> 修改器可以用来设置表格的样式。目前，SwiftUI 提供了以下几种表格样式：</p><ul><li>inset：默认</li><li><code>inset(alternatesRowBackgrounds: Bool)</code>：是否开启行交错背景</li><li>bordered：加边框</li><li><code>bordered(alternatesRowBackgrounds: Bool)</code>： 是否开启行交错背景</li></ul><p>你可以使用 <code>.tableStyle</code> 修改器来设置表格的样式，例如：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Table</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">tableStyle</span><span class="token punctuation">(</span><span class="token class-name">InsetGroupedListStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码会将表格的样式设置为 <code>InsetGroupedListStyle</code>。</p><h3 id="Table-行的选择"><a href="#Table-行的选择" class="headerlink" title="Table-行的选择"></a>Table-行的选择</h3><p>你可以使用 Table 视图的 selection 参数来实现单选和多选。selection 参数接受一个绑定到一个可选的 Set 的变量，这个 Set 包含了被选中的元素的标识。</p><p>以下是一个使用 Table 视图实现单选和多选的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectionOne<span class="token punctuation">:</span> <span class="token constant">UUID</span><span class="token operator">?</span> <span class="token comment">// 单选</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selection<span class="token punctuation">:</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token constant">UUID</span><span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 多选</span>    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Apple"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Banana"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Yellow"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Cherry"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Date"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Brown"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Elderberry"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Purple"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Table</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selectionOne<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Fruit"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Color"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>color<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">Fruit</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> color<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们首先定义了一个 @State 变量 selection，它是一个 Set，包含了被选中的元素的标识。然后，我们将这个变量绑定到 Table 视图的 selection 参数。</p><p>现在，当用户选择或取消选择一个元素时，selection 变量就会被更新。你可以使用这个变量来判断哪些元素被选中，或者实现其他的交互功能。</p><h3 id="Table-多属性排序"><a href="#Table-多属性排序" class="headerlink" title="Table-多属性排序"></a>Table-多属性排序</h3><p>你可以使用 <code>Table</code> 视图的 <code>sortOrder</code> 参数来实现多属性排序。<code>sortOrder</code> 参数接受一个绑定到一个 <code>SortDescriptor</code> 数组的变量，这个数组定义了排序的顺序和方式。</p><p>以下是一个使用 <code>Table</code> 视图实现多属性排序的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> sortOrder<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">KeyPathComparator</span><span class="token operator">&lt;</span><span class="token class-name">Fruit</span><span class="token operator">></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Apple"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Banana"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Yellow"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Cherry"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Date"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Brown"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Elderberry"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Purple"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token function">sortKeyPathView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 排序状态</span>        <span class="token class-name">Table</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> sortOrder<span class="token punctuation">:</span> $sortOrder<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Fruit"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Color"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>color<span class="token punctuation">)</span>            <span class="token comment">// 不含 value 参数的不支持排序</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"ColorNoOrder"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token short-argument">$0</span><span class="token punctuation">.</span>color</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>footnote<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>mint<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>task <span class="token punctuation">&#123;</span>            data<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>using<span class="token punctuation">:</span> sortOrder<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> sortOrder<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> oldValue<span class="token punctuation">,</span> newValue <span class="token keyword">in</span>            data<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>using<span class="token punctuation">:</span> newValue<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@ViewBuilder</span>    <span class="token keyword">func</span> <span class="token function-definition function">sortKeyPathView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>sortOrder<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> order <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span>keyPath <span class="token operator">==</span> <span class="token punctuation">\</span><span class="token class-name">Fruit</span><span class="token punctuation">.</span>name <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"名字"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"颜色"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> order<span class="token punctuation">.</span>order <span class="token operator">==</span> <span class="token punctuation">.</span>reverse <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"chevron.down"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"chevron.up"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>top<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">Fruit</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> color<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们首先定义了一个 <code>@State</code> 变量 <code>sortOrder</code>，它是一个 <code>SortDescriptor</code> 数组，定义了排序的顺序和方式。然后，我们将这个变量绑定到 <code>Table</code> 视图的 <code>sortOrder</code> 参数。</p><p>现在，当用户点击表头来排序一个列时，<code>sortOrder</code> 变量就会被更新。你可以使用这个变量来实现多属性排序，或者实现其他的交互功能。</p><h3 id="Table-contextMenu"><a href="#Table-contextMenu" class="headerlink" title="Table-contextMenu"></a>Table-contextMenu</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selection<span class="token punctuation">:</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token constant">UUID</span><span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Table</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">.</span><span class="token function">simpleData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token operator">...</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">contextMenu</span><span class="token punctuation">(</span>forSelectionType<span class="token punctuation">:</span> <span class="token class-name">Fruit</span><span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> selection <span class="token keyword">in</span>            <span class="token keyword">if</span> selection<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"添加"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> selection<span class="token punctuation">.</span>count <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"收藏"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"收藏多个"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> primaryAction<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> items <span class="token keyword">in</span>            <span class="token comment">// 双击某一行时</span>            <span class="token function">debugPrint</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容已整理到小册子中，小册子代码在 &lt;a href=&quot;https://github.com/ming1016/SwiftPamphletApp&quot;&gt;Github&lt;/a&gt; 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买&lt;a href=&quot;https://apps
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>小册子之简说 Widget 小组件</title>
    <link href="https://starming.com/2024/05/18/pamphlet-series-widget/"/>
    <id>https://starming.com/2024/05/18/pamphlet-series-widget/</id>
    <published>2024-05-18T00:07:31.000Z</published>
    <updated>2024-05-25T12:28:20.743Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容已整理到小册子中，小册子代码在 <a href="https://github.com/ming1016/SwiftPamphletApp">Github</a> 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">“戴铭的开发小册子”</a>应用(98元)，来跟踪查看本文内容新增和更新。</p><p>本文属于小册子系列中的一篇，已发布系列文章有：</p><ul><li><a href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/">小册子之如何使用 SwiftData 开发 SwiftUI 应用</a></li><li>【本篇】<a href="https://starming.com/2024/05/18/pamphlet-series-widget/">小册子之简说 Widget 小组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-listdataview/">小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-layout/">小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-form/">小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/25/pamphlet-series-animation/">小册子之 SwiftUI 动画</a></li></ul><p>Widge 允许开发者在用户的主屏幕或通知中心展示应用的信息。Widget 可以提供快速的信息预览，或者提供快速访问应用的方式。</p><p>开发 Widget 的基本步骤如下：</p><ol><li><p><strong>创建 Widget Extension</strong>：在 Xcode 中，你需要创建一个新的 Widget Extension。这将会生成一个新的 target，包含了创建 Widget 所需的基本代码。</p></li><li><p><strong>定义 Timeline Entry</strong>：Timeline Entry 是 Widget 数据的模型。你需要创建一个遵循 <code>TimelineEntry</code> 协议的结构体，定义你的 Widget 所需的数据。</p></li><li><p><strong>创建 Widget View</strong>：Widget View 是 Widget 的用户界面。你需要创建一个 <code>View</code>，展示你的 Widget 的内容。</p></li><li><p><strong>实现 Timeline Provider</strong>：Timeline Provider 是 Widget 数据的提供者。你需要创建一个遵循 <code>TimelineProvider</code> 协议的结构体，提供 Widget 的数据。</p></li><li><p><strong>配置 Widget</strong>：在 Widget 的主结构体中，你需要配置你的 Widget，包括它的类型（静态或者动态）、数据提供者、视图等。</p></li><li><p><strong>测试 Widget</strong>：在模拟器或者真机上测试你的 Widget，确保它的数据和视图都按预期工作。</p></li></ol><p>接下来，我们将详细介绍 Widget 的开发流程。</p><h2 id="小组件-StaticConfiguration-静态配置"><a href="#小组件-StaticConfiguration-静态配置" class="headerlink" title="小组件-StaticConfiguration 静态配置"></a>小组件-StaticConfiguration 静态配置</h2><p>在 Xcode 中，File -&gt; New -&gt; Target，选择 Widget Extension。这将会生成一个新的 target，包含了创建 Widget 所需的基本代码。</p><p>以下是一个简单的小组件代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">WidgetKit</span><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token comment">// Timeline Entry</span><span class="token keyword">struct</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">:</span> <span class="token class-name">TimelineEntry</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> date<span class="token punctuation">:</span> <span class="token class-name">Date</span>    <span class="token keyword">let</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span class="token comment">// Widget View</span><span class="token keyword">struct</span> <span class="token class-name">ArticleWidgetView</span> <span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> entry<span class="token punctuation">:</span> <span class="token class-name">ArticleEntry</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span>title<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// Timeline Provider</span><span class="token keyword">struct</span> <span class="token class-name">ArticleTimelineProvider</span><span class="token punctuation">:</span> <span class="token class-name">TimelineProvider</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">typealias</span> <span class="token class-name">Entry</span> <span class="token operator">=</span> <span class="token class-name">ArticleEntry</span>        <span class="token keyword">func</span> <span class="token function-definition function">placeholder</span><span class="token punctuation">(</span><span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Entry</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 占位大小，内容不会显示</span>        <span class="token keyword">return</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Placeholder"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">getSnapshot</span><span class="token punctuation">(</span><span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">,</span> completion<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> entry <span class="token operator">=</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Snapshot"</span></span><span class="token punctuation">)</span>        <span class="token function">completion</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">getTimeline</span><span class="token punctuation">(</span><span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">,</span> completion<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">Timeline</span><span class="token operator">&lt;</span><span class="token class-name">Entry</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> entry <span class="token operator">=</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Timeline"</span></span><span class="token punctuation">)</span>        <span class="token keyword">let</span> timeline <span class="token operator">=</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>entries<span class="token punctuation">:</span> <span class="token punctuation">[</span>entry<span class="token punctuation">]</span><span class="token punctuation">,</span> policy<span class="token punctuation">:</span> <span class="token punctuation">.</span>never<span class="token punctuation">)</span>        <span class="token function">completion</span><span class="token punctuation">(</span>timeline<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// Widget Configuration</span><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">ArticleWidget</span><span class="token punctuation">:</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">WidgetConfiguration</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">StaticConfiguration</span><span class="token punctuation">(</span>            kind<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"com.starming.articleWidget"</span></span><span class="token punctuation">,</span>            provider<span class="token punctuation">:</span> <span class="token class-name">ArticleTimelineProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> entry <span class="token keyword">in</span>            <span class="token class-name">ArticleWidgetView</span><span class="token punctuation">(</span>entry<span class="token punctuation">:</span> entry<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">configurationDisplayName</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Article Widget"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"这是一个 Article Widget."</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">supportedFamilies</span><span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">.</span>systemSmall<span class="token punctuation">,</span>            <span class="token punctuation">.</span>systemMedium<span class="token punctuation">,</span>            <span class="token punctuation">.</span>systemLarge<span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上面的代码中，我们定义了一个 ArticleWidget 小组件，它包含了一个 ArticleEntry 数据模型、一个 ArticleWidgetView 视图、一个 ArticleTimelineProvider 数据提供者和一个 ArticleWidget 配置。</p><h2 id="小组件-AppIntentConfiguration"><a href="#小组件-AppIntentConfiguration" class="headerlink" title="小组件-AppIntentConfiguration"></a>小组件-AppIntentConfiguration</h2><p>iOS 17 开始可以使用 AppIntentConfiguration 来配置小组件，这样可以让小组件和 AppIntent 交互。这样可以让小组件和 App 之间的进行交互。</p><p>下面是一个简单的小组件代码示例，展示了如何使用 AppIntentConfiguration 来配置小组件和 AppIntent 交互</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">WidgetKit</span><span class="token keyword">import</span> <span class="token class-name">AppIntents</span><span class="token keyword">struct</span> <span class="token class-name">ArticleWidget</span><span class="token punctuation">:</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">WidgetConfiguration</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">AppIntentConfiguration</span><span class="token punctuation">(</span>            kind<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"com.starming.articleWidget"</span></span><span class="token punctuation">,</span>            intent<span class="token punctuation">:</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span>            provider<span class="token punctuation">:</span> <span class="token class-name">ArticleIntentProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> entry <span class="token keyword">in</span>            <span class="token class-name">ArticleWidgetView</span><span class="token punctuation">(</span>entry<span class="token punctuation">:</span> entry<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">configurationDisplayName</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Article Widget"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"这是一个 Article Widget."</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">supportedFamilies</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span>systemSmall<span class="token punctuation">,</span> <span class="token punctuation">.</span>systemMedium<span class="token punctuation">,</span> <span class="token punctuation">.</span>systemLarge<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ArticleWidgetView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> entry<span class="token punctuation">:</span> <span class="token class-name">IntentProvider</span><span class="token punctuation">.</span><span class="token class-name">Entry</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span>author<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ArticleIntentProvider</span><span class="token punctuation">:</span> <span class="token class-name">AppIntentTimelineProvider</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">snapshot</span><span class="token punctuation">(</span><span class="token keyword">for</span> configuration<span class="token punctuation">:</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">,</span> <span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">ArticleEntry</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>            date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"snapshot"</span></span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">placeholder</span><span class="token punctuation">(</span><span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">ArticleEntry</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>            date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"某人"</span></span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">timeline</span><span class="token punctuation">(</span><span class="token keyword">for</span> configuration<span class="token punctuation">:</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">,</span> <span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">Timeline</span><span class="token operator">&lt;</span><span class="token class-name">ArticleEntry</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>            entries<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      author<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>author<span class="token punctuation">,</span>                      rate<span class="token punctuation">:</span> <span class="token keyword">await</span> <span class="token class-name">ArticleStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            policy<span class="token punctuation">:</span> <span class="token punctuation">.</span>never<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">:</span> <span class="token class-name">TimelineEntry</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> date<span class="token punctuation">:</span> <span class="token class-name">Date</span>    <span class="token keyword">let</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> rate<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span>    <span class="token comment">//...</span><span class="token punctuation">&#125;</span><span class="token comment">// 放在主应用中和小组件交互</span><span class="token keyword">struct</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">:</span> <span class="token class-name">WidgetConfigurationIntent</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">static</span> <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">LocalizedStringResource</span>  <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"文章"</span></span>    <span class="token keyword">var</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"某某某"</span></span>    <span class="token keyword">func</span> <span class="token function-definition function">perform</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token keyword">throws</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">IntentResult</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//...</span>        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">ArticleStore</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//... SwiftData 相关配置</span>    <span class="token attribute atrule">@MainActor</span>    <span class="token keyword">func</span> <span class="token function-definition function">rate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">Int</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//... 获取</span>        <span class="token keyword">return</span> <span class="token number">5</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上代码所示，我们定义了一个 ArticleWidget 小组件，它包含了一个 ArticleIntent 数据模型、一个 ArticleWidgetView 视图、一个 ArticleIntentProvider 数据提供者和一个 ArticleWidget 配置。</p><h2 id="小组件-配置选项"><a href="#小组件-配置选项" class="headerlink" title="小组件-配置选项"></a>小组件-配置选项</h2><h3 id="显示区域"><a href="#显示区域" class="headerlink" title="显示区域"></a>显示区域</h3><p>iOS 17 新增显示区域配置，有下面四种</p><ul><li>homeScreen：主屏幕</li><li>lockScreen：锁屏</li><li>standBy：待机</li><li>iPhoneWidgetsOnMac：iPhone 上的 Mac 小组件</li></ul><p>设置小组件不在哪个区域显示某尺寸。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SomeWidget</span><span class="token punctuation">:</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">WidgetConfiguration</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">AppIntentConfiguration</span><span class="token punctuation">(</span>            <span class="token operator">...</span> <span class="token punctuation">&#123;</span> entry <span class="token keyword">in</span>            <span class="token operator">...</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 在 StandBy 中取消显示 systemSmall 尺寸</span>        <span class="token punctuation">.</span><span class="token function">disfavoredLocations</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span>standBy<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>systemSmall<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="取消内容边距"><a href="#取消内容边距" class="headerlink" title="取消内容边距"></a>取消内容边距</h3><p>使用 <code>.contentMarginsDisabled()</code> 取消内容边距。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SomeWidget</span><span class="token punctuation">:</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">WidgetConfiguration</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">AppIntentConfiguration</span><span class="token punctuation">(</span>            <span class="token operator">...</span> <span class="token punctuation">&#123;</span> entry <span class="token keyword">in</span>            <span class="token operator">...</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 使 Content margin 失效</span>        <span class="token punctuation">.</span><span class="token function">contentMarginsDisabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每个平台内容边距大小不同，环境变量 <code>\.widgetContentMargins</code> 可以读取内容边距的大小。</p><h3 id="取消背景删除"><a href="#取消背景删除" class="headerlink" title="取消背景删除"></a>取消背景删除</h3><p>在 StandBy 和 LockScreen 的某些情况，小组件的背景是会被自动删除的。</p><p>使用 <code>containerBackgroundRemovable()</code> 修饰符可以取消背景删除。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SomeWidget</span><span class="token punctuation">:</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">WidgetConfiguration</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">AppIntentConfiguration</span><span class="token punctuation">(</span>            <span class="token operator">...</span> <span class="token punctuation">&#123;</span> entry <span class="token keyword">in</span>            <span class="token operator">...</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 取消背景删除</span>        <span class="token punctuation">.</span><span class="token function">containerBackgroundRemovable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>        <span class="token comment">// 让自己的背景可以全覆盖</span>        <span class="token punctuation">.</span><span class="token function">contentMarginsDisabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="后台网络处理"><a href="#后台网络处理" class="headerlink" title="后台网络处理"></a>后台网络处理</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span>onBackgroundURLSessionEvents <span class="token punctuation">&#123;</span> <span class="token punctuation">(</span>identifier<span class="token punctuation">,</span> completion<span class="token punctuation">)</span> <span class="token keyword">in</span>    <span class="token comment">//...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="AppIntentTimelineProvider"><a href="#AppIntentTimelineProvider" class="headerlink" title="AppIntentTimelineProvider"></a>AppIntentTimelineProvider</h2><p>AppIntentConfiguration 需要 AppIntentTimelineProvider，AppIntentTimelineProvider 需要实现 <code>snapshot</code>、<code>placeholder</code> 和 <code>timeline</code> 三个方法来确定小组件在展示和实际运行时间线时的视图和数据。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArticleIntentProvider</span><span class="token punctuation">:</span> <span class="token class-name">AppIntentTimelineProvider</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">snapshot</span><span class="token punctuation">(</span><span class="token keyword">for</span> configuration<span class="token punctuation">:</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">,</span> <span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">ArticleEntry</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>            date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"snapshot"</span></span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">placeholder</span><span class="token punctuation">(</span><span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">ArticleEntry</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>            date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"某人"</span></span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">timeline</span><span class="token punctuation">(</span><span class="token keyword">for</span> configuration<span class="token punctuation">:</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">,</span> <span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">Timeline</span><span class="token operator">&lt;</span><span class="token class-name">ArticleEntry</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>            entries<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      author<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>author<span class="token punctuation">,</span>                      rate<span class="token punctuation">:</span> <span class="token keyword">await</span> <span class="token class-name">ArticleStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            policy<span class="token punctuation">:</span> <span class="token punctuation">.</span>never<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">:</span> <span class="token class-name">TimelineEntry</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> date<span class="token punctuation">:</span> <span class="token class-name">Date</span>    <span class="token keyword">let</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> rate<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span>    <span class="token comment">//...</span><span class="token punctuation">&#125;</span>````## <span class="token class-name">Widget</span> <span class="token class-name">View</span>### 不同的大小设置不同视图```swift<span class="token keyword">struct</span> <span class="token class-name">ArticleWidgetView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> entry<span class="token punctuation">:</span> <span class="token class-name">Provider</span><span class="token punctuation">.</span><span class="token class-name">Entry</span>  <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>widgetFamily<span class="token punctuation">)</span> <span class="token keyword">var</span> family  <span class="token attribute atrule">@ViewBuilder</span>  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">switch</span> family <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token punctuation">.</span>systemSmall<span class="token punctuation">:</span>        <span class="token class-name">SomeViewSmall</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">default</span><span class="token punctuation">:</span>      <span class="token class-name">SomeViewDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="锁屏小组件"><a href="#锁屏小组件" class="headerlink" title="锁屏小组件"></a>锁屏小组件</h3><p>让小组件支持锁屏</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArticleWidget</span><span class="token punctuation">:</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">WidgetConfiguration</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">StaticConfiguration</span><span class="token punctuation">(</span>            <span class="token operator">...</span>        <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> entry <span class="token keyword">in</span>            <span class="token operator">...</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">...</span>        <span class="token punctuation">.</span><span class="token function">supportedFamilies</span><span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">.</span>systemSmall<span class="token punctuation">,</span>            <span class="token punctuation">.</span>systemMedium<span class="token punctuation">,</span>            <span class="token punctuation">.</span>systemLarge<span class="token punctuation">,</span>            <span class="token comment">// 添加支持到 Lock Screen widgets</span>            <span class="token punctuation">.</span>accessoryCircular<span class="token punctuation">,</span>            <span class="token punctuation">.</span>accessoryRectangular<span class="token punctuation">,</span>            <span class="token punctuation">.</span>accessoryInline<span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="不同类型-widgetFamily-实现不同视图"><a href="#不同类型-widgetFamily-实现不同视图" class="headerlink" title="不同类型 widgetFamily 实现不同视图"></a>不同类型 widgetFamily 实现不同视图</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArticleWidgetView</span> <span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">let</span> entry<span class="token punctuation">:</span> <span class="token class-name">ViewSizeEntry</span>    <span class="token comment">// 获取 widget family 值</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>widgetFamily<span class="token punctuation">)</span> <span class="token keyword">var</span> family    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> family <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>accessoryRectangular<span class="token punctuation">:</span>            <span class="token class-name">RectangularWidgetView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>accessoryCircular<span class="token punctuation">:</span>            <span class="token class-name">CircularWidgetView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>accessoryInline<span class="token punctuation">:</span>            <span class="token class-name">InlineWidgetView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">default</span><span class="token punctuation">:</span>            <span class="token class-name">ArticleWidgetView</span><span class="token punctuation">(</span>entry<span class="token punctuation">:</span> entry<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="不同渲染模式实现不同视图"><a href="#不同渲染模式实现不同视图" class="headerlink" title="不同渲染模式实现不同视图"></a>不同渲染模式实现不同视图</h3><p>小组件有三种不同的渲染模式：</p><ul><li>Full-color：主屏用</li><li>Vibrant：用于待机模式和锁屏</li><li>The accented：用于手表</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArticleWidgetView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> entry<span class="token punctuation">:</span> <span class="token class-name">Entry</span>        <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>widgetRenderingMode<span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">var</span> renderingMode        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> renderingMode <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>accented<span class="token punctuation">:</span>            <span class="token class-name">AccentedWidgetView</span><span class="token punctuation">(</span>entry<span class="token punctuation">:</span> entry<span class="token punctuation">)</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>fullColor<span class="token punctuation">:</span>            <span class="token class-name">FullColorWidgetView</span><span class="token punctuation">(</span>entry<span class="token punctuation">:</span> entry<span class="token punctuation">)</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>vibrant<span class="token punctuation">:</span>            <span class="token class-name">VibrantWidgetView</span><span class="token punctuation">(</span>entry<span class="token punctuation">:</span> entry<span class="token punctuation">)</span>        <span class="token keyword">default</span><span class="token punctuation">:</span>            <span class="token class-name">DefaultView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="视图交互"><a href="#视图交互" class="headerlink" title="视图交互"></a>视图交互</h3><p>使用 AppIntent</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArticleWidgetView</span> <span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> entry<span class="token punctuation">:</span> <span class="token class-name">IntentProvider</span><span class="token punctuation">.</span><span class="token class-name">Entry</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token operator">...</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>intent<span class="token punctuation">:</span> <span class="token class-name">RunIntent</span><span class="token punctuation">(</span>rate<span class="token punctuation">:</span> entry<span class="token punctuation">.</span>rate<span class="token punctuation">)</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token operator">...</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="刷新小组件"><a href="#刷新小组件" class="headerlink" title="刷新小组件"></a>刷新小组件</h2><h3 id="通过-Text-视图更新"><a href="#通过-Text-视图更新" class="headerlink" title="通过 Text 视图更新"></a>通过 Text 视图更新</h3><p>倒计时</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> futureDate <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span>byAdding<span class="token punctuation">:</span> components<span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token comment">// 日期会在 Text 视图中动态变化</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">CountdownWidgetView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token function">futureDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token punctuation">.</span>timer<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">futureDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Date</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> components <span class="token operator">=</span> <span class="token class-name">DateComponents</span><span class="token punctuation">(</span>second<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> futureDate <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span>byAdding<span class="token punctuation">:</span> components<span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!</span>        <span class="token keyword">return</span> futureDate    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Timeline-Provider-更新"><a href="#Timeline-Provider-更新" class="headerlink" title="Timeline Provider 更新"></a>Timeline Provider 更新</h3><p>在 timeline 方法中实现，entries 包含了不同更新的数据。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">func</span> <span class="token function-definition function">timeline</span><span class="token punctuation">(</span><span class="token keyword">for</span> configuration<span class="token punctuation">:</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">,</span> <span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">Timeline</span><span class="token operator">&lt;</span><span class="token class-name">ArticleEntry</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>        entries<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  author<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>author<span class="token punctuation">,</span>                  rate<span class="token punctuation">:</span> <span class="token keyword">await</span> <span class="token class-name">ArticleStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        policy<span class="token punctuation">:</span> <span class="token punctuation">.</span>never<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更新策略"><a href="#更新策略" class="headerlink" title="更新策略"></a>更新策略</h3><p>3 种类型的刷新策略：</p><ul><li><code>atEnd</code>：上个刷新完成直接进入下个刷新，但是进入下一个刷新的时间由系统决定。</li><li><code>after(Date)</code>：指定进入下个刷新的时间，但是具体时间还是由系统说了算，因此可以理解为是指定的是最早进入下个刷新的时间。</li><li><code>never</code>：不会进入下个刷新，除非显式调用 <code>reloadTimelines(ofKind:)</code></li></ul><p>举例，指定下个刷新周期至少是上个周期结束10秒后：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> lastUpdateDate <span class="token operator">=</span> entries<span class="token punctuation">.</span>last<span class="token operator">!</span><span class="token punctuation">.</span>date<span class="token keyword">let</span> nextUpdateDate <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span>byAdding<span class="token punctuation">:</span> <span class="token class-name">DateComponents</span><span class="token punctuation">(</span>second<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> lastUpdate<span class="token punctuation">)</span><span class="token operator">!</span><span class="token keyword">let</span> timeline <span class="token operator">=</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>entries<span class="token punctuation">:</span> entries<span class="token punctuation">,</span> policy<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>nextUpdate<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Relevance-优先级"><a href="#Relevance-优先级" class="headerlink" title="Relevance 优先级"></a>Relevance 优先级</h3><p>App 自定义刷新 Timeline 的优先级，使用 Relevance。先在 TimelineEntry 里定义：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">:</span> <span class="token class-name">TimelineEntry</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> date<span class="token punctuation">:</span> <span class="token class-name">Date</span>    <span class="token operator">...</span>    <span class="token keyword">let</span> relevance<span class="token punctuation">:</span> <span class="token class-name">TimelineEntryRelevance</span><span class="token operator">?</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 timeline 方法中根据必要刷新程序，定义不同 relevance 的值。</p><h3 id="App-主动刷新"><a href="#App-主动刷新" class="headerlink" title="App 主动刷新"></a>App 主动刷新</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">// 刷新单个小组件</span><span class="token class-name">WidgetCenter</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">reloadTimelines</span><span class="token punctuation">(</span>ofKind<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"CountryWidget"</span></span><span class="token punctuation">)</span><span class="token comment">// 刷新所有小组件</span><span class="token class-name">WidgetCenter</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">reloadAllTimelines</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="刷新小组件的最佳实践"><a href="#刷新小组件的最佳实践" class="headerlink" title="刷新小组件的最佳实践"></a>刷新小组件的最佳实践</h3><p>调试时刷新率不会有限制，生产环境每天最多40到70次，相当于每15到60分钟刷新一次。</p><h2 id="小组件动画"><a href="#小组件动画" class="headerlink" title="小组件动画"></a>小组件动画</h2><h3 id="Text-视图动态时间"><a href="#Text-视图动态时间" class="headerlink" title="Text 视图动态时间"></a>Text 视图动态时间</h3><p>利用 Text 的动态时间能力</p><h3 id="timeline-动画"><a href="#timeline-动画" class="headerlink" title="timeline 动画"></a>timeline 动画</h3><p>timeline 是由一组时间和数据组成的，每次刷新时，小组件通过和上次数据不一致加入动画效果。</p><p>默认情况小组件使用的是弹簧动画。我们也可以添加转场（Transition）、动画（Animation）和内容过渡（Content Transition）动画效果。</p><h3 id="文本内容过渡动画效果"><a href="#文本内容过渡动画效果" class="headerlink" title="文本内容过渡动画效果"></a>文本内容过渡动画效果</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">contentTransition</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">numericText</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> rate<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="从底部翻上来的专场"><a href="#从底部翻上来的专场" class="headerlink" title="从底部翻上来的专场"></a>从底部翻上来的专场</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="小组件-远程定时获取数据"><a href="#小组件-远程定时获取数据" class="headerlink" title="小组件-远程定时获取数据"></a>小组件-远程定时获取数据</h2><p>在 TimelineProvider 中的 timeline 方法中加入请求逻辑</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">func</span> <span class="token function-definition function">timeline</span><span class="token punctuation">(</span><span class="token keyword">for</span> configuration<span class="token punctuation">:</span> <span class="token class-name">RunIntent</span><span class="token punctuation">,</span> <span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">Timeline</span><span class="token operator">&lt;</span><span class="token class-name">ArticleEntry</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">guard</span> <span class="token keyword">let</span> article <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> <span class="token keyword">await</span> <span class="token class-name">ArticleFetch</span><span class="token punctuation">.</span><span class="token function">fetchNewestArticle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> entry <span class="token operator">=</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> article<span class="token punctuation">:</span> article<span class="token punctuation">)</span>        <span class="token comment">// 下次在 30 分钟后再请求</span>    <span class="token keyword">let</span> afterDate <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span>byAdding<span class="token punctuation">:</span> <span class="token class-name">DateComponents</span><span class="token punctuation">(</span>minute<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!</span>    <span class="token keyword">return</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>entries<span class="token punctuation">:</span> <span class="token punctuation">[</span>entry<span class="token punctuation">]</span><span class="token punctuation">,</span> policy<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>afterDate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们在 timeline 方法中请求了最新的文章数据，并且设置了下次请求的时间是当前时间的 30 分钟后。</p><h2 id="小组件-获取位置权限更新内容"><a href="#小组件-获取位置权限更新内容" class="headerlink" title="小组件-获取位置权限更新内容"></a>小组件-获取位置权限更新内容</h2><p>小组件获取位置权限和主应用 target 里获取方式很类似，步骤：</p><ul><li>在 info 里添加 <code>NSWidgetUseLocation = ture</code>。</li><li>使用 CLLocationManager 来获取位置信息，设置较低的精度。</li><li>用 <code>isAuthorizedForWidgetUpdates</code> 请求位置权限。</li></ul><h2 id="支持多个小组件"><a href="#支持多个小组件" class="headerlink" title="支持多个小组件"></a>支持多个小组件</h2><p>widget bundle 可以支持多个小组件。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">FirstWidgetBundle</span><span class="token punctuation">:</span> <span class="token class-name">WidgetBundle</span> <span class="token punctuation">&#123;</span>        <span class="token attribute atrule">@WidgetBundleBuilder</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">FirstWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token class-name">SecondWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token operator">...</span>        <span class="token class-name">SecondWidgetBundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>body    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SecondWidgetBundle</span><span class="token punctuation">:</span> <span class="token class-name">WidgetBundle</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@WidgetBundleBuilder</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SomeWidgetOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token class-name">SomeWidgetTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token operator">...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取小组件形状"><a href="#获取小组件形状" class="headerlink" title="获取小组件形状"></a>获取小组件形状</h2><p>不同设备小组件大小和形状都不同，比如要加个边框，就很困难。这就需要使用 <code>ContainerRelativeShape</code> 来获取 Shape 视图容器。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ContainerRelativeShape</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">inset</span><span class="token punctuation">(</span>by<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>pink<span class="token punctuation">)</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Hello world"</span></span><span class="token punctuation">)</span>    <span class="token operator">...</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="小组件-Deep-link"><a href="#小组件-Deep-link" class="headerlink" title="小组件-Deep link"></a>小组件-Deep link</h2><p>medium 和 large 的小组件可以使用 Link，small 小组件使用 <code>.widgetURL</code> 修饰符。</p><h2 id="小组件访问SwiftData"><a href="#小组件访问SwiftData" class="headerlink" title="小组件访问SwiftData"></a>小组件访问SwiftData</h2><p>Wdiget target 访问主应用 target 的 SwiftData 数据步骤如下：</p><ul><li>对主应用和 Widget 的 target 中的 Signing &amp; Capabilities 都添加 App Groups，并创建一个新组，名字相同。</li><li>SwiftData 的模型同时在主应用和 Widget 的 target 中。</li><li>StaticConfiguration 或 AppIntentConfiguration 中添加 <code>modelContainer()</code> 修饰符，让 SwiftData 的容器可用。</li></ul><h2 id="小组件-参考资料"><a href="#小组件-参考资料" class="headerlink" title="小组件-参考资料"></a>小组件-参考资料</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2022/10050/">Complications and widgets: Reloaded - WWDC22 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/WidgetKit">WidgetKit 官方</a></li><li>官方指南 <a href="https://developer.apple.com/documentation/WidgetKit/Creating-lock-screen-widgets-and-watch-complications">Creating Lock Screen Widgets and Watch Complications</a></li><li><a href="https://developer.apple.com/widgets/">WidgetKit 主题</a></li><li><a href="https://developer.apple.com/documentation/widgetkit/debugging-widgets">Debugging Widgets</a></li><li><a href="https://developer.apple.com/videos/all-videos/?q=WidgetKit">WidgetKit Session</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2022/10050">Complications and widgets: Reloaded - WWDC22 - Videos - Apple Developer</a></li></ul><p>WWDC</p><ul><li>介绍怎么将 widgets 添加到 lock screen 的 session <a href="https://developer.apple.com/videos/play/wwdc2022-10050">Complications and widgets: Reloaded</a>。对应的实例代码 <a href="https://developer.apple.com/documentation/widgetkit/adding_widgets_to_the_lock_screen_and_watch_faces">Adding widgets to the Lock Screen and watch faces</a></li></ul><p>23</p><ul><li><a href="https://developer.apple.com/wwdc23/10028">Bring widgets to life - WWDC23 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/wwdc23/10029">Build widgets for the Smart Stack on Apple Watch - WWDC23 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/wwdc23/10027">Bring widgets to new places - WWDC23 - Videos - Apple Developer</a></li></ul><p>22</p><ul><li><a href="https://developer.apple.com/wwdc22/10051">Go further with Complications in WidgetKit - WWDC22 - Videos - Apple Developer</a> 进一步了解 WidgetKit 中的复杂功能</li><li><a href="https://developer.apple.com/news/?id=2q8t97ob">Challenge: WidgetKit workshop - Discover - Apple Developer</a> 挑战：WidgetKit 研讨会</li><li><a href="https://developer.apple.com/wwdc22/10050">Complications and widgets: Reloaded - WWDC22 - Videos - Apple Developer</a> 复杂功能和小组件：重新载入</li><li><a href="https://developer.apple.com/wwdc22/10051">Go further with Complications in WidgetKit - WWDC22 - Videos - Apple Developer</a> 进一步了解 WidgetKit 中的复杂功能</li></ul><p>21</p><ul><li><a href="https://developer.apple.com/wwdc21/10048">Principles of great widgets - WWDC21 - Videos - Apple Developer</a> 优秀小组件的原则</li><li><a href="https://developer.apple.com/wwdc21/10049">Add intelligence to your widgets - WWDC21 - Videos - Apple Developer</a> 让您的小组件更加智能</li><li><a href="https://developer.apple.com/news/?id=zawi5f1g">Documentation Spotlight: Dynamically display timely data in your widgets - Discover - Apple Developer</a> 聚焦文档：在小组件中适时动态显示数据</li></ul><p>20</p><ul><li><a href="https://developer.apple.com/wwdc20/10033">Build SwiftUI views for widgets - WWDC20 - Videos - Apple Developer</a> 为小组件构建 SwiftUI 视图。中文：<a href="https://xiaozhuanlan.com/topic/3691507248">WWDC20 - Build SwiftUI views for widgets － 小专栏</a></li><li><a href="https://developer.apple.com/news/?id=yv6so7ie">Widgets code-along - Discover - Apple Developer</a> 小组件编写临摹课程</li><li><a href="https://developer.apple.com/wwdc20/10034">Widgets Code-along, part 1: The adventure begins - WWDC20 - Videos - Apple Developer</a> 小组件编程临摹课程1：开始学习</li><li><a href="https://developer.apple.com/wwdc20/10035">Widgets Code-along, part 2: Alternate timelines - WWDC20 - Videos - Apple Developer</a> 小组件编程临摹课程2：变更时间线</li><li><a href="https://developer.apple.com/wwdc20/10036">Widgets Code-along, part 3: Advancing timelines - WWDC20 - Videos - Apple Developer</a> 小组件编程临摹课程3：加速时间线</li><li><a href="https://developer.apple.com/wwdc20/10028">Meet WidgetKit - WWDC20 - Videos - Apple Developer</a> 为你介绍 WidgetKit</li><li><a href="https://developer.apple.com/news/?id=yv6so7ie">Widgets code-along - Discover - Apple Developer</a> 小组件编程临摹课程</li><li><a href="https://developer.apple.com/wwdc20/10194">Add configuration and intelligence to your widgets - WWDC20 - Videos - Apple Developer</a> 为小组件添加配置和智能</li><li><a href="https://developer.apple.com/wwdc20/10028">Meet WidgetKit - WWDC20 - Videos - Apple Developer</a> 为你介绍 WidgetKit</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容已整理到小册子中，小册子代码在 &lt;a href=&quot;https://github.com/ming1016/SwiftPamphletApp&quot;&gt;Github&lt;/a&gt; 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买&lt;a href=&quot;https://apps
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>小册子之如何使用 SwiftData 开发 SwiftUI 应用</title>
    <link href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/"/>
    <id>https://starming.com/2024/05/18/pamphlet-series-swiftdata/</id>
    <published>2024-05-17T16:17:12.000Z</published>
    <updated>2024-05-25T12:27:58.603Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容已整理到小册子中，小册子代码在 <a href="https://github.com/ming1016/SwiftPamphletApp">Github</a> 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">“戴铭的开发小册子”</a>应用(98元)，来跟踪查看本文内容新增和更新。</p><p>本文属于小册子系列中的一篇，已发布系列文章有：</p><ul><li>【本篇】<a href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/">小册子之如何使用 SwiftData 开发 SwiftUI 应用</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-widget/">小册子之简说 Widget 小组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-listdataview/">小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-layout/">小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-form/">小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/25/pamphlet-series-animation/">小册子之 SwiftUI 动画</a></li></ul><p>小册子代码里有大量 SwiftData 实际使用实践的代码。</p><p>在 Swift 中，有许多库可以用于处理数据，包括但不限于 SwiftData、CoreData、Realm、SQLite.swift 等。这些库各有优势。</p><p>但，如果使用 SwiftData，你可以在 Swift 中更加方便地处理数据。SwiftData 是 Apple 在 WWDC23 上推出的一个新的数据持久化框架，它是 CoreData 的替代品，提供了更简单、更易用的 API。</p><h2 id="创建-Model模型"><a href="#创建-Model模型" class="headerlink" title="创建@Model模型"></a>创建@Model模型</h2><p>先说说如何创建 SwiftData 模型。</p><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>用 <code>@Model</code> 宏装饰类</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Model</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> content<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> publishedDate<span class="token punctuation">:</span> <span class="token class-name">Date</span>        <span class="token keyword">init</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> publishedDate<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>title <span class="token operator">=</span> title        <span class="token keyword">self</span><span class="token punctuation">.</span>author <span class="token operator">=</span> author        <span class="token keyword">self</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content        <span class="token keyword">self</span><span class="token punctuation">.</span>publishedDate <span class="token operator">=</span> publishedDate    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码创建了一个 Article 模型，包含了标题、作者、内容和发布日期。</p><p>以下数据类型默认支持：</p><ul><li>基础类型：Int, Int8, Int16, Int32, Int64, UInt, UInt8, UInt16, UInt32, UInt64, Float, Double, Bool, String, Date, Data 等</li><li>复杂的类型：Array, Dictionary, Set, Optional, Enum, Struct, Codable 等</li><li>模型关系：一对一、一对多、多对多</li></ul><p>默认数据库路径： <code>Data/Library/Application Support/default.store</code></p><h3 id="Attribute"><a href="#Attribute" class="headerlink" title="@Attribute"></a><code>@Attribute</code></h3><p>接下来说说如何使用 <code>@Attribute</code> 宏。</p><p>一些常用的：</p><ul><li>spotlight：使其能出现在 Spotlight 搜索结果里</li><li>unique：值是唯一的</li><li>externalStorage：值存储为二进制数据</li><li>transient：值不存储</li><li>encrypt：加密存储</li></ul><p>使用方法</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Attribute</span><span class="token punctuation">(</span><span class="token punctuation">.</span>externalStorage<span class="token punctuation">)</span> <span class="token keyword">var</span> imgData<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>二进制会将其存储为单独的文件，然后在数据库中引用文件名。文件会存到  <code>Data/Library/Application Support/.default_SUPPORT/_EXTERNAL_DATA</code> 目录下。</p><h3 id="Transient-不存"><a href="#Transient-不存" class="headerlink" title="@Transient 不存"></a><code>@Transient</code> 不存</h3><p>如果有的属性不希望进行存储，可以使用 <code>@Transient</code></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Model</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token attribute atrule">@Transient</span> <span class="token keyword">var</span> content<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="transformable"><a href="#transformable" class="headerlink" title="transformable"></a>transformable</h3><p>SwiftData 除了能够存储字符串和整数这样基本类型，还可以存储更复杂的自定义类型。要存储自定义类型，可用 transformable。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Model</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> content<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> publishedDate<span class="token punctuation">:</span> <span class="token class-name">Date</span>    <span class="token attribute atrule">@Attribute</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">transformable</span><span class="token punctuation">(</span>by<span class="token punctuation">:</span> <span class="token class-name">UIColorValueTransformer</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">var</span> bgColor<span class="token punctuation">:</span> <span class="token class-name">UIColor</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>UIColorValueTransformer 类的实现</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">class</span> <span class="token class-name">UIColorValueTransformer</span><span class="token punctuation">:</span> <span class="token class-name">ValueTransformer</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// return data</span>    <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">transformedValue</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> value<span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">Any</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">guard</span> <span class="token keyword">let</span> color <span class="token operator">=</span> value <span class="token keyword">as</span><span class="token operator">?</span> <span class="token class-name">UIColor</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token nil constant">nil</span> <span class="token punctuation">&#125;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">NSKeyedArchiver</span><span class="token punctuation">.</span><span class="token function">archivedData</span><span class="token punctuation">(</span>withRootObject<span class="token punctuation">:</span> color<span class="token punctuation">,</span> requiringSecureCoding<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> data        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token nil constant">nil</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// return UIColor</span>    <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">reverseTransformedValue</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> value<span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">Any</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">guard</span> <span class="token keyword">let</span> data <span class="token operator">=</span> value <span class="token keyword">as</span><span class="token operator">?</span> <span class="token class-name">Data</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token nil constant">nil</span> <span class="token punctuation">&#125;</span>                <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> color <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">NSKeyedUnarchiver</span><span class="token punctuation">.</span><span class="token function">unarchivedObject</span><span class="token punctuation">(</span>ofClass<span class="token punctuation">:</span> <span class="token class-name">UIColor</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> data<span class="token punctuation">)</span>            <span class="token keyword">return</span> color        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token nil constant">nil</span>         <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注册</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SwiftPamphletAppApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ValueTransformer</span><span class="token punctuation">.</span><span class="token function">setValueTransformer</span><span class="token punctuation">(</span><span class="token class-name">UIColorValueTransformer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> forName<span class="token punctuation">:</span> <span class="token class-name">NSValueTransformerName</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"UIColorValueTransformer"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WindowGroup</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SwiftData-模型关系"><a href="#SwiftData-模型关系" class="headerlink" title="SwiftData-模型关系"></a>SwiftData-模型关系</h2><p>使用 &#96;&#96;@Relationship&#96; 添加关系，但是不加这个宏也可以，SwiftData 会自动添加模型之间的关系。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Model</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Author</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token attribute atrule">@Relationship</span><span class="token punctuation">(</span>deleteRule<span class="token punctuation">:</span> <span class="token punctuation">.</span>cascade<span class="token punctuation">,</span> inverse<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token class-name">Brew</span><span class="token punctuation">.</span>brewer<span class="token punctuation">)</span>    <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token attribute atrule">@Model</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>    <span class="token keyword">var</span> author<span class="token punctuation">:</span> <span class="token class-name">Author</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>默认情况 deleteRule 是 <code>.nullify</code>，这个删除后只会删除引用关系。<code>.cascade</code> 会在删除用户后删除其所有文章。</p><p>SwiftData 可以添加一对一，一对多，多对多的关系。</p><p>限制关系表数量</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Relationship</span><span class="token punctuation">(</span>maximumModelCount<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="容器配置modelContainer"><a href="#容器配置modelContainer" class="headerlink" title="容器配置modelContainer"></a>容器配置modelContainer</h2><h3 id="多模型"><a href="#多模型" class="headerlink" title="多模型"></a>多模型</h3><p>配置方法</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">SomeApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WindowGroup</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token class-name">Author</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有关系的两个模型，只需要加父模型，SwiftData 会推断出子模型。</p><h3 id="数据存内存"><a href="#数据存内存" class="headerlink" title="数据存内存"></a>数据存内存</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> configuration <span class="token operator">=</span> <span class="token class-name">ModelConfiguration</span><span class="token punctuation">(</span>inMemory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">let</span> container <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">ModelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> schema<span class="token punctuation">,</span> configurations<span class="token punctuation">:</span> <span class="token punctuation">[</span>configuration<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="数据只读"><a href="#数据只读" class="headerlink" title="数据只读"></a>数据只读</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token class-name">ModelConfiguration</span><span class="token punctuation">(</span>allowsSave<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="自定义存储文件和位置"><a href="#自定义存储文件和位置" class="headerlink" title="自定义存储文件和位置"></a>自定义存储文件和位置</h3><p>如果要指定数据库存储的位置，可以按下面写法：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">SomeApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> container<span class="token punctuation">:</span> <span class="token class-name">ModelContainer</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> storeURL <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span>documentsDirectory<span class="token punctuation">.</span><span class="token function">appending</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"database.sqlite"</span></span><span class="token punctuation">)</span>            <span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token class-name">ModelConfiguration</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> storeURL<span class="token punctuation">)</span>            container <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">ModelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> configurations<span class="token punctuation">:</span> config<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>            <span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Failed"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WindowGroup</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="iCloud-支持"><a href="#iCloud-支持" class="headerlink" title="iCloud 支持"></a>iCloud 支持</h3><p>如果要添加 iCloud 支持，需要先确定模型满足以下条件：</p><ul><li>没有唯一约束</li><li>关系是可选的</li><li>有所值有默认值</li></ul><p>iCloud 支持操作步骤：</p><ul><li>进入 Signing &amp; Capabilities 中，在 Capability 里选择 iCloud</li><li>选中 CloudKit 旁边的框</li><li>设置 bundle identifier</li><li>再按 Capability，选择 Background Modes</li><li>选择 Remote Notifications</li></ul><h3 id="指定部分表同步到-iCloud"><a href="#指定部分表同步到-iCloud" class="headerlink" title="指定部分表同步到 iCloud"></a>指定部分表同步到 iCloud</h3><p>使用多个 ModelConfiguration 对象来配置，这样可以指定哪个配置成同步到 iCloud，哪些不同步。</p><h3 id="添加多个配置"><a href="#添加多个配置" class="headerlink" title="添加多个配置"></a>添加多个配置</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">SomeApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> container<span class="token punctuation">:</span> <span class="token class-name">ModelContainer</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> c1 <span class="token operator">=</span> <span class="token class-name">ModelConfiguration</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> c2 <span class="token operator">=</span> <span class="token class-name">ModelConfiguration</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Author</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> isStoredInMemoryOnly<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>            container <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">ModelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token class-name">Author</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> configurations<span class="token punctuation">:</span> c1<span class="token punctuation">,</span> c2<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>            <span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Failed"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WindowGroup</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="撤销和重做"><a href="#撤销和重做" class="headerlink" title="撤销和重做"></a>撤销和重做</h3><p>创建容器时进行指定</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> isUndoEnabled<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样 modelContext 就可以调用撤销和重做函数。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SomeView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>modelContext<span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">var</span> context    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            context<span class="token punctuation">.</span>undoManager<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">undo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"撤销"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="context"><a href="#context" class="headerlink" title="context"></a>context</h3><p>View 之外的地方，可以通过 ModelContainer 的 context 属性来获取 modelContext。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> context <span class="token operator">=</span> container<span class="token punctuation">.</span>mainContext<span class="token keyword">let</span> context <span class="token operator">=</span> <span class="token class-name">ModelContext</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="预先导入数据"><a href="#预先导入数据" class="headerlink" title="预先导入数据"></a>预先导入数据</h3><p>方法如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> result <span class="token keyword">in</span>    <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> container <span class="token operator">=</span> <span class="token keyword">try</span> result<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// 先检查有没数据</span>        <span class="token keyword">let</span> descriptor <span class="token operator">=</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> existingArticles <span class="token operator">=</span> <span class="token keyword">try</span> container<span class="token punctuation">.</span>mainContext<span class="token punctuation">.</span><span class="token function">fetchCount</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span>        <span class="token keyword">guard</span> existingArticles <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token punctuation">&#125;</span>        <span class="token comment">// 读取 bundle 里的文件</span>        <span class="token keyword">guard</span> <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token class-name">Bundle</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>forResource<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"articles"</span></span><span class="token punctuation">,</span> withExtension<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"json"</span></span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Failed"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">Data</span><span class="token punctuation">(</span>contentsOf<span class="token punctuation">:</span> url<span class="token punctuation">)</span>        <span class="token keyword">let</span> articles <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">JSONDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> data<span class="token punctuation">)</span>        <span class="token keyword">for</span> article <span class="token keyword">in</span> articles <span class="token punctuation">&#123;</span>            container<span class="token punctuation">.</span>mainContext<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Failed"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="增删modelContext"><a href="#增删modelContext" class="headerlink" title="增删modelContext"></a>增删modelContext</h2><h3 id="添加保存数据"><a href="#添加保存数据" class="headerlink" title="添加保存数据"></a>添加保存数据</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SomeView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>   <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>modelContext<span class="token punctuation">)</span> <span class="token keyword">var</span> context   <span class="token operator">...</span>   <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>         <span class="token operator">...</span>         <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>             <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>             <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"添加"</span></span><span class="token punctuation">)</span>         <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">func</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token operator">...</span>      context<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>默认不用使用 <code>context.save()</code>，SwiftData 会自动进行保存，如果不想自动保存，可以在容器中设置</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">&#123;</span>   <span class="token class-name">WindowGroup</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span>   <span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> isAutosaveEnabled<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>       <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="编辑和删除数据"><a href="#编辑和删除数据" class="headerlink" title="编辑和删除数据"></a>编辑和删除数据</h3><p>编辑数据使用 <code>@Bindable</code>。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SomeView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Bindable</span> <span class="token keyword">var</span> article<span class="token punctuation">:</span> <span class="token class-name">Article</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>modelContext<span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">var</span> modelContext    <span class="token operator">...</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"文章标题"</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $article<span class="token punctuation">.</span>title<span class="token punctuation">)</span>            <span class="token operator">...</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>            <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>destructiveAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"删除"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    modelContext<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SwiftData-检索"><a href="#SwiftData-检索" class="headerlink" title="SwiftData-检索"></a>SwiftData-检索</h2><h3 id="Query"><a href="#Query" class="headerlink" title="@Query"></a><code>@Query</code></h3><p>使用 <code>@Query</code> 会从数据库中获取数据。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Query</span> <span class="token keyword">private</span> <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>@Query</code> 还支持 filter、sort、order 和 animation 等参数。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Query</span><span class="token punctuation">(</span>sort<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token class-name">Article</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>forward<span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>sort 可支持多个 SortDescriptor，SwiftData 会按顺序处理。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Query</span><span class="token punctuation">(</span>sort<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token class-name">Article</span><span class="token punctuation">.</span>isArchived<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>forward<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token class-name">Article</span><span class="token punctuation">.</span>updateDate<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Predicate"><a href="#Predicate" class="headerlink" title="Predicate"></a>Predicate</h3><p>filter 使用的是 <code>#Predicate</code> </p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">static</span> <span class="token keyword">var</span> now<span class="token punctuation">:</span> <span class="token class-name">Date</span> <span class="token punctuation">&#123;</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>now <span class="token punctuation">&#125;</span><span class="token attribute atrule">@Query</span><span class="token punctuation">(</span>filter<span class="token punctuation">:</span> <span class="token other-directive property">#Predicate</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span> <span class="token punctuation">&#123;</span> article <span class="token keyword">in</span>    article<span class="token punctuation">.</span>releaseDate <span class="token operator">></span> now<span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token keyword">var</span> draftArticles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Predicate 支持的内置方法主要有 <code>contains</code>、<code>allSatisfy</code>、<code>flatMap</code>、<code>filter</code>、<code>subscript</code>、<code>starts</code>、<code>min</code>、<code>max</code>、<code>localizedStandardContains</code>、<code>localizedCompare</code>、<code>caseInsensitiveCompare</code> 等。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Query</span><span class="token punctuation">(</span>filter<span class="token punctuation">:</span> <span class="token other-directive property">#Predicate</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span> <span class="token punctuation">&#123;</span> article <span class="token keyword">in</span>    article<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">starts</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"苹果发布会"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>需要注意的是 <code>.isEmpty</code>  不能使用  <code>article.title.isEmpty == false</code> ，否则会崩溃。</p><h3 id="FetchDescriptor"><a href="#FetchDescriptor" class="headerlink" title="FetchDescriptor"></a>FetchDescriptor</h3><p>FetchDescriptor 可以在模型中查找数据，而不必在视图层做。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Model</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token operator">...</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> all<span class="token punctuation">:</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>        <span class="token class-name">FetchDescriptor</span><span class="token punctuation">(</span>sortBy<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token class-name">Article</span><span class="token punctuation">.</span>updateDate<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SomeView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>       <span class="token attribute atrule">@Query</span><span class="token punctuation">(</span><span class="token class-name">Article</span><span class="token punctuation">.</span>all<span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="获取数量而不加载"><a href="#获取数量而不加载" class="headerlink" title="获取数量而不加载"></a>获取数量而不加载</h3><p>使用 <code>fetchCount()</code> 方法，可完成整个计数，且很快，内存占用少。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> descriptor <span class="token operator">=</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span><span class="token punctuation">(</span>predicate<span class="token punctuation">:</span> <span class="token other-directive property">#Predicate</span> <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>words <span class="token operator">></span> <span class="token number">50</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">try</span><span class="token operator">?</span> modelContext<span class="token punctuation">.</span><span class="token function">fetchCount</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="fetchLimit-限制获取数量"><a href="#fetchLimit-限制获取数量" class="headerlink" title="fetchLimit 限制获取数量"></a>fetchLimit 限制获取数量</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">var</span> descriptor <span class="token operator">=</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span><span class="token punctuation">(</span>  predicate<span class="token punctuation">:</span> <span class="token other-directive property">#Predicate</span> <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>read <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  sortBy<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token class-name">Article</span><span class="token punctuation">.</span>updateDate<span class="token punctuation">,</span>           order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>descriptor<span class="token punctuation">.</span>fetchLimit <span class="token operator">=</span> <span class="token number">30</span><span class="token keyword">let</span> articles <span class="token operator">=</span> <span class="token keyword">try</span> context<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span><span class="token comment">// 翻页</span><span class="token keyword">let</span> pSize <span class="token operator">=</span> <span class="token number">30</span><span class="token keyword">let</span> pNumber <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">var</span> fetchDescriptor <span class="token operator">=</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span><span class="token punctuation">(</span>sortBy<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token class-name">Article</span><span class="token punctuation">.</span>updateDate<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>fetchDescriptor<span class="token punctuation">.</span>fetchOffset <span class="token operator">=</span> pNumber <span class="token operator">*</span> pSizefetchDescriptor<span class="token punctuation">.</span>fetchLimit <span class="token operator">=</span> pSize<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="限制获取的属性"><a href="#限制获取的属性" class="headerlink" title="限制获取的属性"></a>限制获取的属性</h3><p>只请求要用的属性</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">var</span> fetchDescriptor <span class="token operator">=</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span><span class="token punctuation">(</span>sortBy<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>updateDate<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>fetchDescriptor<span class="token punctuation">.</span>propertiesToFetch <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">\</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>updateDate<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="SwiftData-处理大量数据"><a href="#SwiftData-处理大量数据" class="headerlink" title="SwiftData-处理大量数据"></a>SwiftData-处理大量数据</h2><p>SwiftData 模型上下文有个方法叫 <code>enumerate()</code>，可以高效遍历大量数据。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> descriptor <span class="token operator">=</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token keyword">do</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> modelContext<span class="token punctuation">.</span><span class="token function">enumerate</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">,</span> batchSize<span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> article <span class="token keyword">in</span>        <span class="token operator">...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Failed."</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中 batchSize 参数是调整批量处理的数量，也就是一次加载多少对象。因此可以通过这个值来权衡内存和IO数量。这个值默认是 5000。</p><h2 id="SwiftData多线程"><a href="#SwiftData多线程" class="headerlink" title="SwiftData多线程"></a>SwiftData多线程</h2><p>创建一个 Actor，然后 SwiftData 上下文在其中执行操作。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@ModelActor</span><span class="token keyword">actor</span> <span class="token class-name">DataHandler</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">DataHandler</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">addInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-></span> <span class="token class-name">IOInfo</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> info <span class="token operator">=</span> <span class="token class-name">IOInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        modelContext<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>        <span class="token keyword">try</span> modelContext<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> info    <span class="token punctuation">&#125;</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Task</span><span class="token punctuation">.</span>detached <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token class-name">DataHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> item <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token keyword">await</span> handler<span class="token punctuation">.</span><span class="token function">addInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SwiftData-版本迁移"><a href="#SwiftData-版本迁移" class="headerlink" title="SwiftData-版本迁移"></a>SwiftData-版本迁移</h2><p>以下的小改动 SwiftData 会自动执行轻量迁移：</p><ul><li>增加模型</li><li>增加有默认值的新属性</li><li>重命名属性</li><li>删除属性</li><li>增加或删除 <code>.externalStorage</code> 或 <code>.allowsCloudEncryption</code> 属性。</li><li>增加所有值都是唯一属性为 <code>.unique</code></li><li>调整关系的删除规则</li></ul><p>其他情况需要用到版本迁移，版本迁移步骤如下：</p><ul><li>用 VersionedSchema 创建 SwiftData 模型的版本</li><li>用 SchemaMigrationPlan 对创建的版本进行排序</li><li>为每个迁移定义一个迁移阶段</li></ul><p>设置版本</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">enum</span> <span class="token class-name">ArticleV1Schema</span><span class="token punctuation">:</span> <span class="token class-name">VersionedSchema</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> versionIdentifier<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"v1"</span></span>    <span class="token keyword">static</span> <span class="token keyword">var</span> models<span class="token punctuation">:</span> <span class="token punctuation">[</span>any <span class="token class-name">PersistentModel</span><span class="token punctuation">.</span><span class="token keyword">Type</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span>    <span class="token attribute atrule">@Model</span>    <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token punctuation">&#123;</span>        <span class="token operator">...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SchemaMigrationPlan 轻量迁移</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">enum</span> <span class="token class-name">ArticleMigrationPlan</span><span class="token punctuation">:</span> <span class="token class-name">SchemaMigrationPlan</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> schemas<span class="token punctuation">:</span> <span class="token punctuation">[</span>any <span class="token class-name">VersionedSchema</span><span class="token punctuation">.</span><span class="token keyword">Type</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">[</span><span class="token class-name">ArticleV1Schema</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token class-name">ArticleV2Schema</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> stages<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">MigrationStage</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">[</span>migrateV1toV2<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">let</span> migrateV1toV2 <span class="token operator">=</span> <span class="token class-name">MigrationStage</span><span class="token punctuation">.</span><span class="token function">lightweight</span><span class="token punctuation">(</span>        fromVersion<span class="token punctuation">:</span> <span class="token class-name">ArticleV1Schema</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span>        toVersion<span class="token punctuation">:</span> <span class="token class-name">ArticleV2Schema</span><span class="token punctuation">.</span><span class="token keyword">self</span>    <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自定义迁移</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">static</span> <span class="token keyword">let</span> migrateV1toV2 <span class="token operator">=</span> <span class="token class-name">MigrationStage</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span>    fromVersion<span class="token punctuation">:</span> <span class="token class-name">ArticleV1Schema</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span>    toVersion<span class="token punctuation">:</span> <span class="token class-name">ArticleV2Schema</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span>    willMigrate<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> context <span class="token keyword">in</span>        <span class="token comment">// 合并前的处理</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    didMigrate<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> context <span class="token keyword">in</span>        <span class="token comment">// 合并后的处理</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SwiftData-调试"><a href="#SwiftData-调试" class="headerlink" title="SwiftData-调试"></a>SwiftData-调试</h2><p>CoreData 的调试方式依然适用于 SwiftData。</p><p>你可以设置启动参数来让 CoreData 打印出执行的 SQL 语句。在你的项目中，选择 “Product” -&gt; “Scheme” -&gt; “Edit Scheme”，然后在 “Arguments” 标签下的 “Arguments Passed On Launch” 中添加 -com.apple.CoreData.SQLDebug 1。这样，每当 CoreData 执行 SQL 语句时，都会在控制台中打印出来。</p><p>使用 <code>-com.apple.CoreData.SQLDebug 3</code> 获取后台更多信息。</p><h2 id="SwiftData-资料"><a href="#SwiftData-资料" class="headerlink" title="SwiftData-资料"></a>SwiftData-资料</h2><h3 id="WWDC"><a href="#WWDC" class="headerlink" title="WWDC"></a>WWDC</h3><p>23</p><ul><li><a href="https://developer.apple.com/wwdc23/10196">Dive deeper into SwiftData - WWDC23 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/wwdc23/10189">Migrate to SwiftData - WWDC23 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/wwdc23/10187">Meet SwiftData - WWDC23 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/wwdc23/10195">Model your schema with SwiftData - WWDC23 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/wwdc23/10154">Build an app with SwiftData - WWDC23 - Videos - Apple Developer</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容已整理到小册子中，小册子代码在 &lt;a href=&quot;https://github.com/ming1016/SwiftPamphletApp&quot;&gt;Github&lt;/a&gt; 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买&lt;a href=&quot;https://apps
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>戴铭的开发小册子6.0，使用SwiftUI、SwiftData、Observable、NavigationSplitView 进行了重构</title>
    <link href="https://starming.com/2024/05/08/swiftpamphletapp6/"/>
    <id>https://starming.com/2024/05/08/swiftpamphletapp6/</id>
    <published>2024-05-08T13:05:31.000Z</published>
    <updated>2024-05-15T13:19:40.797Z</updated>
    
    <content type="html"><![CDATA[<p>目前戴铭的开发小册子已经上架 macOS 应用商店，<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">点击安装</a>，或在 macOS 应用商店“戴铭”关键字。</p><p><a href="https://apps.apple.com/cn/app/id1609702529"><img src="https://ming1016.github.io/qdimg/badge-download-on-the-mac-app-store.svg" alt="Available on the App Store" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/badge-download-on-the-mac-app-store.svg" class="lozad post-image"></a></p><p>本版本解决了以前的几个问题。</p><p>第一个，存储的问题。以前使用的是三方数据库，写法比较繁琐且和 SwiftUI 结合的不好。现在用的是 SwiftData，写法简洁了很多，代码也好维护了。更多技术重构细节可以直接查看 App <a href="https://github.com/ming1016/SwiftPamphletApp">代码</a>。</p><p>第二，手册内容和资料之间的关系。以前比较隔离，资料和手册没有联系。现在采用的是每个知识点都可以添加相关资料，这样更利于知识的积累。</p><p>第三，Github 库和开发者信息的管理问题。以前添加和删除都在代码层面，现在可以直接在 App 内进行。</p><p>这三个问题解决后，可以将更多精力花在内容的更新增加以及 App 使用体验上了。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftpamphletapp6/01.png" class="lozad post-image"src="/uploads/swiftpamphletapp6/01.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftpamphletapp6/02.png" class="lozad post-image"src="/uploads/swiftpamphletapp6/02.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftpamphletapp6/03.png" class="lozad post-image"src="/uploads/swiftpamphletapp6/03.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftpamphletapp6/04.png" class="lozad post-image"src="/uploads/swiftpamphletapp6/04.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftpamphletapp6/05.png" class="lozad post-image"src="/uploads/swiftpamphletapp6/05.png"></p><p>内容主要包含</p><ul><li>Apple 技术知识点以及示例</li><li>历年 WWDC</li></ul><p>功能主要包含</p><ul><li>手册书签收藏</li><li>资料收集整理</li><li>离线保存资料</li><li>知识点和资料关联</li><li>手册、WWDC和资料可搜索</li><li>Github 开发者和仓库信息添加管理</li></ul><p>知识点目前主要有 Swift 基础语法，SwiftUI，SwiftData，小组件等知识内容。其他内容还在迭代新增和更新中。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目前戴铭的开发小册子已经上架 macOS 应用商店，&lt;a href=&quot;https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="App" scheme="https://starming.com/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>给孩子小学的家长讲堂做了一个计算机科普分享</title>
    <link href="https://starming.com/2023/05/31/sharing-cs-in-elementary-school/"/>
    <id>https://starming.com/2023/05/31/sharing-cs-in-elementary-school/</id>
    <published>2023-05-31T11:39:09.000Z</published>
    <updated>2023-06-09T13:46:39.494Z</updated>
    
    <content type="html"><![CDATA[<p>柠檬所在的学校举办了一个家长讲堂活动，家长们做了很多有意思的分享，柠檬也希望我能够去讲讲，因此我也专门准备了一些内容。下面是我在家长讲堂上所分享的内容。</p><p>分享的标题是《图灵对计算机的设想》，那么图灵是什么人？</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/01.png" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/01.png"></p><p>阿兰·图灵，英国著名的数学家和计算机科学家，被誉为计算机科学之父、人工智能之父和密码学之父。</p><p>第二次世界大战中，阿兰·图灵是一位密码破译专家，协助英国政府破解了德国的密码，对盟军的胜利作出了贡献。</p><p>在1939年，英国参加了二战，他加入英国布莱切利园的一个密码破译组织，负责破解德军用的一种名为 Enigma 加密机的通信加密信息。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/02.png" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/02.png"></p><p>Enigma 看起来像一台打字机，有键盘、灯板、插线板和转子。键盘上按下一个字母键，灯板就会显示加密后的字母。</p><p>其中最重要的是转子，Enigma 的转子会轮换替代映射到密文。更改映射的能力很重要，因为一旦某人推导出一个字母替代规则，那么他将会知道密文中每个字母替换规则，因此需要将这些配对都改变，每次编码字母时都更改。</p><p>Enigma 实现方式是将所有布线嵌入到车轮&#x2F;转子中。通过在保持字母静止的同时转动转子，字母之间的连接会发生变化。重复替换步骤，然后转动每个字母的转子。在转子中，每根导线的两端都有外部接触点。这允许这些转子中的多个并排放置，相邻触点接触。在内部，每个转子的接线方式不同，即每个转子都包含不同的密码。在一些Enigma机器中，有三个转子，最常用的是八个。每个转子还有一个附加的字母环，该字母环随转子转动并用于设置转子的初始位置。</p><p>每个转子都可以转动到任何位置。这意味着对于第一个转子，有26条可能的路径通过一个字母。但是一旦我们沿着导线穿过第一个转子，现在有26条可能的路径通过第二个转子。然后通过第三条路径还有26条可能的路径。因此，2条通过所有三个转子的路径总数为17576。如果是5个转子，我们可以从五个转子中选择用于左侧的转子，然后从剩余的四个转子中选择用于中间的转子，然后从三个转子中选择用于正确的转子。这提供了60种可能的方式来选择用于消息的三个转子。由于一个字母可以通过转子有17576条可能的路径，因此总共有1054560种可能性。</p><p>1930年，德国军队版本增加了一个插板，允许交换字母。由于有26个字母，最多可以进行13个掉期，但通常只有10个。计算连接插板的可能方法数量的数学有点复杂，但数字是150738274937250。乘以我们上面给出的其他可能的组合，我们得到一个字母可以采用的可能路径总数是158962555217826360000。</p><p>可能性超多的，在那个只能用真空管做布尔计算的时代，想要破译这些可能，是一件很难的事情。</p><p>那么当时盟军是怎么破译的呢？</p><p>早期替换加密规律很简单，比如凯撒加密把信件中的字母向前挪三个位置，还有玛丽女王密谋杀伊丽莎白女王的密文，通过统计字母出现频率之类的规则，当破解了一个字母替换方法就能找出通篇原文，没有计算机也能够手工破解出来，而 Enigma 每个字母的可能性都海量的，导致盟军在很长一段时间都没法破译 Enigma 加密的内容。</p><p>1932年波兰数学家马里安·雷耶夫斯基、杰尔兹·罗佐基和亨里克·佐加尔斯基按照法国情报人员秘密获取的 Enigma 的原理破解了 Enigma。由于波兰数学家们利用的漏洞不断被德军修复，算力无法及时算出结果，后来将破解方法告诉了英国。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/03.png" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/03.png"></p><p>图灵基于波兰破解方法，利用字母加密后一定会是一个和自己不同的字母这个缺陷，设计了一个叫 Bombe 的计算机，对加密消息尝试多种组合，如发现字母解密后和原先一样，这个组合就会被跳过，接着试另一组，因此 Bombe 大幅减少了搜索量，这样就能保证及时破解信息。</p><p>战争历史学家 Harry Hinsley 肯定了图灵和布莱切利园组织的工作，说由于他们的工作让战争缩短了两年多，挽救了1400万人的生命。</p><p>如今加密技术怎样了呢？进入民用了么？我们能够利用加密技术保护我们的数据安全吗？</p><p>加密技术从硬件转向了软件，早期加密算法是1977年的 DES。DES 是一种对称加密算法，它的原理是将明文分成64位的块，通过一系列的置换、替换和移位操作，使用一个56位的密钥对明文进行加密，得到64位的密文。意味着有2的56次方，或大约72千万亿个不同密钥。当时是没有计算能力可以暴力破解所有可能密钥的。</p><p>DES 加密算法的具体步骤如下：</p><ul><li>初始置换（IP）：将明文按照一定的规则进行置换，得到一个新的64位明文。</li><li>分组：将置换后的明文分成左右两个32位的块。</li><li>轮函数：对右半部分进行一系列的置换、替换和移位操作，使用一个48位的子密钥对其进行加密。</li><li>左右交换：将左半部分和右半部分进行交换。</li><li>重复执行第3步和第4步，共进行16轮。</li><li>合并：将左右两个32位的块合并成一个64位的块。</li><li>末置换（FP）：将合并后的块按照一定的规则进行置换，得到一个新的64位密文。</li></ul><p>DES 解密算法的步骤与加密算法相反，主要是将加密算法中的子密钥按照相反的顺序使用，对密文进行解密。</p><p>DES 加密算法的安全性在当时是比较高的。</p><p>到了1999年，计算机芯片计算能力指数增加，一台计算机就能在几天内将 DES 的所有可能密钥都试一遍。因此，DES 已经不再被广泛使用，取而代之的是更加安全的加密算法，例如 AES。</p><p>2001年 AES 是一种对称加密算法，它的原理是将明文分成128位的块，通过一系列的置换、替换和移位操作，使用一个128位、192位或256位的密钥对明文进行加密，得到128位的密文。</p><p>AES 加密算法的具体步骤如下：</p><ul><li>密钥扩展：根据密钥长度，对密钥进行扩展，生成多个轮密钥。</li><li>初始轮：将明文按照一定的规则进行置换，得到一个新的128位明文。</li><li>轮函数：对明文进行一系列的置换、替换和移位操作，使用一个轮密钥对其进行加密。</li><li>重复执行第3步，共进行多轮。</li><li>末轮：对明文进行最后一轮的置换、替换和移位操作，使用最后一个轮密钥对其进行加密。</li><li>得到密文。</li></ul><p>AES 解密算法的步骤与加密算法相反，主要是将加密算法中的轮密钥按照相反的顺序使用，对密文进行解密。</p><p>AES 加密算法的安全性很高，主要基于其密钥长度和轮函数的复杂性。AES 支持三种密钥长度：128位、192位和256位，其中256位密钥的安全性最高。此外，AES 的轮函数使用了多种复杂的操作，例如有限域上的乘法和逆变换，使得密码破解变得更加困难。</p><p>AES 在性能和安全性间取得平衡。如今 AES 被广泛使用，比如 iPhone 上加密文件，访问 HTTPS 网站等。</p><p>进入互联网时代，以前加密技术中的密钥在网上传递过程中会被截获，截获到密钥就能够直接解密通信了。</p><p>那要怎么做才能够保证密钥不会被截获呢？</p><p>这就要用到密钥交换技术了。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/04.png" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/04.png"></p><p>密钥交换是一种不发送密钥，但依然让两台计算机在密钥上达成共识的算法。我们可以用单向函数来做。单向函数是一种数学操作，很容易算出结果，但想从结果逆向推算出输入非常困难。</p><p>密钥交换的原理是基于数学问题的难解性，例如离散对数问题。</p><p>其中，Diffie-Hellman 密钥交换协议是一种常见的密钥交换协议，在 Diffie-Hellman 里单向函数是模幂运算。意思是先做幂运算，拿一个数字当底数，拿一个数字当指数。其具体原理如下：</p><ul><li>选择两个大质数 p 和 g，其中 g 是 p 的原根。</li><li>小明选择一个私钥 a，并计算 <code>A=g^a(mod p)</code>，将 A 发送给小强。</li><li>小强选择一个私钥 b，并计算 <code>B=g^b(mod p)</code>，将 B 发送给小明。</li><li>小明计算 <code>s=B^a(mod p)</code>。</li><li>小强计算 <code>s=A^b(mod p)</code>。</li><li>现在，小明和小强都拥有相同的密钥 s，可以在通信过程中使用它来加密和解密消息。</li></ul><p>Diffie-Hellman 密钥交换协议的安全性基于离散对数问题的难解性，即使已知 p、g、A 和 B，也很难计算出 a 和 b。因此，Diffie-Hellman 密钥交换协议被广泛应用于安全通信和密钥交换等领域。</p><p>另外还可以用混色来比喻 Diffie-Hellman 密钥交换协议。</p><p>将颜色混合在一起很容易。但想知道混了什么颜色很难。要试很多种可能才知道，用这个比喻，那么我们的密钥是一种独特的颜色，首先，有一个公开的颜色 C，所有人都可以看到。然后小明和小强各自选一个秘密颜色 A 和颜色 C，只有自己知道，然后小明发给小强 A 和 C 的混色。小强也这样做，把他的秘密颜色 B 和公开颜色 C 混在一起，然后发给小明。小明收到小强的颜色后，把小明的秘密颜色 A 加进去，现在3种颜色混合在一起。小强也一样做。这样，小强和小明就有了一样的颜色。他们可以把这个颜色当密钥，尽管他们从来没有给对方发过这颜色。外部截获信息的人可以知道部分信息，但无法知道最终颜色。</p><p>Diffie-Hellman 密钥交换是建立共享密钥的一种方法。双方用一样的密钥加密和解密消息，这叫对称加密，因为密钥一样，凯撒加密，英格玛，AES 都是对称加密。</p><p>对称加密的内容两个人都能解密看到，如果加密的信息只想有一方可以解密查看就要用到非对称加密。非对称加密，有两个不同的密钥，一个是公开的，另一个是私有的，用公钥加密消息，只有有私钥的人能解密。</p><p>就好像把一个箱子和锁给你，你可以锁上箱子，但不能打开箱子，锁箱子就是公钥加密，能够打开箱子的是有钥匙的人，解锁就是私钥解密。</p><p>常见的非对称加密算法包括RSA、DSA和ECC等。目前最流行的非对称加密技术是 RSA。名字来自发明者：Rivest，Shamir，Adleman。</p><p>RSA 的原理是基于数学问题的难解性，例如大质数分解。RSA的具体原理如下：</p><ul><li>选择两个大质数 p 和 q，计算它们的乘积 <code>n=p*q</code>。</li><li>选择一个整数e，使得<code>1&lt;e&lt;φ(n)</code>，且 e 与 <code>φ(n)</code> 互质，<code>φ(n)=(p-1)*(q-1)</code>。</li><li>计算 e 关于 <code>φ(n)</code> 的模反元素 d，即满足 <code>e*d≡1(mod φ(n))</code> 的最小正整数 d。</li><li>公钥为 <code>(n,e)</code>，私钥为 <code>(n,d)</code>。</li><li>加密时，将明文 m 转换为整数 M，计算密文 <code>C=M^e(mod n)</code>。</li><li>解密时，将密文 C 计算出明文 m，即 <code>M=C^d(mod n)</code>。</li></ul><p>RSA 的安全性基于大质数分解的难度，即使已知公钥和密文，也很难计算出私钥。因此，RSA被广泛应用于数字签名、密钥交换和安全通信等领域。比如数字签名就是公钥来解密，大家都能公开看到签名内容，只有服务器端能够用私钥来加密，这样就能够证明签名是没有伪造的。</p><p>对称加密，密钥交换和公钥密码这些就是现代密码学。和图灵那个时代相比更加安全，加解密速度的提高让应用场景也更加地广泛了。</p><p>图灵除了密码破译外还做了一件对现代计算机影响深远的事情。</p><p>1935年，德国数学家大卫·希尔伯特提出的问题，就是“可判定性问题”，可判定性问题是指是否存在一种算法，输入逻辑语句，可以判断是和否。</p><p>图灵发明了一种叫做图灵机的东西，这个机器可以模拟任何其他的计算机，通过图灵机回答了可判定性问题，这个问题虽然看似简单，但是实际上却相当复杂，因为涉及了形式语言的理论、递归的原理等概念。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/06.png" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/06.png"></p><p>图灵机可以用于证明停机问题，即判断一个给定的程序是否会在有限时间内停止运行。停机问题是计算机科学中的一个经典问题，它在理论上是不可解的，即不存在一种通用的算法可以解决所有停机问题。这个图灵机可以接受一个程序集合作为输入，并输出一个程序，该程序与输入集合中的所有程序的行为都不同。通过对这个图灵机的构造和分析，图灵证明了停机问题的不可解性。</p><p>具体来说，当程序不递归自己，输出停机，测试程序就调用它，使其不停机；如果程序递归调用自己，输出不停机，测试程序不调用它，使其停机。那么问题是测试程序递归调用自己时。</p><p>另外还有个更形象的和停机问题一样的理发师悖论，具体说就是有个理发师他有个原则，有人不能刮胡子，他刮；有人刮胡子，他不能刮。无法回答的问题是，理发师会自己刮胡子么？因为他能自己刮，但根据他的原则他又不能刮，但他不能刮的话他又要刮。</p><p>图灵机是图灵对计算机的设想，他假设时间足够多，存储足够大，图灵机可以实现任何计算，另外通过停机问题也证明了并不是所有问题都能用计算来解决，也就是提前证明了计算机的极限。开启了可计算性理论，也就是丘奇-图灵论题。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/05.png" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/05.png"></p><p>图灵机工作过程和人处理问题的过程类似，获取外部信息，处理当前信息，将处理结果暂存，接下来再获取新的信息重复这个过程。为了完成这个过程，图灵设计的机器有用于输入信息的纸带，处理信息的状态规则，暂存结果的状态寄存器，以及用于获取信息和存储信息的读写器。图灵机的工作过程为：</p><ul><li>从纸带上读取信息</li><li>通过状态规则查找状态并按规则执行</li><li>状态寄存器存储结果</li><li>进入新状态</li><li>重复过程</li></ul><p>现代计算机的设计和实现受到了图灵机的启发。计算机的核心部件包括中央处理器（CPU）、存储器、输入输出设备等，这些部件的设计和实现都是基于图灵机的模型。例如，CPU 可以看作是图灵机的控制器，存储器可以看作是图灵机的纸带，输入输出设备可以看作是图灵机的输入输出接口。</p><p>另外，现代计算机的编程语言和算法也受到了图灵机的影响。图灵机可以模拟任何可计算的问题，因此它可以用来证明某个问题是可计算的，也可以用来设计算法和编写程序。现代计算机的编程语言和算法都是基于图灵机的模型，它们可以用来描述和解决各种计算问题。</p><p>总的来说现代计算机实现了图灵对计算机的设想，也深入到了我们每个人的生活。一些本来机器解决不了而人类可以解决的问题，机器也可以通过大量数据学习人类来解决。</p><p>接下来，我先简单介绍下计算机最核心的计算处理控制器发展，是怎么从图灵时代的继电器发展到现代 CPU 的。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/07.png" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/07.png"></p><p>图灵所在二战时代最大的计算机叫哈佛一号，由哈佛大学和 IBM 公司合作研制，有76万5千个组件，300万个连接点和500英里长的导线。哈佛一号采用电子管和机械继电器作为计算元件，可以进行加、减、乘、除等基本运算，还可以进行对数、三角函数等高级运算。继电器是用电控制机械开关。可以把继电器控制线路想成水龙头，打开水龙头，水会流出来，关闭水龙头，水就没了。只不过继电器控制的是电子而不是水。机械开关速度有限，最好的继电器1秒翻转50次。</p><p>哈佛一号的体积庞大，重达 5 吨，占地面积达 51 平方米，需要 3 个人来操作。哈佛一号的设计和实现受到了图灵机的启发，它采用了分程序控制和存储程序的思想，可以根据不同的程序进行自动切换。哈佛一号的设计者之一霍华德·艾肯曾说过：“我们试图建造一台机器，它可以像人一样思考，但是我们失败了。相反，我们建造了一台机器，它可以像机器一样思考。”</p><p>哈佛一号的研制历时 11 年，耗资 500 万美元，是当时世界上最先进的计算机之一。</p><p>哈佛马克一号一秒3次加减，6秒乘法，15秒除法。更复杂操作比如三角函数需要1分钟以上。除了速度慢，齿轮也容易磨损，继电器数量多故障率也会增加，哈佛马克一号有3500个继电器。昆虫也会造成继电器故障，1947年9月操作员从故障继电器中拔出一只死虫，那时每当电脑出了问题，就说它出了 bug。这个就是术语 bug 的来源。</p><p>继电器的替代品是真空管。真空管是一种电子器件，它的工作原理基于热电子发射和电子在真空中的运动。真空管由阴极、阳极和控制网格等部件组成，其中阴极是一个加热的金属丝，当温度升高时，会发射出大量的自由电子。这些电子被加速器电场加速，穿过控制网格，最终撞击到阳极上，产生电流。真空管内通过电流控制开闭实现继电器功能，由于真空管内没有会动的组件，这样速度更快，磨损更少，每秒可以开闭数千次。</p><p>真空管的工作过程可以分为三个阶段：发射阶段、传输阶段和收集阶段。在发射阶段，阴极发射出大量的自由电子，这些电子被加速器电场加速，形成电子流。在传输阶段，电子流穿过控制网格，受到网格电场的控制，形成一个电子束。在收集阶段，电子束撞击到阳极上，产生电流。</p><p>真空管的工作原理与晶体管等现代电子器件不同，它需要加热阴极才能发射电子，因此功耗较大，体积较大，寿命较短。但是真空管具有高功率、高频率、高压等特点，在一些特殊的应用场合仍然得到广泛应用。</p><p>真空管很贵，收音机一般只用一个，但计算机可能要上百甚至上千个。一般只有政府才会使用真空管做计算机。第一个大规模用真空管做的计算机是巨人一号，由工程师 Tommy Flower 设计，1943年12月完成。巨人一号在英国的布莱切利园里，用来破解日本的通信。巨人一号是基于图灵机的原理设计的，它采用了存储程序的思想，可以自动执行多个程序。同在布莱切利园的图灵的 bombe 机器没有使用真空管，而是使用的机械装置。核心部件是旋转轮机，它通过模拟密码机的运行过程来破解密码。Bombe 机器的工作原理与真空管电子计算机不同，它不需要电子元件，而是通过机械装置来实现计算和控制。巨人一号和图灵的 bombe 机器在破解密码的方式上也存在一些区别。巨人一号主要使用了穷举法和字典攻击等方法，而图灵的 bombe 则主要使用了差分密码分析等方法。</p><p>计算机硬件技术真正实现突破沿用至今的时刻发生在1947年，当年为了降低计算机成本和大小，同时提高可靠性和速度，1947年贝尔实验室科学家 John Bardeen，Walter Brattain，William Shockley 发明了晶体管。晶体管由三个掺杂不同材料的半导体层构成，其中中间的层被称为基底，两侧的层被称为掺杂层。当掺杂层中注入电子或空穴时，它们会在基底中形成一个电子或空穴浓度较高的区域，这个区域被称为 PN 结。PN 结可以用来控制电流的流动，从而实现放大和开关电信号的功能。晶体管的发明是电子技术史上的重要里程碑，它的出现标志着电子器件从真空管时代进入了半导体时代。</p><p>晶体管的物理学相当复杂，牵扯到量子力学。晶体管有两个电极，电极之间有一种材料隔开他们，这种材料有时候导电，有时候不导电，叫半导体。半导体每秒可以开关10000次，与玻璃制作的真空管相比，晶体管是固态的，不容易坏，而且比真空管更小更便宜。</p><p>1957年 IBM 推出完全用晶体管的 IBM 608，由于便宜，消费者也可以买得到。它有3000个晶体管，每秒执行4500次加法，80次乘除法。IBM 将晶体管计算机带入千家万户。现在计算机里的晶体管小于50纳米，而一张纸的厚度大概是10万纳米。每秒可以切换上百万次，工作很多年。</p><p>晶体管和半导体的开发在圣克拉拉谷，半导体材料大部分是硅，硅很特别，它是半导体，它有时导电，有时不导电，我们可以控制导电时机，所以硅是做晶体管的绝佳材料。硅的蕴藏量丰富，占地壳四分之一，这个地方后来被称为硅谷。</p><p>1960年代，为了解决电子器件体积大、功耗高、可靠性差等问题。在德州仪器工作的 Jack Killby 把多个组件包在一起，变成一个新的独立组件，这个组件就是集成电路。Robert Noyce 的仙童半导体让集成电路变为现实。最开始一个 IC 只有几个晶体管，把简单电路，逻辑门封装成单独组件。</p><p>在集成电路中，数百万个晶体管、电容器、电阻器等元件被集成在一个芯片上，从而大大减小了电路的体积和功耗，提高了电路的可靠性和性能。</p><p>在集成电路出现之前，电子器件主要采用离散元件的方式进行组装。这种方式需要大量的电子元件，而且需要手工进行组装和连接，不仅体积大、功耗高，而且可靠性差。随着半导体技术的发展，人们开始尝试将多个晶体管、电容器、电阻器等元件集成在一个芯片上，从而形成了集成电路。</p><p>集成电路的出现极大地推动了电子技术的发展。它不仅使电子器件的体积和功耗大大减小，而且提高了电路的可靠性和性能。随着集成电路技术的不断发展，芯片上的晶体管数量不断增加，集成度不断提高。</p><p>为了创造更复杂的电路并能够大规模生产，出现了通过蚀刻金属线的方式，把零件连接到一起的印刷电路板技术，简称 PCB。是一种用于连接和支持电子元件的基板，它通过在表面覆盖一层导电材料（通常是铜）并在其上刻蚀出电路图案，从而实现电路的连接和布局。印刷电路板广泛应用于电子设备中，例如计算机、手机、电视等。</p><p>印刷电路板的制作过程通常包括以下几个步骤：</p><ul><li>设计电路图：首先需要根据电路的功能和布局设计电路图，通常使用电路设计软件进行设计。</li><li>制作印刷电路板：将电路图转换为印刷电路板的图案，并使用光刻技术将图案转移到覆盖在基板上的光阻膜上。然后，使用化学蚀刻技术将未被光阻膜保护的铜层蚀刻掉，从而形成电路图案。</li><li>镀金层：在印刷电路板表面镀上一层金属，通常是镀金，以提高电路板的导电性和耐腐蚀性。</li><li>焊接元件：将电子元件焊接到印刷电路板上，通常使用表面贴装技术（Surface Mount Technology，SMT）或插件式技术（Through-Hole Technology，THT）。</li><li>测试电路板：使用测试设备对印刷电路板进行测试，以确保电路板的功能和性能符合要求。</li></ul><p>为了在相同体积下集成更多晶体管，全新的光刻工艺出现了，用光把复杂图案印到材料上，比如半导体。其基本原理是利用光敏材料对光的敏感性，通过光的照射和化学反应来形成所需的图案。光刻使用材料包括光掩膜，光刻胶，金属化，氧化层和晶圆。我们可以用晶圆做基础，把复杂金属电路放上面，集成所有东西，非常适合做集成电路。</p><p>光刻的基本步骤包括：</p><ul><li>涂覆光刻胶：将光刻胶涂覆在待加工的基板表面上，形成一层均匀的薄膜。</li><li>曝光：将光刻胶暴露在紫外线下，通过掩膜将光刻胶暴露在特定的区域，形成所需的图案。</li><li>显影：将光刻胶进行显影，将未暴露在紫外线下的光刻胶溶解掉，形成所需的图案。</li><li>退光刻胶：使用退光刻胶剂将光刻胶进行退除，以便进行下一步的工艺步骤。</li></ul><p>在曝光过程中，光刻胶中的光敏剂会吸收光子能量，从而发生化学反应，使得光刻胶在曝光区域发生物理或化学变化。在显影过程中，未曝光的光刻胶会被溶解掉，而曝光区域的光刻胶则会保留下来，形成所需的图案。在退光刻胶过程中，使用退光刻胶剂将光刻胶进行退除，以便进行下一步的工艺步骤。</p><p>用类似制作步骤，光刻可以制作其他电子元件，比如电阻和电容，都在一片硅上。而且互相连接的电路也做好了。现实中，光刻法一次会做上百万个细节。</p><p>有了光刻技术晶体管越来越小，密度也变得更高，戈登·摩尔发现了一个趋势，就是每两年相同空间所放晶体管数量会增加两倍，后来这个规律被称为摩尔定律。戈登·摩尔和罗伯特·诺伊斯联手成立了一家新公司，结合 Intergrated 和 Electronics 两个词，取名 Intel，是现在最大的芯片制造商。CPU 晶体管数量按摩尔定律一直在指数级地增长，1980年，一个芯片有3万晶体管。到1990年达到了100万，2010年一个芯片里已经可以放进10亿晶体管，现在苹果 M1 Ultra 的晶体管数量约为1140亿。英特尔说，到2030年，芯片将拥有约1万亿个晶体管。先进的芯片中晶体管的尺寸是以纳米为单位，小到2纳米，比血红细胞小2800倍。除了 CPU 还有内存，显卡，固态硬盘和摄像头感光元件等都得益于光刻带来的摩尔定律发展。现在的电路设计都是超大规模集成（VLSI）自动生成的设计。</p><p>目前由于光的波长精度已经接近极限，因此需要波长更短的光源来投射更小图案。另外晶体管小到一定程度电极之间可能只有原子长，会发生量子隧道贯穿，也就是电子会跳过间隙。不过相信只要有需求，这些技术问题终将被克服。</p><p>那么究竟都有什么样的需求一直推动着计算机技术爆发增长呢？</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/08.png" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/08.png"></p><p>最早计算机的用途主要就是做数学计算，比如二战的炮手，需要根据射程和大气压力来计算近似多项式，多项式可以描述几个变量的关系，这些函数手算很麻烦耗时。Charles Babbage 提出一种新型机械装置叫差分机将欲求多项方程的前3个初始值输入到机器，推论出固定不变的差数，接下来每个值就可以将差数和前一个阶段的值相加得到。求多项方程的结果完全只需要用到加和减。</p><p>在19世纪末，美国人口10年一次普查，然而手工编制需要七年时间，编制完成已经过时了，1890年人口激增，手工编制普查数据需要13年之久。Herman Hollerith 发明了打孔卡片制表机，机器是电动机械的，用传统机械计数，用电动结构连接其他组件。用打孔来表示数据，每个孔代表一个二进制数码，机器会读取孔的位置将其转成数字，打孔卡片制表机的工作方式如下：</p><ul><li>使用打孔机将有关个人的数据记录在打孔卡片上。在卡片上打孔，代表一个人的姓名、年龄、职业等信息。</li><li>打好的卡片被送入Hollerith的制表机。该机器有金属刷子，可以从卡片上的孔中穿过。</li><li>当刷子经过一个开孔时，一个电路就会完成，一个计数器就会递增。计数器记录着有多少张牌具有某些特征。</li><li>计数器还可以使用连接在机器上的打印机将结果打印在纸上。它将根据计数器的计数来打印数据的摘要。</li></ul><p>与手工操作相比，Hollerith的系统加快了数据的统计过程，速度是手动的十倍。美国人口普查局在1890年采用了他的打孔卡系统，使他们能够在两年半内完成人口普查数据处理。</p><p>Herman Hollerith 后来成立了制表机器公司，服务于会计、保险评估和库存管理等数据密集行业。后来这家公司和其他公司合并后改名国际商业机器公司，简称 IBM。</p><p>二战时期及二战后冷战时期各国对计算机的需求达到了鼎盛，比如我前面提到图灵他们做的破译 Enigma 的机器。政府对计算机投入资源的时期是美国和苏联的冷战，这也得益于二战时计算机在曼哈顿计划和破解德军加密对自身价值的证明。其中阿波罗计划是投入经费最多的项目，雇了40多万人，还有2万多家大学和公司参与了其中。复杂轨道的计算需求是最大的，因此 NASA制造了阿波罗导航计算机，这台计算机首先使用了集成电路，当时首先使用了集成电路的价格是很贵的，一个芯片就需要五十多美元，而阿波罗导航计算机需要上千个这样的芯片。另外军事上，洲际导弹和核弹也促进了集成电路规模化生产。</p><p>随着冷战的结束，政府在计算机上的投入也逐渐减少，计算机迎来了家用消费级时代。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/09.png" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/09.png"></p><p>70年代初，计算机各个组件的成本都有大幅下降，可以做出低成本适用于个人使用的电脑，第一台取得商业成功的个人计算机是 Altair 8800，很多计算机爱好者都会购买，计算机的程序要用机器码编写，由于编写麻烦，比尔·盖茨编写了 BASIC 解释器，可以将 BASIC 代码转换成可执行机器码，这个解释器叫 Altair BASIC，也是微软的第一个产品。</p><p>24岁的 Steve Wozniak 受到 Altair 8800 的启发，做了一台自己的计算机，他的同学 Steve Jobs 看中了其中机会，1976年4月1日创立了苹果计算机公司，1976年7月开始将 Steve Wozniak 设计的计算机进行售卖，这也是苹果计算机公司的第一款产品。后来苹果的 Apple-II 卖了上百万套，苹果公司一战成名。</p><p>和苹果的封闭架构不同的是 IBM 发布的 IBM PC，IBM PC 采用的是开放式架构，这样每个公司都可以遵循这个标准做出自己的计算机，核心硬件和外设都可以有不同组合，这样的计算机也称为 IBM 兼容计算机。</p><p>开放的架构也繁荣了生态，更多公司比如康柏和戴尔加入了个人计算机领域。</p><p>让计算机进入更多普通人家庭的是交互上的革命。</p><p>1984年苹果发布了 Macintosh，使用图形界面取代了用命令行交互的终端。</p><p>更多用户对计算机的使用也带来视觉和听觉感官的诉求。那么图形和声音是怎么让计算机识别处理和保存的呢？</p><p>当一个图像以特定的格式保存时，构成图像的数字数据–像素和它们的颜色值–被编码并根据该格式的规范进行压缩。该文件还包含元数据，如图像大小、分辨率和色彩模式。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/10.png" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/10.png"></p><p>图像文件格式决定了数字数据的组织和压缩方式，图像文件格式的主要类型有：</p><ul><li>JPEG：一种 “有损 “的压缩格式，通常用于照片。它压缩图像数据以减少文件大小，导致图像质量的一些损失。</li><li>PNG：一种 “无损 “的压缩格式，适用于带有文字、线条和图形的图像。用这种格式保存时，没有图像质量的损失。</li><li>GIF： 一种适用于颜色数量有限的图像的格式，通常用于网络上的简单图形和动画。</li><li>BMP: 一种未压缩的格式，存储图像的精确像素数据。BMP文件的尺寸往往很大。</li></ul><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/11.png" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/11.png"></p><p>数字音频文件是由代表音频波形的二进制数据组成。文件格式规定了这种二进制数据的结构和组织方式，以表示音频样本、比特深度、采样率、通道数量和其他元数据。像媒体播放器这样的计算机程序可以读取文件格式并解码二进制数据以播放音频。</p><p>常见的音频文件格式包括：</p><ul><li>WAV：一种标准的未压缩的音频格式，由原始样本组成。WAV文件往往尺寸较大，但具有较高的音频质量。</li><li>MP3: 一种压缩的音频格式，使用有损压缩来减少文件大小。MP3文件较小，但与WAV相比，其音频质量略低。</li><li>AAC: 另一种压缩的音频格式，提供良好的压缩率，同时保持相对较高的音频质量。AAC文件通常用于iPod等设备。</li><li>FLAC: 一种无损压缩的音频格式，在保留所有原始音频信息和质量的同时压缩文件以减小尺寸。</li></ul><p>如今，计算机已经可以大致模拟出我们所能感受到的东西，而图灵对计算机的构想也正随着硬件高速发展而逐步被实现，并走进每一个人的生活。关于图灵证明的计算机的极限，计算机已通过学习大量数据来模仿人类进行突破，学会根据情况忽略一些悖论来避免宕机。和计算机不同，我们的生命有限，记忆的容量有限，但也正因为如此，我们才能更好地享受和珍惜每一次对未知事物探索过程的回忆，而不是结果。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/12.jpg" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/12.jpg"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/13.jpg" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/13.jpg"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/sharing-cs-in-elementary-school/14.jpg" class="lozad post-image"src="/uploads/sharing-cs-in-elementary-school/14.jpg"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;柠檬所在的学校举办了一个家长讲堂活动，家长们做了很多有意思的分享，柠檬也希望我能够去讲讲，因此我也专门准备了一些内容。下面是我在家长讲堂上所分享的内容。&lt;/p&gt;
&lt;p&gt;分享的标题是《图灵对计算机的设想》，那么图灵是什么人？&lt;/p&gt;
&lt;p&gt;&lt;img  srcset=&quot;data
      
    
    </summary>
    
      <category term="Programming" scheme="https://starming.com/categories/Programming/"/>
    
    
      <category term="Computer" scheme="https://starming.com/tags/Computer/"/>
    
  </entry>
  
  <entry>
    <title>使用 SwiftUI 开发 RSS 阅读器</title>
    <link href="https://starming.com/2023/04/24/swiftui-rss-reader/"/>
    <id>https://starming.com/2023/04/24/swiftui-rss-reader/</id>
    <published>2023-04-24T07:51:34.000Z</published>
    <updated>2023-06-09T13:46:39.494Z</updated>
    
    <content type="html"><![CDATA[<p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/01.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/01.png"></p><p>在 Apple 加速器活动和字节内分享了使用 SwiftUI 做 RSS 阅读器的一点心得。可能你还不知道什么是 RSS 阅读器，简单来说 RSS 是一些博客和新闻网站，甚至是播客和视频平台发布他们的内容更新的一种 XML 格式，阅读器就是通过请求这个 XML 以获取他们内容更新的客户端。</p><p>这就有了接下来几个问题：<br><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/02.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/02.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/03.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/03.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/04.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/04.png"></p><p>目前已有 Reeder 和 NetNewsWire 等 RSS 阅读器，那么为什么还要再开发一个呢，早在14年我曾做过一个，陆续也更新过，后来还是以 Reeder 作为主力，feedly 作为服务，后来 feedly 有些不稳定，我又改成本地获取 feed 的方式，但是改成本地模式后设备同步又成了问题。正好最近几年苹果在界面、数据流和存储上都做了很大的功能加强。于是我打算将以前 objc、rac和 FMDB 替换成 SwiftUI 和 CoreData 技术，同时补上以前缺少的一些功能，比如添加管理feed，不同设备同步订阅 feed、文章已读状态和收藏信息等功能。</p><p>先说下怎么订阅 RSS。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/05.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/05.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/06.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/06.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/07.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/07.png"></p><p>如上图所示先通过链接获取待解析的数据，以及 mimeType，通过 mimeType 看里面是否包含如下描述：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift">application<span class="token operator">/</span>atom<span class="token operator">+</span>xmlapplication<span class="token operator">/</span>rss<span class="token operator">+</span>xmlapplication<span class="token operator">/</span>jsonapplication<span class="token operator">/</span>feed<span class="token operator">+</span>jsontext<span class="token operator">/</span>xmlapplication<span class="token operator">/</span>xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>包含的话就可以判断是 RSS。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/08.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/08.png"></p><p>如果不是的话就需要手动从网页里获取 RSS 的链接，方法如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift">mime<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"text/html"</span></span><span class="token punctuation">)</span><span class="token class-name">SwiftSoup</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>homepageHTML<span class="token punctuation">)</span>htmlDom<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"link[rel=alternate]"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中 SwiftSoup 是一个专门用来将 HTML 解析成 DOM 对象的库。一般 RSS 的链接会在属性键值是 rel 和 alternate 的 Link 这个标签里。但是很多网站并没有遵循这个规范，那么就需要在链接后直接通过添加以下文件名来查找哪个是它的 RSS 链接：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"feed.xml"</span></span><span class="token punctuation">,</span><span class="token string-literal"><span class="token string">"rss.xml"</span></span><span class="token punctuation">,</span><span class="token string-literal"><span class="token string">"atom.xml"</span></span><span class="token punctuation">,</span><span class="token string-literal"><span class="token string">"feed"</span></span><span class="token punctuation">,</span><span class="token string-literal"><span class="token string">"feed.rss"</span></span><span class="token punctuation">,</span><span class="token string-literal"><span class="token string">"rss"</span></span><span class="token punctuation">,</span><span class="token string-literal"><span class="token string">"index.xml"</span></span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>找到了 RSS 的链接就可以获取到它的数据，接下来就是对数据的处理，根据 RSS 的规范，RSS 的数据主要是以下三种。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/09.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/09.png"></p><p>对应的结构体如下：</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/10.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/10.png"></p><p>RSS 的图标的获取方式有两种</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/11.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/11.png"></p><p>对处理好的数据需要进行本地的存储，目前不管是 Apple 还是三方库主要都是基于 SQLite 的封装。估计是因为 SQLite 开销小，支持大多数 SQL 92 标准语法，采用标准的 ANSI-C 代码，很容易在多个平台运行，同时 SQLite 还支持所有 SQL 用来保障数据安全和完整性的事务属性，比如原子性、一致性、隔离性和持久性。以下是 iOS 上一些主要基于 SQLite 封装库：</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/12.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/12.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/13.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/13.png"></p><p>我选择的是 Core Data，首先是 Core Data 的 API 很强，将复杂数据建模和操作的 SQL 语句都做成了可视化和对象模式操作。多个数据对象之间的关联关系也做了很多自动处理。Core Data 还使用了惰性加载的方式，只有在需要时才从存储区域获取数据，以节省内存，提高执行效率。</p><p>Core Data 的使用需要对数据库进行设置。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/14.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/14.png"></p><p>在读取实体存储时可以设置 Core Spotlight 以及进行一些调试测试工作。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/16.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/16.png"></p><p>Core Data 对数据的增删改和检索操作都是在 NSManagerObjectContext 中完成的。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/17.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/17.png"></p><p>如果要支持 CloudKit，NSManagerObjectContext 初始化时需要在合并策略做一些设置。context 的数据操作都是基于对象操作的方式，比如增加一个 feed 就是在 context 中创建一个 feed 的对象，然后对其字段对应的属性进行设置即可。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/18.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/18.png"></p><p>删除就是用 context 的 delete 方法将对要删除数据对应的对象进行删除即可。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/19.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/19.png"></p><p>修改就是对读取的对象进行设置。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/20.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/20.png"></p><p>检索有两种方式，一种是创建一个 Controller，使用 lazy 来修饰检索检索结果，惰性加载以节省内存。数据变化会在 NSFetchedResultsController 代理里进行回调，在回调里可以更新 @Published 属性包装的属性以及时同步展示更新的数据。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/21.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/21.png"></p><p>另一种检索方式是使用 @FetchRequest 属性包装，写法更加简洁。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/22.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/22.png"></p><p>下面是 RSS 数据操作对应的代码。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/23.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/23.png"></p><p>添加 Feed 的代码</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> newFeed <span class="token operator">=</span> <span class="token class-name">WebFeedMO</span><span class="token punctuation">(</span>context<span class="token punctuation">:</span> stack<span class="token punctuation">.</span>context<span class="token punctuation">)</span>newFeed<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>newFeed<span class="token punctuation">.</span>createAt <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>nownewFeed<span class="token punctuation">.</span>homePageURL <span class="token operator">=</span> inputURLstack<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">await</span> <span class="token function">handleAFeed</span><span class="token punctuation">(</span>webFeed<span class="token punctuation">:</span> newFeed<span class="token punctuation">)</span> <span class="token comment">// 文章</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>删除 Feed</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">for</span> a <span class="token keyword">in</span> webFeed<span class="token punctuation">.</span>allElements <span class="token punctuation">&#123;</span>    stack<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">&#125;</span>stack<span class="token punctuation">.</span><span class="token function">deleteWebFeed</span><span class="token punctuation">(</span>webFeed<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>检索 Feed 列表</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> fetch <span class="token operator">=</span> <span class="token class-name">WebFeedMO</span><span class="token punctuation">.</span><span class="token function">fetchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">let</span> sortDescriptorUnreadCount <span class="token operator">=</span> <span class="token class-name">NSSortDescriptor</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"unreadCount"</span></span><span class="token punctuation">,</span> ascending<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token keyword">let</span> sortDescriptorCreateAt <span class="token operator">=</span> <span class="token class-name">NSSortDescriptor</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"createAt"</span></span><span class="token punctuation">,</span> ascending<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>fetch<span class="token punctuation">.</span>sortDescriptors <span class="token operator">=</span> <span class="token punctuation">[</span>sortDescriptorUnreadCount<span class="token punctuation">,</span> sortDescriptorCreateAt<span class="token punctuation">]</span><span class="token keyword">let</span> controller <span class="token operator">=</span> <span class="token class-name">NSFetchedResultsController</span><span class="token punctuation">(</span>fetchRequest<span class="token punctuation">:</span> fetch<span class="token punctuation">,</span> managedObjectContext<span class="token punctuation">:</span> stack<span class="token punctuation">.</span>context<span class="token punctuation">,</span> sectionNameKeyPath<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> cacheName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"webFeeds"</span></span><span class="token punctuation">)</span>controller<span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token keyword">self</span><span class="token keyword">try</span><span class="token operator">?</span> controller<span class="token punctuation">.</span><span class="token function">performFetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/24.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/24.png"></p><p>Feed 里文章的列表检索</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> fetch <span class="token operator">=</span> <span class="token class-name">ArticleMO</span><span class="token punctuation">.</span><span class="token function">fetchRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">let</span> sortDescriptor <span class="token operator">=</span> <span class="token class-name">NSSortDescriptor</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"datePublished"</span></span><span class="token punctuation">,</span> ascending<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>fetch<span class="token punctuation">.</span>sortDescriptors <span class="token operator">=</span> <span class="token punctuation">[</span>sortDescriptor<span class="token punctuation">]</span><span class="token keyword">let</span> controller <span class="token operator">=</span> <span class="token class-name">NSFetchedResultsController</span><span class="token punctuation">(</span>fetchRequest<span class="token punctuation">:</span> fetch<span class="token punctuation">,</span> managedObjectContext<span class="token punctuation">:</span> stack<span class="token punctuation">.</span>context<span class="token punctuation">,</span> sectionNameKeyPath<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> cacheName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"newArticles"</span></span><span class="token punctuation">)</span>controller<span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token keyword">self</span><span class="token keyword">try</span><span class="token operator">?</span> controller<span class="token punctuation">.</span><span class="token function">performFetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>标记已读</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Published</span> <span class="token keyword">var</span> selectedArticle<span class="token punctuation">:</span> <span class="token class-name">ArticleMO</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">willSet</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        newValue<span class="token operator">?</span><span class="token punctuation">.</span>read <span class="token operator">=</span> <span class="token boolean">true</span>        selectedWebFeed<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">countUnreadArticles</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>全部标记已读</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> countElement <span class="token operator">=</span> selectedWebFeed<span class="token operator">?</span><span class="token punctuation">.</span>allElements<span class="token punctuation">.</span>count <span class="token operator">??</span> <span class="token number">0</span><span class="token keyword">var</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> a <span class="token keyword">in</span> selectedWebFeed<span class="token operator">?</span><span class="token punctuation">.</span>allElements <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>    index <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">if</span> a<span class="token punctuation">.</span>read <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token punctuation">&#123;</span>        a<span class="token punctuation">.</span>read <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> countElement <span class="token operator">></span> <span class="token number">1000</span> <span class="token operator">&amp;&amp;</span> index <span class="token operator">></span> <span class="token number">1000</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>favourite <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token punctuation">&#123;</span>        stack<span class="token punctuation">.</span>context<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 最后重置未读总数</span>selectedWebFeed<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">countUnreadArticles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/25.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/25.png"></p><p>收藏状态的切换直接对布尔属性 favourite 执行 toggle 方法。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift">selectedArticle<span class="token operator">?</span><span class="token punctuation">.</span>favourite<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>selectedArticle<span class="token operator">?</span><span class="token punctuation">.</span>dateModified <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>now<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>工具栏中的分享功能可以直接使用 SwiftUI 内置的 ShareLink 视图。Item 的 placement 对于不同平台的位置会有不同。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>    <span class="token class-name">ToolbarItemGroup</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>primaryAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Menu</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"拷贝链接"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"doc.on.doc"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">ShareLink</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"分享"</span></span><span class="token punctuation">,</span> item<span class="token punctuation">:</span> link<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"square.and.arrow.up"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token class-name">ToolbarItemGroup</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>automatic<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"收藏"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"star"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"浏览器"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"safari"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token comment">// end toolbar</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于网站提供的 RSS 是静态的，因此每次获取数据时需要进行和本地存储的数据进行比对去重。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/26.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/26.png"></p><p>Core Data 提供了一种通过简单配置约束就可以去重的方法。具体方法如上图所示。</p><p>但是如果要支持 iCloud 就没法使用唯一约束这个功能。因此只能回到老办法，手动比对。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/27.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/27.png"></p><p>为了提升大量数据添加的效率，可以使用 NSBatchInsertRequest。正常情况下，在使用 Core Data 进行大量数据插入时，应用程序需要为每个插入操作都创建上下文和执行请求。这样会导致上下文过度膨胀和查询操作的重复，并且会对内存和 CPU 带来负担。而 NSBatchInsertRequest 则能够通过批量插入的方式一次性将多条数据插入到 Core Data 中，并且执行速度要比逐条插入要快得多。NSBatchInsertRequest 实际上是在底层利用 SQLite 数据库的 INSERT INTO 语法来执行批量插入操作。这种方式通过一次性将数据提交给 SQLite，可以减少插入操作所需的检查、协调和锁定操作，从而提高插入操作的效率和性能。当使用 NSBatchInsertRequest 执行批量插入时，Core Data 会首先创建一个临时表，然后将待插入的数据全部插入到该临时表中。接着，Core Data 会使用关联操作将临时表中的数据一次性插入到实际的数据库表中，从而进一步提高了数据插入的效率。NSBatchInsertRequest 还提供了一些可用的参数设置选项，开发者可以根据具体的需求进行灵活配置。例如，通过设置 batchSize 参数，可以控制批量插入时每个批次所包含的最大行数，以避免内存的过度消耗；通过设置 propertiesToUpdate 参数，可以在批量插入后更新指定的属性值，从而避免对整个对象进行额外的查询和更新操作。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/28.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/28.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/29.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/29.png"></p><p>Core Data 里的数据可以通过 iCloud 实现多设备的同步，比如我在 macOS 上订阅、阅读和收藏的信息能够无缝切换到手机和 iPad 上。未来支持 iCloud 可以进行如下的设置：</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/30.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/30.png"></p><p>支持 iCloud 也会有一些限制，对于我目前来说最大限制就是不支持唯一约束，另外数据表结构更改后老版本的兼容也是需要注意的，这是由于 iCloud 是云端数据统一传输，并不会兼容多版本。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/31.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/31.png"></p><p>通过以下方法可以让兼容合并更安全。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/32.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/32.png"></p><p>应用支持 iCloud 后会有 cloudd 这个后台进程对 iCloud 服务的同步和管理，定期检查 iCloud 上数据是否需要同步到本地设备，或者本地数据是否需要传到 iCloud。 apsd 进程会将数据的更新以通知的方式推送到其他设备，dasd 进程会对 iCloud 的数据进行处理然后交给应用进程。对这个流程的调试就是基于上面提到的这四个进程进行日志记录。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/33.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/33.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/34.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/34.png"></p><p>另外 Core Data 还支持一些调试参数，除了 iCloud 还可以支持多线程、SQL、合并等信息的日志打印。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/35.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/35.png"></p><p>为了节省 iCloud 空间大小，对于文章内容这样数据量大的数据就不用支持 iCloud 了，方法是如下：</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/36.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/36.png"></p><p>另外，Core Data 里的数据还能够很容易的支持 spotlight 索引，方便在应用外能够被检索。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/37.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/37.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/38.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/38.png"></p><p>界面使用的是 NavigationSplitView。代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">HomeThreeColumnView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@EnvironmentObject</span> <span class="token keyword">var</span> webFeedController<span class="token punctuation">:</span> <span class="token class-name">WebFeedController</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationSplitView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">SidebarView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 左侧频道列表</span>        <span class="token punctuation">&#125;</span> content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">AWebFeedArticlesView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 文章列表</span>        <span class="token punctuation">&#125;</span> detail<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ArticleWebView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 文章内容</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>NavigationSplitView 可以同时显示主视图和辅助视图。实现了 iOS 系统中常见的 iPad 多窗口布局模式，允许用户同时操作两个视图，提高了应用程序的多任务处理能力和用户体验。NavigationSplitView 提供了一组简洁易用的 API，开发者可以通过少量的代码实现大部分常见的多窗口布局需求。例如，只需要设置主视图和辅助视图的内容即可快速创建一个 NavigationSplitView，而无需手动管理视图控制器的层次结构。NavigationSplitView 还支持自定义视图拆分行为、边缘滑动手势等功能。</p><p>数据处理，包括 Core Data 的初始化配置和增删改和检索等我都放在了 Controller 里，Controller 的关键代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">WebFeedController</span><span class="token punctuation">:</span> <span class="token class-name">NSObject</span> <span class="token punctuation">,</span><span class="token class-name">ObservableObject</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Published</span> <span class="token keyword">var</span> selectedWebFeed<span class="token punctuation">:</span> <span class="token class-name">WebFeedMO</span><span class="token operator">?</span>    <span class="token attribute atrule">@Published</span> <span class="token keyword">var</span> selectedArticle<span class="token punctuation">:</span> <span class="token class-name">ArticleMO</span><span class="token operator">?</span>        <span class="token attribute atrule">@Published</span> <span class="token keyword">private</span><span class="token punctuation">(</span><span class="token keyword">set</span><span class="token punctuation">)</span> <span class="token keyword">var</span> webFeeds<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">WebFeedMO</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token attribute atrule">@Published</span> <span class="token keyword">private</span><span class="token punctuation">(</span><span class="token keyword">set</span><span class="token punctuation">)</span> <span class="token keyword">var</span> newArticles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">ArticleMO</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 最新文章</span>    <span class="token attribute atrule">@Published</span> <span class="token keyword">private</span><span class="token punctuation">(</span><span class="token keyword">set</span><span class="token punctuation">)</span> <span class="token keyword">var</span> favoriteArticles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">ArticleMO</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 收藏的文章</span>    <span class="token keyword">var</span> stack<span class="token punctuation">:</span> <span class="token class-name">NRCDStack</span>        <span class="token keyword">init</span><span class="token punctuation">(</span>stack<span class="token punctuation">:</span> <span class="token class-name">NRCDStack</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token operator">...</span>        webFeeds <span class="token operator">=</span> fetchedResults<span class="token punctuation">.</span>fetchedObjects <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        newArticles <span class="token operator">=</span> fetchedNewArticlesResults<span class="token punctuation">.</span>fetchedObjects <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        favoriteArticles <span class="token operator">=</span> fetchFavoriteArticlesResults<span class="token punctuation">.</span>fetchedObjects <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 获取所有 feed 源</span>    <span class="token keyword">lazy</span> <span class="token keyword">var</span> fetchedResults<span class="token punctuation">:</span> <span class="token class-name">NSFetchedResultsController</span><span class="token operator">&lt;</span><span class="token class-name">WebFeedMO</span><span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 获取最新 article</span>    <span class="token keyword">lazy</span> <span class="token keyword">var</span> fetchedNewArticlesResults<span class="token punctuation">:</span> <span class="token class-name">NSFetchedResultsController</span><span class="token operator">&lt;</span><span class="token class-name">ArticleMO</span><span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 获取收集 article</span>    <span class="token keyword">lazy</span> <span class="token keyword">var</span> fetchFavoriteArticlesResults<span class="token punctuation">:</span> <span class="token class-name">NSFetchedResultsController</span><span class="token operator">&lt;</span><span class="token class-name">ArticleMO</span><span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - NSFetchedResultsControllerDelegate</span><span class="token comment">// 跟踪变化，在回调中处理。</span><span class="token keyword">extension</span> <span class="token class-name">WebFeedController</span><span class="token punctuation">:</span> <span class="token class-name">NSFetchedResultsControllerDelegate</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">controllerDidChangeContent</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> controller<span class="token punctuation">:</span> <span class="token class-name">NSFetchedResultsController</span><span class="token operator">&lt;</span><span class="token class-name">NSFetchRequestResult</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        webFeeds <span class="token operator">=</span> fetchedResults<span class="token punctuation">.</span>fetchedObjects <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        newArticles <span class="token operator">=</span> fetchedNewArticlesResults<span class="token punctuation">.</span>fetchedObjects <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        favoriteArticles <span class="token operator">=</span> fetchFavoriteArticlesResults<span class="token punctuation">.</span>fetchedObjects <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 数据 CRUD 操作</span><span class="token keyword">extension</span> <span class="token class-name">WebFeedController</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 更新全部 Feed</span>    <span class="token keyword">func</span> <span class="token function-definition function">updateAllFeeds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span>        <span class="token comment">// MARK: - Feed 的操作</span>    <span class="token comment">// 添加 Feed</span>    <span class="token attribute atrule">@discardableResult</span>    <span class="token keyword">func</span> <span class="token function-definition function">createFeed</span><span class="token punctuation">(</span>inputURL<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> nameForDisplay<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">WebFeedMO</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span>    <span class="token comment">// 删除操作，删掉一个 Feed</span>    <span class="token keyword">func</span> <span class="token function-definition function">deleteWebFeed</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> webFeed<span class="token punctuation">:</span> <span class="token class-name">WebFeedMO</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        stack<span class="token punctuation">.</span><span class="token function">deleteWebFeed</span><span class="token punctuation">(</span>webFeed<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 更新</span>    <span class="token keyword">func</span> <span class="token function-definition function">updateFeedByModel</span><span class="token punctuation">(</span><span class="token keyword">for</span> webFeed<span class="token punctuation">:</span> <span class="token class-name">WebFeedMO</span><span class="token punctuation">,</span> model<span class="token punctuation">:</span> <span class="token class-name">FeedModel</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span>        <span class="token comment">// MARK: - 文章的操作</span>    <span class="token comment">// 收藏的文章</span>    <span class="token keyword">func</span> <span class="token function-definition function">fetchFavoriteArticles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        favoriteArticles <span class="token operator">=</span> fetchFavoriteArticlesResults<span class="token punctuation">.</span>fetchedObjects <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 最新文章</span>    <span class="token keyword">func</span> <span class="token function-definition function">fetchNewArticles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        newArticles <span class="token operator">=</span> fetchedNewArticlesResults<span class="token punctuation">.</span>fetchedObjects <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 收藏</span>    <span class="token keyword">func</span> <span class="token function-definition function">favoriteArticle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        selectedArticle<span class="token operator">?</span><span class="token punctuation">.</span>favourite<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        selectedArticle<span class="token operator">?</span><span class="token punctuation">.</span>dateModified <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>now    <span class="token punctuation">&#125;</span>        <span class="token comment">// 清空所选 feed 下所有文章</span>    <span class="token keyword">func</span> <span class="token function-definition function">deleteAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span>        <span class="token comment">// 标记全部已读</span>    <span class="token keyword">func</span> <span class="token function-definition function">markAllAsRead</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span>        <span class="token comment">// 新增文章</span>    <span class="token keyword">func</span> <span class="token function-definition function">createArticleByModel</span><span class="token punctuation">(</span><span class="token keyword">for</span> webFeed<span class="token punctuation">:</span> <span class="token class-name">WebFeedMO</span><span class="token punctuation">,</span> model<span class="token punctuation">:</span> <span class="token class-name">ArticleModel</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">&#123;</span> <span class="token operator">...</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>应用最终效果如下图：</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftui-rss-reader/42.png" class="lozad post-image"src="/uploads/swiftui-rss-reader/42.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img  srcset=&quot;data:image/svg+xml,%3Csvg%20xmlns=&#39;http://www.w3.org/2000/svg&#39;%20viewBox=&#39;0%200%20300%20300&#39;%3E%3C/svg%3E&quot; data-src=&quot;/uploa
      
    
    </summary>
    
      <category term="Programming" scheme="https://starming.com/categories/Programming/"/>
    
    
      <category term="iOS" scheme="https://starming.com/tags/iOS/"/>
    
      <category term="Apple" scheme="https://starming.com/tags/Apple/"/>
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
</feed>
