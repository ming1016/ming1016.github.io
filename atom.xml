<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>戴铭的博客 - 星光社</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://starming.com/"/>
  <updated>2024-08-10T00:47:16.648Z</updated>
  <id>https://starming.com/</id>
  
  <author>
    <name>戴铭</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>鸟山明和他的龙珠</title>
    <link href="https://starming.com/2024/08/10/dragonball-story/"/>
    <id>https://starming.com/2024/08/10/dragonball-story/</id>
    <published>2024-08-10T00:05:23.000Z</published>
    <updated>2024-08-10T00:47:16.648Z</updated>
    
    <content type="html"><![CDATA[<p>上次录了期圣斗士的播客，还写了篇<a href="%5Bhttps://starming.com/2024/07/20/saint-seiya-story/%5D(https://starming.com/2024/07/20/saint-seiya-story/)">文章</a>。这次录了期<a href="https://www.xiaoyuzhoufm.com/episode/66b56568db5e6d6bf9f8a661">龙珠话题的播客</a>，聊下龙珠，说下龙珠的故事，鸟山明与龙珠的那些事，比如他的助手、编辑以及他平日的一些爱好。作为一个老的漫画爱好者，我还会说说以前海南版七龙珠和画书大王杂志的一些事。本期播客地址，或扫码下图中二维码收听。铭莉双收播客已经有了 <a href="https://feed.xyzfm.space/4fw9n8q79hdk">RSS 连接</a>，可以通过泛用型客户端收听，也可以直接在苹果 Podcast 里搜索“铭莉双收”订阅收听，记得五星好评哦。以下内容是对播客内容的一点补充。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/dragonball-story/01.jpg" class="lozad post-image"src="/uploads/dragonball-story/01.jpg"></p><h2 id="龙珠的影响力"><a href="#龙珠的影响力" class="headerlink" title="龙珠的影响力"></a>龙珠的影响力</h2><p>龙珠的影响力不言而喻，下面用一些排行数据来直观感受下。</p><p>日本漫画全球销量排行榜，龙珠排在第二，第一是海贼王。火影第四，柯南第五。日本NHK官方排名前5的动漫，龙珠也是第二，第一是千与千寻，第三是海贼王。火影第四。日本最受欢迎漫画家排行榜中鸟山明位居第二，第一是手冢治虫。宫崎骏是第三。日本动漫协会民调评出最经典35部动漫中，龙珠是第一，海贼王第二，火影是第四。</p><p>可见龙珠在日本动漫界地位。</p><p>我所看的是情况是谁家要是有全套海南版七龙珠，一定会被全班羡慕，去他家蹭着看。因为七龙珠的火爆，一些其他的漫画也会被改成以七开头的，比如乱马就被改成七笑拳，连作者高桥留美子都被改成了鸟山明。同期还有很多漫画比如《哆啦A梦》、《圣斗士星矢》、《侠探寒羽良》，但是看得最多的还是龙珠。</p><h2 id="龙珠和西游记的关系"><a href="#龙珠和西游记的关系" class="headerlink" title="龙珠和西游记的关系"></a>龙珠和西游记的关系</h2><p>鸟山明当初想创作一部带有《西游记》风格的冒险故事。</p><p>龙珠开始有点西游记冒险的那味，也用了一些西游记中元素，比如主角的名字，如意棒，筋斗云。还有乌龙的形象就是借用了猪八戒。</p><p>《西游记》最初是通过说书人和民间智慧口头流传下来的，后来由吴承恩在明朝将这些故事集结成书。到了民国时期，考证出吴承恩是《西游记》的整理者。几百年前写的《西游记》没有版权，即使是现代小说，在我国超过50年也进入公共领域，不再享有版权保护。进入公共领域意味着任何人都可以改编和商业使用这部作品，无需支付原作者费用。因此龙珠使用西游记中的元素也是没有问题的。</p><h3 id="龙珠角色名字来源"><a href="#龙珠角色名字来源" class="headerlink" title="龙珠角色名字来源"></a>龙珠角色名字来源</h3><p>因为龙珠流通的版本较多，本文主要取了个中，没有用最早的海南版和最新的台版，而是用的中国少年儿童出版社的翻译名，比如库林就是海南版中的小林，比克是短笛，亚姆查就是乐平。如有地方错了，可能是我看的版本太多导致混淆的缘故，请见谅。</p><p>下面是鸟山明怎么给龙珠里的人物命名的。基本都是根据生活中常见吃穿物品的音来起名的。</p><p>孙悟空以及初期冒险碰到的人都是有中国特色的，亚姆查是饮茶日语 yamcha 的发音。乌龙、普尔、天津饭、饺子、鹤仙人、桃白白等。悟饭的日语发音是 gouhan，在日语中也就是饭的意思。皮拉夫看起来没有中国味，但是确实中式杂烩炒饭的法语发音，他的手下阿修和小舞的是烧卖 shyumai 的发音。</p><p>布尔玛日语是ブルマ，读音 bulma，日语意思是女生短裤。布尔玛父亲布利夫日语意思是男性内裤，儿子特兰克斯意思是男性短裤，女儿布拉(Bra)是胸罩的意思。他们一家主题是内衣。</p><p>牛魔王的女儿琪琪的名字来自日语牛的读音 chichi。</p><p>库林的日语发音是 kuri，是光头的意思。小林女儿马萝是光头的法语发音。</p><p>红绸军里的人都是按照颜色来的，蓝将军、白将军、银大佐、紫曹长、紫罗兰大佐、黑副官、红总帅</p><p>比克大魔王是短笛的发音，手下都是乐器，皮亚诺、辛巴鲁、坦巴利、多拉姆分别对应钢琴 piano，钹 cymbal，铃鼓 tambourine，鼓 drum。</p><p>赛亚人 saiya 是日语蔬菜发音 yasai 倒着发。贝吉塔是蔬菜阴雨 vegetable 的前几个字母 vegeta 的发音。那巴是菜叶日语 nappa 发音。卡卡罗特是胡萝卜的英语发音 carotte，他衣服颜色也是胡萝卜的颜色，哥哥拉蒂兹是英语萝卜 radish 的发音，父亲巴达克是牛蒡英语 burdock 的发音。可以看出赛亚人都是蔬菜。</p><p>那美克星篇中弗利萨是能够装所有蔬菜的冰箱 freezer 的发音，他的父亲格尔多大王是 kingcold，也就是冷王的意思。冰箱还能够装水果，所以弗利萨的手下都是水果，比如第一个被贝吉塔杀掉的是丘夷是水果 kiwi，也就是猕猴桃的意思。萨博是日本水果朱栾 zabon 的发音，多多利亚是榴莲 durian 的发音。</p><p>基纽是牛奶日语 ginyu 发音，古尔多是酸奶德文 yoghurt 后半音，吉斯是奶酪英语 cheese 的发音，巴特是黄油英语 butter 的发音。简直就是奶制品特种部队。</p><p>人造人基本就简略到只用编号来表示了。</p><p>悟饭读高中时碰到的同学名字都是以学习用具命名的，比如莎普是铅笔刀英语 sharpener 的发音，伊雷莎是橡皮 eraser 的发音。</p><p>布欧篇更敷衍了，直接将一段灰姑娘电影中的咒语“比比迪巴比迪布欧”拆成不同人的名字，比比迪，巴菲迪，布欧。欧布就是布欧倒过来念。</p><p>下面按照时间线说说龙珠的内容。</p><h2 id="龙珠时间线"><a href="#龙珠时间线" class="headerlink" title="龙珠时间线"></a>龙珠时间线</h2><h3 id="正传前"><a href="#正传前" class="headerlink" title="正传前"></a>正传前</h3><p>宇宙中有个恐怖的魔物叫魔罗，它能吸收生命能量并用来增强自己，还能攻击敌人。魔罗摧毁了很多星球，最终大界王神耗费大量神力封印了它的魔力。魔导师比比迪创造了布欧，布欧在数年间摧毁了成千上万颗行星，并消灭了五位界王神中的四位，吸收了大界王神后变成肥布欧，西界王神艰难地将布欧封印在蛋壳内并抛入太空。</p><p>杏仁开始管理五行山上的八卦炉。小加力古的祖先从魔境星来到地球。邪道神化身为蛇道的公主并在路旁建了一座宫殿。占卜婆婆开始掌管人们的命运。阎魔大王穿越蛇道得到北界王的教导进行修炼，期间遇到蛇公主，蛇公主对他产生好感。龟仙人出生。比克在天神门下修炼。龟仙人18岁时在师父武泰斗的教导下修炼，并迷恋上少女芳芳。鹤仙人的兄弟桃白白出生。龟仙人在海滩捡到一颗三星龙珠。第一届天下第一武道会开幕。老孙悟饭出生。</p><p>那美克星遭遇可怕的风暴，许多娜美克星人丧生。卡达祖把儿子比克送上太空以保全性命，但太空船迫降地球。加力古卷土重来，企图夺取天神之位，天神被驱逐后，比克担任天神，但他的邪念分离出来，成为比克大魔王。大魔王开始破坏大地，但不久后被武泰斗用魔封波封印在电饭煲内，武泰斗也因此牺牲。</p><p>达普拉对地球进行了调研，为魔人布欧的苏醒做准备，但调研得太早了。</p><p>传说中的超级赛亚人在宇宙间大肆破坏。赛亚人集结占领了普兰特星，将其改名为贝吉塔星。祖福鲁族科学家赖知博士被杀，祖福鲁人被灭族，他们的科技被赛亚人夺走。赛亚人开始在宇宙间航行，与异星人接触并发展贸易。赛亚人通过占领星球并将资源卖给异星人，与弗利萨建立了伙伴关系。贝吉塔王与皇后结婚。贝吉塔王子、亚姆查、布尔玛、天津饭先后出生，地球新国王诞生。弗利萨开始对赛亚人感到不安，库林出生。弗利萨进攻贝吉塔星球，贝吉塔行星毁灭，孙悟空被父亲巴达克送往地球。巴达克试图挑战弗利萨但失败，卡卡罗特被送往地球。</p><p>卡卡罗特出生。老孙悟饭在竹林中发现赛亚人飞行器中的婴儿并收养了他，取名孙悟空。悟空不小心从山崖摔下，头部受伤后变得活泼开朗。龟仙人的不死鸟因食物中毒死去，他在海滨发现了一只小海龟。晚上悟空出去撒尿，看见圆月，第一次变身巨猿，无意中踩死了爷爷。</p><p>牛魔王之女琪琪出生，她的母亲不久后去世。牛魔王和琪琪在山脚野餐时，火焰让他们的城堡和整座山变为火海，他们迁居山脚，并将此山改名为火焰山。</p><h3 id="悟空历险"><a href="#悟空历险" class="headerlink" title="悟空历险"></a>悟空历险</h3><p>艾纪748年（孙悟空11岁）</p><p>龙珠正传开始</p><p>布尔玛和孙悟空的命运相遇，开始了寻找七颗龙珠的冒险旅程。</p><p>布尔玛在家里整理仓库时发现了二星龙珠，接着在北方山洞里找到了五星龙珠，并决定利用暑假寻找剩下的龙珠。</p><p>她在路上遇见了悟空，发现悟空的爷爷遗物是四星龙珠，于是邀请他一起冒险。接下来，悟空发现了男女的不同。途中，小悟空救了深山里的老乌龟，将它送回海边，老乌龟带来老龟仙人，布尔玛用内裤从龟仙人那换来了三星龙珠，悟空还获得了筋斗云。</p><p>途中，悟空制服了变成怪物的乌龙，村里的老妇人给了他们六星龙珠。悟空还和亚姆查交手，最终成了平局。后来，悟空打败了亚姆查，在牛魔王的村子里遇见了琪琪。龟仙人用龟派气功扑灭了火焰山的大火，但也把大山吹走了，他们在废墟中找到了七星龙珠。在火焰山，悟空学会了龟派气功，战斗力达到10。去龟仙岛的路上，悟空和琪琪定下了婚约。</p><p>之后，兔子团长被送上月球做糖果，皮拉夫的手下舞和修偷走了龙珠。皮拉夫许愿时，乌龙抢先索要了一条女式内裤，悟空变成巨猿，把皮拉夫的城堡夷为平地。</p><p>同年，悟空拜龟仙人为师，结识了库林，一起习武。布尔玛和亚姆查开始了他们的恋爱长跑。</p><p>艾纪749年（12岁）</p><p>孙悟空和库林在龟仙人的安排下参加了“天下第一武道会”。库林在四强赛中输给了龟仙人化名的程龙，孙悟空也在决赛中惜败于他，获得亚军。比赛中，悟空因满月变成大猩猩，程龙无奈之下摧毁了月亮。</p><p>同年，孙悟空在寻找爷爷的四星龙珠时，顺手摧毁了“红绸军团”，阻止了首领瑞德想要变高的愿望，维护了地球治安。在这个过程中，悟空结识了斯诺、人造人8号、乌帕父子和卡林仙人，还击败了杀手桃白白。</p><p>在寻找最后一颗龙珠时，孙悟空得到占星婆婆的帮助，再次见到了已故的爷爷孙悟饭，完成了他的遗愿，看到了孙悟空的成长。同年，亚姆查拜入龟仙人门下。</p><h3 id="第一次参加武道会"><a href="#第一次参加武道会" class="headerlink" title="第一次参加武道会"></a>第一次参加武道会</h3><p>艾纪749</p><p>悟空和库林开始在龟仙人门下修炼，带来了可爱的兰琪。他们在小岛上接受了8个月的特训。</p><p>一天，他们吃了有毒的河豚鱼，只能躺在床上休息。几天后，悟空和库林正式开始训练，直到下一届天下第一武道会。</p><p>在训练期间，他们进行了负重40公斤的锻炼。红绸子军银司令也在寻找龙珠。</p><p>小悟空和库林练了8个月的基本功，然后直接参加了武道会。</p><p>有人认为几个月就能速成拿好名次，是爽文套路，取悦读者； 有人觉得龟仙人不肯教招式，是怕教会徒弟饿死师父，传武老毛病； 有人说龟仙人的理念是无招胜有招，基本功最重要，招式反而不重要； 也有人认为只靠日常劳作就能强身健体、逆袭，是投机取巧，老港片里常用的套路，不是因为合理，而是接地气，容易让观众代入。</p><p>不得不承认，龙珠确实用了不少爽文套路。8个月备战，两个十三四岁的孩子能顺利进入世界大赛四强，这有点离谱。打桃白白时更夸张，只用3天，通过卡林塔的攀爬和追逐训练，就全面碾压桃白白。比克大魔王篇更是充满武侠味，复仇、开挂、爽文元素全都有。</p><p>最终，龟仙人、悟空和库林离开小岛参加天下第一武道会。龟仙人化身“程龙”获得了冠军，悟空屈居第二。</p><h3 id="红绸军"><a href="#红绸军" class="headerlink" title="红绸军"></a>红绸军</h3><p>艾纪750</p><p>皮拉夫、红绸军和悟空同时开始找龙珠。红绸军在皮拉夫的地下城堡很快就找到了两颗龙珠。第二天，布尔玛给悟空修好了龙珠雷达。悟空和蓝将军在半空中打到了企鹅村上空，结果被阿拉蕾一记头槌打败。这也是悟空第一次来企鹅村，遇到了阿拉蕾。同一天，桃白白用舌头亲自杀了蓝将军。悟空在卡林塔下惨败给桃白白，决定爬上卡林塔找仙人帮忙。</p><p>过了两天，悟空爬上了卡林塔顶，得到了卡林仙人的引导，仙人给了他“超圣水”，其实就是普通的自来水。原来，真正的提升能力过程在于和卡林仙人的较量。又过了两天，经过三天的训练，悟空再战桃白白，取得了胜利，还一举歼灭了红绸军。这一天，悟空不仅为世界除了大害，还在水晶婆婆的格斗场上看到了已经去世的爷爷孙悟饭。</p><h3 id="第二次武道会，天津饭"><a href="#第二次武道会，天津饭" class="headerlink" title="第二次武道会，天津饭"></a>第二次武道会，天津饭</h3><p>艾纪752年（15岁）</p><p>孙悟空在世界各地修炼之后，回来参加了这届天下第一武道会。鹤仙流也派人来参加了，龟仙流的亚姆查和鹤仙流的天津饭打了一场。但因为实力差太多，亚姆查被打败了，腿还受了伤，没能进八强。</p><p>程龙三年前因为打碎了月亮，导致人狼没法变回人，所以这次人狼来参加武道会想报仇。但程龙还是轻松地打败了他，还用库林的亮脑门和催眠术把人狼变回人了。</p><p>库林和饺子比赛时，库林这个数学天才靠着数数赢了饺子这个数学鬼才，给龟仙流挣回了面子。</p><p>孙悟空更是一招就打败了两个世界冠军的巴普特，轻松进了四强。四强战里，程龙和天津饭打得很激烈，但程龙想感化天津饭，所以主动认输了。孙悟空和库林打了一场，库林虽然尽力了，但还是输了。</p><p>总决赛是天津饭和孙悟空打，天津饭在战斗中觉醒了武道正义感，变成了好人。但最后因为运气稍差，孙悟空又得了亚军。</p><p>武道会结束后，库林在武道馆被神秘人杀了，孙悟空愤怒地去追，但因为体力耗尽，没能打过对方。龟仙人根据现场的东西，推断出大魔王又出现了。</p><p>孙悟空结识了亚奇洛贝，他们一起杀了几个魔族战士，结果引来了大魔王。孙悟空打不过，被打得晕了过去。龟仙人、天津饭、饺子在收集龙珠时，也遇到了大魔王。龟仙人挺身而出，想使用魔封波封印他，但失败了，龟仙人战死了。神龙出现后，饺子也战死了，大魔王恢复年轻，开始了他的恐怖统治。</p><p>天津饭想修炼魔封波来封印大魔王，但把封具弄坏了。孙悟空在亚奇洛贝的帮助下，再次见到了卡林仙人。他喝下蕴含剧毒的超神水，以命赌力，终于成功突破了！</p><p>突破后的孙悟空在国王宫殿旁击败了大魔王，再次拯救了地球！大魔王死前留下孙家保姆，说“魔族永远不会灭绝”。击败大魔王的孙悟空获得了面见天神的机会，他通过如意棒前往天界！在天界与波波交手之后，天神闪亮登场，一手弹开孙悟空，秀得一手好操作！天神复活神龙之后，库林、龟仙人、饺子等人也复活了。孙悟空则留在天界继续修行！</p><h3 id="比克大魔王"><a href="#比克大魔王" class="headerlink" title="比克大魔王"></a>比克大魔王</h3><p>艾纪753</p><p>第22届天下第一武道会正式开始了，最后天津饭赢了，悟空又得了亚军。可就在这时候，库林突然被杀，比克大魔王又出来了。后来，在地球国王掌政20周年纪念的第二天，悟空打败了比克大魔王，地球又恢复了和平，比克二代也出现了。然后，悟空就去了天神神殿，开始了神仙和波波先生指导下的三年修炼。</p><h3 id="第三次武道会，比克大魔王"><a href="#第三次武道会，比克大魔王" class="headerlink" title="第三次武道会，比克大魔王"></a>第三次武道会，比克大魔王</h3><p>艾纪755年（18岁）</p><p>这段时间发生了好多大事！先是刚满18岁的孙悟空和琪琪完成了他们儿时的约定，结婚了。然后比克大魔王也来参加武道会，还打败了天神，嚣张得不行。不过最后孙悟空还是艰难地赢了他，粉碎了他想统治世界的野心。接着，孙悟空终于拿到了天下第一武道会的冠军，和琪琪一起在包子山定居了。哦对了，兰斯追着天津饭不知道跑到哪里去了。</p><p>再说说后来吧，第23届天下第一武道会又开始了，这次悟空打败了比克二代，终于第一次夺得了武道会的桂冠。比赛结束后，他们还订婚了。然后，艾纪756年，孙悟空19岁的时候，他们的儿子孙悟饭出生了。同年，孙悟饭的未来妻子比迪丽也出生了。这时间过得真快，事情也真多，真是让人感慨万千！</p><h3 id="赛亚人地球战"><a href="#赛亚人地球战" class="headerlink" title="赛亚人地球战"></a>赛亚人地球战</h3><p>艾纪760年（23岁）</p><p>有个外星神秘战士叫拉蒂兹的跑到地球来了，他一来就揭露了孙悟空的身世，原来孙悟空是赛亚人，这下赛亚人正式进入龙珠历史了。</p><p>拉蒂兹还想利用孙悟饭，拉拢孙悟空入伙。不过，比克和孙悟空联手对战拉蒂兹，结果也不占优势。</p><p>危急时刻，孙悟饭怒气爆发，竟然击伤了拉蒂兹。</p><p>拉蒂兹是孙悟空的亲哥哥，作为一名上级赛亚人战士，他来到地球寻找孙悟空，目的是拉拢孙悟空加入他们的行列，共同征服世界。然而，孙悟空拒绝了拉蒂兹的要求，这导致了双方的激烈冲突。</p><p>在与孙悟空和比克的战斗中，拉蒂兹展现了强大的实力，一度占据上风。然而，孙悟空在战斗中逐渐找到了拉蒂兹的弱点，并利用这一点展开反击。</p><p>在危急关头，孙悟空紧紧地抱住了拉蒂兹，使其无法动弹。同时，他请求比克使用绝招“魔贯光杀炮”来终结战斗。</p><p>比克听从了孙悟空的请求，发射出了强大的“魔贯光杀炮”，这一击直接贯穿了孙悟空和拉蒂兹的身体。</p><p>龙珠的信息也泄露了，听说更强的赛亚人一年后就要入侵地球。</p><p>比克赶紧带走孙悟饭去修练了，天津饭、库林、饺子、亚姆查、亚奇洛贝也跑到天界去修练了。</p><p>至于孙悟空嘛，他跑到阴间跟界王学习去了！这龙珠世界真是越来越热闹了！</p><p>艾纪761年</p><p>贝吉塔和那巴这俩人，他们降落到了一个叫阿鲁尼亚的星球上，结果一看，觉得没啥用，就直接把它给炸了。炸完之后，他俩就进入冬眠状态了，说是要睡一年，等到抵达地球的时候再醒过来。</p><p>再说孙悟空，他这时候也复活了，从界王星赶回了阎王殿。</p><p>后来，库林、天津饭、饺子、亚姆查和弥次郎兵卫这几个人，他们都跑到天神神殿去修行了。</p><p>悟空呢，他也没闲着，他到了北界王星，还在巨大的重力环境下抓住了巴布鲁斯。然后，他得用槌子敲中格雷哥利的脑袋，这事儿可不容易。不过呢，悟空最后还是做到了，用槌子打中了格雷哥利。</p><p>还有天津饭、亚姆查、库林和饺子他们，他们几个人还跑到“过去”的“贝吉塔星”上，跟赛亚人打了起来。结果呢，两个低等战士就差点把他们给“干掉”了。回到自己的身体后，他们发誓要发奋图强，一定要变得更强。最后，悟空也从界王那里完成了修业，重生了。</p><p>艾纪762年</p><p>贝吉塔跟那巴来到地球后，悟饭、比克、天津饭、库林、亚姆查还有饺子他们一起对抗这两个赛亚人。亚姆查这家伙，身先士卒，冲在最前面，结果第一个战死，算是博了个头筹吧。饺子也不甘示弱，紧跟着也自爆身亡了，真是惨烈！天津饭那时候说，不求同生，但求同死，双宿双栖，也是让人感慨万千。最后呢，悟空跟贝吉塔打了个平手，这场打斗才结束。贝吉塔乘坐太空船18日回到弗利萨星球。也是在那一天，悟空终于知道了他爷爷是怎么死的。同时，有个叫格罗博士的人，他派了个小机器人在这附近收集那些强大战士的细胞，想做个超强的生命体出来。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/dragonball-story/02.png" class="lozad post-image"src="/uploads/dragonball-story/02.png"></p><p>本篇中拉蒂兹战斗力情况如下：</p><p>拉蒂兹：战斗力1500<br>孙悟空：常态416，龟派神功924<br>比克：战斗力408，魔贯光杀炮1330<br>孙悟饭：愤怒1307</p><p>本篇中贝吉塔战斗力情况如下：</p><p>天津饭：1830<br>栽培人：1200<br>那巴：4000，聚气8000<br>亚姆查：1480<br>饺子：610<br>比克：3500，为打倒赛亚人提升<br>库林：1770<br>孙悟饭：愤怒2800<br>孙悟空：常态8000，2倍界王拳1.6万，3倍2.4万，4倍界王拳3.2万<br>贝吉塔：常态1.8万，闪光炮2.4万，虚弱7000，巨猿化7万</p><h3 id="那美克星"><a href="#那美克星" class="headerlink" title="那美克星"></a>那美克星</h3><p>艾纪762年</p><p>库林、悟饭和悟空打完架，伤得不轻，都被送去医院治伤了。过了没几天，库林和悟饭就康复出院了。紧接着，天神的飞船也修好了，速度快得很。</p><p>然后，布尔玛真是个天才，没几天就学会了娜美克星人的语言，厉害得不得了。她拉上库林和悟饭，三个人开着飞船就直奔娜美克星去了，用了34天时间，如果使用地球技术飞船那是需要四千年才能到。</p><p>另一边呢，贝吉塔在弗利萨星球的79区也受了重伤，但他恢复得也快，没多久就完全好了。一出疗养舱，他也二话不说，直接就往娜美克星赶。这几个人目标都是一样的，都奔着娜美克星去了。</p><p>布尔玛、孙悟饭、库林和贝吉塔一起降落到了娜美克星。同时，悟空也康复出院，急匆匆地赶往娜美克星。丹迪和库林去见大长老，而天津饭、亚姆查、饺子和比克则去了北界王星特训。</p><p>那美克星这边的代表是年纪小但能力超强的丹迪。这地方势力可复杂了，有像万年打野的贝吉塔，单人成团到处跑；有弗利萨主宰着，还带着一群手下；还有一群温和的那美克星人；最后就是咱们的主角们像防御塔一样守着各个地方。</p><p>贝吉塔先杀了多多利亚</p><p>后来，萨波击败了贝吉塔，把他带到了弗利萨的飞船里。赛亚人有个能力，濒死复活能增加战斗力。但贝吉塔不甘示弱，再次挑战萨波，终于把他干掉了。这时，库林和孙悟饭也见到了大长老。</p><p>另一方面，基纽战队原本要去雅路达星，但计划有变，他们被派去娜美克星协助弗利萨，他们乘坐飞船用了5天到达那美克星。而悟空乘坐了布尔玛父亲做的太空船在一百倍重力的环境下修炼，终于适应了那种极端条件。孙悟空在一百倍重力室修炼后，实力大涨，飞船用了6天时间到达那美克星，悟空打败了基纽特战队。但基纽战队的队友会换身技能，把孙悟空弄伤得很严重，他只好进疗养仓了，弗利萨星球疗伤技术很高，遍体鳞伤也只需要一个小时痊愈，如果是地球医疗技术的话，四个月也难痊愈。</p><p>趁着贝吉塔休息，库林、孙悟饭还有丹迪偷偷召唤神龙，救了比克，还把比克送到那美克星。第三个愿望还没许，大长老寿命到了，神龙就消失了。</p><p>弗利萨知道神龙死了，气坏了。贝吉塔、比克、库林、孙悟饭、丹迪五个人联手，还是打不过弗利萨，贝吉塔还战死了。</p><p>孙悟空养好伤回来，战斗力飙升，跟弗利萨苦战。后来库林被弗利萨杀了，悟空愤怒至极，他第一次变身成超级赛亚人，最终击败了弗利萨。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/dragonball-story/03.png" class="lozad post-image"src="/uploads/dragonball-story/03.png"></p><p>那美克星人被地球神龙复活，又由波仑伽（大长老复活短时间）传送到地球。最后那美克星爆炸，孙悟空坐着基纽特战队的飞船去雅德拉克星学瞬间移动了。</p><p>此阶段战斗力情况如下：</p><p>库林：1500，大长老激发潜力1.3万<br>悟饭：1500，大长老激发潜力1.4万，对弗利萨第三形态愤怒200万<br>丘夷：1.8万<br>贝吉塔：常态2.4万，萨博击败疗伤后3万，再次大难不死后12万，对弗利萨25万，对弗利萨第四形态250万<br>多多利亚：2.2万<br>萨博：2.2万，变身2.8万<br>古尔多：1万，有超能力<br>利库姆：4.2万<br>巴特：4.5万，速度宇宙第一<br>孙悟空：9万，2倍界王拳18万，重伤复活300万，10倍界王拳3000万，20倍界王拳6000万，超级赛亚人1.5亿<br>吉斯：4.5万<br>基纽：12万<br>内鲁：4.2万<br>比克：和内鲁同化后150万，胜于弗利萨第二形态<br>弗利萨：第一形态53万，第二形态120万，第三形态220完胜比克，弗利萨最终形态1.2亿</p><h3 id="特兰克斯"><a href="#特兰克斯" class="headerlink" title="特兰克斯"></a>特兰克斯</h3><p>库林和亚姆查，这两个家伙，后来靠着那美克星那条神奇的神龙，嗖的一下，就从哪儿来回到地球了。</p><p>没过多久，饺子和天津饭也回来了，好事成双。那些剩下的娜美克星人，神龙也帮忙找了个新家，新娜美克星，听起来就不错。</p><p>然后沙鲁杀了未来的特兰克斯，偷偷搭了特兰克斯的时光机，成为一个蛋，进入地下孵化。在地底下猫了好多年，自己悄悄地吸收能量，准备搞事呢。</p><p>还有，弗利萨，也给修好了，没完没了。</p><p>转眼第二年，年初那会儿，贝吉塔可拼了，整天泡在重力室里修炼，就想变成超级赛亚人。练过头了，就会受伤，经布尔玛精心照料，两人就好上了，感情升温得跟坐火箭似的。</p><p>艾纪764年<br>弗利萨父子跑到地球来了。这时候未来特兰克斯出现啦！他是从 20 年后的未来来的，也就是艾纪 784 年。特兰克斯把弗利萨父子打败了，还给孙悟空带来了治心脏病的特效药，跟孙悟空说了人造人的那些事儿。</p><p>此阶段战斗力情况如下：</p><p>机械弗利萨：1.4亿<br>库尔德王：8000万，弗利萨的父亲<br>特兰克斯：6亿<br>孙悟空：8亿，亚德拉特星修炼结果，心脏病4亿以下<br>人造人19号：4.2亿<br>人造人20号：4.2亿<br>贝吉塔：10亿<br>比克：5亿，和天神合体15亿<br>人造人18号：12亿<br>人造人17号：15亿<br>人造人16号：19亿</p><h3 id="沙鲁"><a href="#沙鲁" class="headerlink" title="沙鲁"></a>沙鲁</h3><p>艾纪767年</p><p>弗利萨父子进攻地球的时候，遇到了来自未来的特兰克斯，这小伙子真不简单，一下子就把弗利萨父子给打败了。可紧接着，人造人出现了，悟空跟人造人19号、20号打起来，可是心脏病毒让他受不了，只好停下来。这时候，贝吉塔以超级赛亚人的身份出现了，真是帅啊！</p><p>没过多久，特兰克斯又来了，这次他从更远的未来回来，他发现在他那个时代的三年后，有个叫沙鲁的人造人出现了。哎呀，时间线就这么对上了。</p><p>库林和未来的特兰克斯找到了格罗博士的实验室，把那个还没完全成型的沙鲁给干掉了。</p><p>然后，人造人16、17、18号都冒出来了，沙鲁还吸收了17、18号，变得更强了。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/dragonball-story/04.png" class="lozad post-image"src="/uploads/dragonball-story/04.png"></p><p>孙悟空他们这边也不甘示弱，比克和天神合体，龙珠失效后，过了两天，悟空吃了特兰克斯带来的药，慢慢好起来了。孙悟空立马瞬移到新那美克星找新任天神丹迪，把龙珠给复活了。</p><p>贝吉塔和特兰克斯父子俩也进入精神时光屋去修炼了。</p><p>贝吉塔也突破了自己的极限，可惜还是没能打败完全体的沙鲁。特兰克斯也一样，虽然开发出了超级赛亚人一第三阶，但还是败给了沙鲁。</p><p>沙鲁变得更强了。然后悟空和悟饭也去精神时光屋修炼了。</p><p>后来沙鲁还搞了个沙鲁游戏，真是嚣张。孙悟空和孙悟饭进入精神时光屋修炼，出来后孙悟空虽然变强了，但还是没能打败沙鲁。最后，孙悟饭在沙鲁、16号和撒旦的帮助下，终于突破极限，变成了超级赛亚人二，成功打败了沙鲁。但因为骄傲自大，导致悟空又牺牲了，不过最后还是悟饭愤怒的一击，终于把沙鲁给消灭了，拯救了地球。可惜的是，孙悟空在这场战斗中牺牲了。</p><p>鸟山明曾说，第二阶段的沙鲁是他最喜欢的角色。大家都笑他是不是傻，尤其是编辑近藤裕。近藤以前做少女漫画杂志，看惯了帅哥，怎么能接受这种形象？不过这只是开玩笑，近藤其实很有深度。</p><p>近藤裕非常擅长设计人物形象，而且他总是根据大众心理来设计，效果往往非常好。比如弗利萨的形象，就是他提出要塑造成一个宇宙地产商的点子——在泡沫经济鼎盛时期，炒地皮的最招人恨。</p><p>近藤不喜欢二阶沙鲁，催着鸟山明赶快画出新形态，是因为他考虑到未来的胜负和故事整体。如果敌人太丑，大家会觉得主角赢是理所当然的结果；而敌人是帅哥的话，读者才会担心悟空能不能赢。事实证明，近藤的意见是对的——大部分人都认为完美沙鲁稳压悟空一头，沙鲁几乎是不可战胜的，这场决斗的胜负归属一直是龙珠中的热门话题。</p><p>那鸟山明为什么最喜欢二阶沙鲁呢？他的审美真的这么特别吗？一方面是因为他喜欢日本特摄剧，比起动漫，他更喜欢奥特曼、哥斯拉、超级战队这些特摄剧，并且在作品中致敬过。那么假面骑士怎么能落下呢？鸟山明在采访中表示，自己最喜欢的动物之一就是飞蝗（好在他没真在家里养这个），沙鲁的昆虫原型就是受到假面骑士的影响而诞生的。斑点难画？他心里乐意着呢。而且画斑点明显是助手的工作，鸟山明自嘲说斑点麻烦，只是习惯性地凡尔赛罢了。</p><p>此阶段战斗力情况如下：</p><p>特兰克斯：超级赛亚人第二阶段150亿，超级赛亚人第三阶段225亿，超级赛亚人全功率250亿<br>孙悟空：超级赛亚人全功率350亿<br>贝吉塔：超级赛亚人第二阶段150亿，超级赛亚人全功率250亿<br>沙鲁：第一形态11亿，第一形态吸收人类精华19亿和16号持平，第二形态95亿，沙鲁完全体初登场200亿，后期380亿，拳力500亿，闪电沙鲁1000亿<br>小沙鲁：250亿<br>孙悟饭：超级赛亚人全功率330亿，超级赛亚人全功率愤怒450亿，超级赛亚人2战斗力900亿</p><h3 id="布欧"><a href="#布欧" class="headerlink" title="布欧"></a>布欧</h3><p>悟空的葬礼上，大家都参加了。之后，未来的特兰克斯回到自己的时代，消灭了未来的17号、18号和沙鲁。</p><p>接下来几个月，有一部关于撒旦先生的电视特别节目，详细介绍了他的生平，但没有提到沙鲁之战。撒旦被认为是地球上最强的格斗家。</p><p>库林和18号结婚了，他们的女儿玛伦也出生了。界王神和杰比特来到地球，寻找魔人布欧的蛋壳。悟饭升上了橙星高中的一年级。</p><p>一位金发战士保卫撒旦市的故事传遍了大街小巷。悟饭在橙星高中认识了撒旦的女儿比迪丽。下午三点左右，悟饭请布尔玛为他制作一件战斗服，布尔玛同意了。大约五点，超级赛亚蒙面超人诞生了。</p><p>比迪丽发现赛亚蒙面超人其实就是悟饭。接着，悟饭教比迪丽飞行，南界王见识到悟空惊人的修炼方式。小特兰克斯在他父亲面前第一次变成超级赛亚人。比迪丽终于掌握了舞空术。</p><p>第25届天下第一武道会召开，悟空获准离开阴间一天来参加比赛。贝吉塔通过魔导师巴比迪的控制，变身超级赛亚人2，并与悟空打斗，导致魔人布欧在地球上苏醒。悟饭拔出界王神剑，贝吉塔为了亲人自爆拯救了地球。胖布欧杀死了魔导师巴比迪。悟空展示超级赛亚人3的威力后提前返回阴间。悟天和特兰克斯开始练习合体，第三次才成功。悟饭把界王神剑折断，释放了老界王神，老界王神决定为悟饭引发出更深藏的潜能。</p><p>胖布欧在撒旦的感化下逐渐平静，但撒旦被杀后，胖布欧释放出瘦布欧，吃了胖布欧后变成大布欧。大布欧在精神时光屋与悟天克斯混战，打到下界。大布欧吸收了悟饭、悟天、特兰克斯和比克。在大布欧要杀光地球所有人的紧急关头，老界王神将他的性命送给悟空，让他再返人间作战。贝吉塔在水晶婆婆的协助下也回到了地球。两人第一次用耳环合体，变身为贝吉特，成功进入大布欧体内救出众人，使大布欧恢复成小布欧。小布欧炸毁了地球，但那美克星神龙让地球恢复原样。贝吉塔也因地球人全体复活而重生。悟空用一枚特大元气弹消灭了布欧。</p><p>神龙将人们心中对布欧的记忆完全抹掉。几年后，第26届天下第一武道会举行，撒旦先生夺得第一，胖布欧第二。</p><p>此阶段战斗力情况如下：</p><p>孙悟天：19亿<br>特兰克斯：20亿<br>悟天克斯：超3战斗力8000亿<br>悟饭：神秘悟饭1.2兆<br>胖布欧：5000亿<br>瘦布欧：3500亿<br>大布欧：7000亿</p><h3 id="龙珠超"><a href="#龙珠超" class="headerlink" title="龙珠超"></a>龙珠超</h3><p>破坏神比鲁斯来袭，悟空拼尽全力抵消了比鲁斯的“灼热弹”，比鲁斯很赞赏悟空，并决定不再破坏地球。</p><p>小芳出生。同年，弗利萨复活，修炼出金色形态，带军队来地球复仇。悟空击败弗利萨，弗利萨再次被送回“地狱”。第七宇宙和第六宇宙的破坏神比武大会开始，第七宇宙获胜。未来的扎马斯入侵，特兰克斯回到过去求助，最后合体扎马斯被未来全王消灭，未来全王和现世全王成为朋友。</p><p>布拉出生。同年，全王举办力之大会，失败的宇宙将被清除。悟空、贝吉塔、悟饭等十人代表第七宇宙参赛，悟空在大会上首次达成自在极意，第七宇宙获胜。人造人17号用超级龙珠许愿复活被清除的宇宙，大家回到正常生活。弗利萨的两个小兵在万帕星找到布罗利父子，悟空一伙寻找龙珠时遇到弗利萨军，悟空和达尔与布罗利交战，最后用美达摩融合术压制布罗利，但在消灭他的一瞬间，布罗利被神龙传送到万帕星。悟空送给布罗利物资，并表示想通过与他对战变强以超越比鲁斯。实习天使梅尔斯因违背天使中立准则而消失，孙悟空完全掌握自在极意，梅尔斯因大神官转生成人类而复活。</p><p>第27届天下第一武道会举行，撒旦先生夺得第一，“胖布欧”第二。第28届天下第一武道会举行，悟空在比赛场上将布欧的转世——欧布带走修炼。</p><h3 id="龙珠GT"><a href="#龙珠GT" class="headerlink" title="龙珠GT"></a>龙珠GT</h3><p>悟空被皮拉夫用黑星龙珠变成了8岁。悟空、小芳和特兰克斯乘宇宙飞船出发寻找龙珠。九个月后，他们遇上了贝比。贝比被击败后，潜入地球控制了几乎所有人，并变得更强大。贝比用黑星龙珠重建了祖福鲁星。悟空变身超级赛亚人4，与贝比展开大战，最终贝比被灭，祖福鲁星人也因地球人被治愈而灭绝。</p><p>黑星龙珠的诅咒导致地球爆炸，所有生命迁往祖福鲁星。那美克星龙珠将地球复原后，大家迁回地球。第30届天下第一武道会举行，撒旦再次获得冠军。</p><p>超级17号进化完成，但被悟空和18号联手击败。龙珠出现裂痕，邪恶龙肆虐世界。悟空最终击败一星龙，神龙重现并带走悟空，七颗龙珠融入悟空的身体，悟空离开了一百年。</p><p>悟空的玄孙出生，为纪念祖先取名小孙悟空。小悟空在独自寻找龙珠的冒险中激发了超级赛亚人潜能。在祖居门前，小孙悟空与显灵的祖父见面。</p><p>第63届天下第一武道会举行，小孙悟空与贝吉塔的玄孙角逐少年组决赛桂冠，结果未明。110岁的小芳在观众席上看到祖父悟空的身影，但未能追上。悟空和龙珠的故事到此画上完美的休止符。</p><h2 id="龙珠中的道具清单"><a href="#龙珠中的道具清单" class="headerlink" title="龙珠中的道具清单"></a>龙珠中的道具清单</h2><ul><li>龙珠：收集七颗龙珠能够实现一个愿望，丹迪制作的可以实现三个，可一次复活多人。只有那美克星龙族才能制作龙珠。那美克星大长老制作的龙珠能实现三个愿望，但是一次只能复活一个人，后期新的可以让多人复活。龙珠实现的愿望中，最让人感动的是库林让神龙拆掉18号和17号体内的爆炸装置。</li><li>筋斗云：只有心灵纯洁的人才能坐上去。曾经坐上去的人有，孙悟空、悟饭、人鱼（悟空按龟仙人要求找的人）、琪琪、兰奇、欧布等。</li><li>神奇胶囊：可以将房子汽车等物品装到一个瓶子里。打开瓶盖就能还原。由布尔玛父亲发明。</li><li>如意棒：可以随意伸长，悟空就是用它直接伸到神殿。</li><li>PP糖：吃下的人听到PP就会拉肚子，效果会持续一个月，布尔玛用在了乌龙身上。</li><li>龟壳：龟仙人所背，重量大，也用于悟空库林的训练。</li><li>仙豆：重伤可痊愈。每次不可大量种植，数量很有限。但是仙豆不能治疗疾病，比如悟空心脏病发作时，仙豆不起作用。</li><li>超圣水：里面只是普通的水。</li><li>超神水：有剧毒，但是如果有强大的体能和意志力就能够引出潜能。悟空是唯一喝过没死的人。</li><li>战斗机器人：红绸军黑参谋对付悟空的可操作的机器人。</li><li>皮拉夫的机器人：皮拉夫三人组每人一个可操作的机器人，还可以合体。</li><li>比克大魔王的封印：用来封住比克大魔王的咒印。将其贴在瓶子上，使用魔封波就可以将比克大魔王封印住。</li><li>侦查器：按一下就可以知道对手的战斗力，还可以进行星际对话。旧款上限是2.2万，新款没有上限。</li><li>弗利萨军战斗服：超级橡胶制成，柔软性和防御力都很高，很有弹性，什么身材都能穿进去，几乎感觉不到重量。简直就是最理想的宅男服装。</li><li>栽培人套装：赛亚人的科学生物，播种后滴上栽培液，就会诞生栽培人，战斗力还不错，但不会说话。</li><li>魔法飞毯：波波使用的交通工具，一瞬间将布尔玛带到天神的宇宙飞船那。</li><li>光束枪：弗利萨的士兵使用的枪，布尔玛库林悟饭一行到那美克星的飞船被光束枪一枪击毙。</li><li>治疗机：弗利萨军的治疗装置，最多四十分钟就能痊愈。</li><li>特兰克斯的剑：一剑砍死悟空打了几十页漫画的弗利萨，非常的耀眼。</li><li>紧急停止控制器：用于停止17号和18号活动的装置。需要在10米内使用。</li><li>变身服装和手表：悟饭高中时，做好事为了隐藏身份所穿，悟饭拜托布尔玛制作的。</li><li>测拳机：第24届天下第一武道会上开始使用的，最高纪录时撒旦打出的139分。</li><li>能量吸收器：用于解开布欧封印的能量吸收器。</li><li>封印蛋：封印魔人布欧的蛋。</li><li>终极之剑：传说一拔出来就能够提升力量的剑。原因是老界王神被封印在剑内，他会帮助拔剑人提升力量。</li><li>卡先钢：全宇宙最坚硬的金属。使用终极之剑都砍不开。</li><li>天界神珠：带上的两人可以合体，合体后力量提升。</li></ul><h2 id="龙珠世界全地图"><a href="#龙珠世界全地图" class="headerlink" title="龙珠世界全地图"></a>龙珠世界全地图</h2><p>龙珠世界氛围天界和宇宙，天界包括阎王殿、蛇道、界王星、地狱和天国。宇宙包含了地球、那美克星、弗利萨星和贝吉塔星等星球。</p><p>天界位于宇宙之上，里面有裁判死者的阎王殿、天国和地狱，是神管理世界的地方。好人会去天国，坏人去地狱，如果被魔族所杀灵魂只能在宇宙飘浮。阎王殿是死者灵魂的入口，蛇道连接着阎王殿和界王星，界王星很小，只有界王和他的宠物阿布住在上面，重力是地球的十倍，界王的生活很简单很舒适，数数草，眺望天空，还可以看小便撒的多远。</p><p>那美克星科技是先进的，可以造出超光速宇宙飞船，但是那美克星人却因为天气问题几乎灭绝，为了恢复星球，仅存的那美克星人开始了种植花花草草的安稳生活。那美克星人分为龙族和战士两个，那美克星人没有性别，通过口中吐蛋进行繁殖。</p><p>贝吉塔星住着赛亚人，他们大部分都是弗利萨的雇佣兵，会去侵略其他星球。最后弗利萨害怕赛亚星会出现传说中的超级赛亚人，于是将贝吉塔星摧毁，赛亚人几乎灭绝。赛亚人是好战的名族，从小被灌输战斗的思想，使得他们天生就很享受战斗。</p><p>龙珠世界的地球只有一个国家，由国王统治，全国有四十三个区。地球的科技主要是胶囊公司带来的，也就是布尔玛他们家的公司。反重力装置交通工具很普及，地球人有人类，比如库林，动物类，比如乌龙，还有怪物类，比如皮拉夫。</p><p>地球北部地区有中都、东都、牧场、吉古鲁村、红绸军白队基地等地方。中都是国王的都城，比克大魔王就是在这里让国王屈服的。东都是东北部最大城市，贝吉塔和那巴就是在这里着陆的。拉蒂兹是在牧场着陆的。吉古鲁村是常年被大雪覆盖的城市，那里的人淳朴热情，小悟空帮他们打败了红绸军白队基地。</p><p>地球东部有兔子军团镇、乌龙的村庄、亚姆查的住处、皮拉夫城堡和海盗洞穴。</p><p>西部有圣地卡林，卡林塔、悟饭修行地、西都、胶囊公司和红绸军总部。卡林塔居住着卡林仙人，悟饭修行地是比克为了对抗赛亚人专门培训悟饭的地方。西都是地球科技最发达的地方，胶囊公司也在西部。</p><p>南部有龟仙人的小屋、企鹅村、火焰山、天下第一武道馆、占星婆婆宫殿。</p><h2 id="鸟山明"><a href="#鸟山明" class="headerlink" title="鸟山明"></a>鸟山明</h2><h3 id="家乡"><a href="#家乡" class="headerlink" title="家乡"></a>家乡</h3><p>鸟山明先生，家住 爱知县 名古屋市清州。名古屋是日本重工业基地，飞机汽车很繁荣，也导致鸟山明很喜欢一些机械的东西。但是清州很偏，导致鸟山明一直都只有一个助手，几乎所有创作和作画都是一个人完成。</p><p>1983年，他连载《阿拉蕾Q》时，创下“六亿四千七百四十五万日元”的漫画家纳税最高记录。阿拉蕾结束时鸟山明本打算去过自由自在的生活，游泳、赛车、玩模型和旅游，但是被鸟岛和彦告知业界残酷，让他很快回归业界，这才有了龙珠。</p><h3 id="画画方法"><a href="#画画方法" class="headerlink" title="画画方法"></a>画画方法</h3><p>作者通常会先画出NAME给责任编辑看，双方讨论后再修改细节。然后作者在稿纸上打草稿、勾线，助手负责涂黑、涂白和贴网点。</p><p>NAME可以画在普通笔记本上，只要有大概的分格和轮廓，作者和编辑能看懂就行。为了省力，画得潦草是正常的。</p><p>鸟山明连载时不画NAME，直接从底稿开始，改动很少。他曾说过：“为了少做修改，我会把稿子拖到最后一刻再交给编辑，实在没办法编辑也只能认了。”这种拖延战术我们都懂，但不是每个人都能像他一样一出手就是高质量底稿。</p><p>说到画画风格，龙珠的舞台总是很荒凉，鸟山明是觉得画街巷太复杂，阿拉蕾的背景也是用圈圈状的山和树木这种省事的方式来糊弄过去。因为住在乡村买网点纸很麻烦，也就用黑白做了基调。</p><p>鸟山明不会偷懒，他扎实地练习场景透视、人体比例、情节节奏和人物塑造。透视不过关，他就堆细节，用花纹和建筑填满画面，多分格，少画全景。人物比例画不好，就贴网点或用声效字遮挡，甚至用无意义的破格吸引读者。</p><p>人物成长和互动复杂，容易出错，他设计不同的价值观让角色自己动起来，而不是贴现成的性格标签。住在乡下，只有一名助手，背景不画建筑，头发不用涂黑，减轻助手负担。作画工具不高档，他只能大刀阔斧地画，时间有限，能推掉彩页就推掉，不讲与主线无关的故事，不乱埋伏笔，不无限拓展剧情。</p><p>鸟山明画漫画也不是一开始有很厉害的，周刊少年编辑鸟岛和彦说他第一次收到鸟山明漫画是临摹星球大战的作品，这类作品是不可刊登的，他是对漫画中的文字绘画感觉新鲜，这才有去联系鸟山明。</p><p>日本坚持黑白漫画，因为彩色漫画虽然好看，但成本高。JUMP每期有几页彩页和拉页海报，但大部分是黑白的，用的是便宜的纸张，定价低，小孩子都能买得起。</p><p>集英社的全彩版龙珠只关注色彩，不重视黑白基调，效果不好。鸟山明最初用普通的透明水彩，后来用签字笔融水涂色，效果不错。1981年，他在《りぼん》杂志的访谈中了解到彩色墨水的使用方法，后来常用Luma牌墨水。他还向动画导演和制作人员学习上色技巧。</p><h3 id="助手"><a href="#助手" class="headerlink" title="助手"></a>助手</h3><p>一个人又要拼命想故事，还得小心翼翼别踩坑，画技还得天天磨，连载的压力大得跟山似的，还得想着怎么快点火起来。能按时交稿，质量还不差，那已经是超人水平了！这时候再让他每周都给画上色，还没人帮忙分担，换谁不崩溃啊？</p><h4 id="田中久志"><a href="#田中久志" class="headerlink" title="田中久志"></a>田中久志</h4><p>说回鸟山明，他那时候可惨了，啥都得自己干，连个助手影儿都没有。可能他之前都不知道还有漫画助手这职业呢，毕竟以前都是画短篇的。他家那地儿偏得要命，想找人都找不着。要是在东京，鸟嶋和彦那哥们儿肯定能帮上忙，但鸟山明非要在家搞创作，那就只能自己想办法了。好在，他加入了个小圈子，里面有个叫田中久志的，后来成了他的第一任助手，不过这家伙一周才来一趟，帮不了太多忙。但人家可是厉害角色，参加过比赛还拿过亚军呢，现在都成大学教授了。</p><h4 id="谷上"><a href="#谷上" class="headerlink" title="谷上"></a>谷上</h4><p>再来说说谷上，这位是东京来的机械天才，鸟山明都夸他。但不知道为啥，没多久就走了，存在感超低。那时候龙珠火得不行，如果是在大城市，来应征的人得挤破门，但鸟山明家那地儿太偏了。</p><h4 id="松山孝司"><a href="#松山孝司" class="headerlink" title="松山孝司"></a>松山孝司</h4><p>还有松山孝司，这家伙跟鸟山明那叫一个默契，俩人兴趣相投，简直就是灵魂伴侣。松山不仅是助手，还是模型手办的高手，拿奖拿到手软。他从阿拉蕾后期就开始跟着鸟山明，一直到龙珠结束，整整12年！鸟山明还特地为松山减负，超级赛亚人的头发都不涂黑了，就是为了让他轻松点。俩人工作之余还一起抽烟、聊电影、打游戏、骑摩托，简直不要太爽！</p><p>松山结婚的时候，鸟山明还特地留言说以后不让他加班太晚，可见两人关系多铁了。总之，鸟山明能画出那么火的漫画，松山孝司功不可没！</p><p>一边要绞尽脑汁创作故事、一边要避免踩坑、一边要打磨画技、一边要适应连载的工作强度、一边还要争取尽快积攒人气，能保质保量地按时交稿就不错了，这时候再让他们每周都上色，又找不到人分担压力，换谁不得崩溃？</p><h3 id="历任编辑"><a href="#历任编辑" class="headerlink" title="历任编辑"></a>历任编辑</h3><h4 id="鸟岛和彦"><a href="#鸟岛和彦" class="headerlink" title="鸟岛和彦"></a>鸟岛和彦</h4><p>鸟岛和彦这个人，大家可能不太熟悉，但说到龙珠里的马西利特博士和比克大魔王，动漫迷们应该都知道。他们的原型其实就是鸟岛和彦，他不仅是鸟山明的第一任编辑，还是个厉害的角色。80年代的时候，他就开始搞游戏业务，还推动了漫画和游戏的关系。就像那个《达伊大冒险》，其实就是为了展示游戏和漫画的紧密联系。他甚至想让鸟山明把龙珠的故事扩展到宇宙，还想让鸟山明和高桥留美子一起设计个RPG游戏。这哥们儿自己也创办了本超火的游戏杂志V-Jump，后来还当上了少年JUMP的主编，开始大刀阔斧地改革。</p><h4 id="近藤裕则"><a href="#近藤裕则" class="headerlink" title="近藤裕则"></a>近藤裕则</h4><p>然后说说近藤裕则，他是鸟山明的第二代编辑，也是弗利萨的原型。别看他彬彬有礼，严厉程度可不低。他喜欢帅哥，所以老是催鸟山明赶紧让沙鲁完全体出场。但鸟山明其实更喜欢画异形和昆虫这类的东西，像蓝将军和萨博这样的帅哥他画得并不多。</p><h4 id="武田冬门"><a href="#武田冬门" class="headerlink" title="武田冬门"></a>武田冬门</h4><p>最后来聊聊武田冬门，这哥们儿是鸟山明的第三代编辑，也是胖布欧的原型。他可是鸟山明的超级粉丝，对《布欧篇》的创作，他基本上就是：“哥，你随便画，我都爱看。”所以，鸟山明就创造出了那个超可爱的天真胖布欧。</p><h3 id="爱好模型"><a href="#爱好模型" class="headerlink" title="爱好模型"></a>爱好模型</h3><p>鸟山明工作房间有个大桌子用来拼模型，身后的另一个大桌子也是拼模型用的，比他在角落里画画的桌面大了三四倍不止。漫画只是糊口的手艺，模型才是真爱啊。</p><h3 id="爱好摩托车"><a href="#爱好摩托车" class="headerlink" title="爱好摩托车"></a>爱好摩托车</h3><p>据说鸟山明的父亲曾参加过摩托车比赛，拥有一家汽车维修公司，鸟山明说自己一有空就会去摩托车改装店。</p><p>鸟山明还透露过他除了设计游戏还设计汽车，但因为保密协议，他没有透入是为哪家公司设计汽车，他觉得能够以门外汉的身份去设计可以好好乘坐的汽车是他生活的意义。</p><h3 id="爱好游戏"><a href="#爱好游戏" class="headerlink" title="爱好游戏"></a>爱好游戏</h3><p>鸟山明曾说自己是做事比较认真、一旦钻进去就很投入的那种人——从他的模型上就能看得出来——结果有了红白机之后，一下子迷上电子游戏，难以自拔，他说：“本来只是想随便买个红白机玩玩，结果却上瘾了，玩得手指都疼啦。甭管工作多么辛苦，我的手指从没长过茧。奇怪的是，一玩起红白机来，手上竟然长出了茧。”</p><p>老师曾说：“我的假期全都耗在《勇者斗恶龙III》上了。既高兴，又难过。但游戏本身确实非常有趣。白天去游泳池，晚上沉迷红白机上的《母亲》游戏，最后只能半夜工作。”</p><p>后来他还与堀井雄二、坂口博信这个「梦幻团队」开发的《时空之轮》。</p><h3 id="爱好养宠物"><a href="#爱好养宠物" class="headerlink" title="爱好养宠物"></a>爱好养宠物</h3><p>鸟山明特别喜欢养小动物，尤其是狗和鸟。</p><p>他养的第一只狗叫“涡轮丸”，挺有个性的名字吧。后来呢，他又买了只哈士奇，给取了个名字叫“马特”，哦对，原名是“俄罗斯套娃”，但叫“马特”更亲切些。</p><p>再后来，他又看上了柯基这种狗，于是就把“马特”这两个字颠倒一下，叫“托马”了。</p><p>不仅仅是家里养的小动物，鸟山明家里还常常有些“不请自来”的客人，比如野猫、蜥蜴、乌龟、老鼠，甚至还有蛇！</p><p>野猫经常来找家里的锅巴打架，也是挺有趣的。蜥蜴和乌龟他最后都放生了，也没看到它们回来报答他。说到老鼠，那可真是让他头疼，晚上一过街老鼠都能把他吓得跳进田里。家里的老鼠更是麻烦，最后用了“灭鼠110”才解决。他家的猫还特别有趣，每次抓到老鼠都送到他面前，真是让人哭笑不得。</p><p>哦对了，还有毒蛇呢，像日本蝮、响尾蛇这种，他都好几次死里逃生，真是命大！不过说实话，他更烦那些到处跑的蟑螂和永远打不完的苍蝇蚊子。</p><p>这周边的小动物实在是太多了，有时候真的吵得他都没法专心画画。</p><h3 id="作品"><a href="#作品" class="headerlink" title="作品"></a>作品</h3><p>鸟山明出来长篇IQ博士和龙珠外还有很多短篇漫画，以下是按年排列的作品列表。</p><p>1978年：「神秘的rainiack」完成后，「Awawaworld」角逐 Young Jump 新人赏，「WONDER ISLAND」「WONDER ISLAND2」（刊於WJ増1&#x2F;25）<br>1979年：「本日的HIRI岛」，「GAL刑事TOMATO」<br>1980年：「IQ博士」<br>1981年：「POLA &amp; ROID」，「ESCAPE」<br>1982年：「MAD MATIC」，「HETAPPI漫画研究所」，「PINK」<br>1983年：「CНОВІТ」，「CHOBIT2」，「骑龙少年 其壹」，「骑龙少年 其贰」，「东风大冒险」<br>1984年：「龙珠」<br>1986年：「MI Hoo」<br>1987年：「LADY RED」，「剑之介大人」<br>1988年：「SONCHOH」，「豆次郎」<br>1989年：「小忍者空丸」<br>1990年：「WOLF」，「CASHMAN」<br>1992年：「TRUNKS THE STORY 唯一的战士」，「DUB &amp; PETER1」<br>1993年：「GO!GOIACKMAN」<br>1996年：「宇宙人PEKE」，「TOKIMECHA」<br>1997年：「魔人村的BUBUL」，「COWAI」<br>1998年：「河鹿」，「肺魚鯕鰍」<br>1999年：「猫魔人在此」，「猫魔人在此2」<br>2000年：「HYOUTAMU」，「SANDLAND」<br>2001年：「猫魔人Z」<br>2003年：「TOCCIO THE ANGEL」，「猫魔人Z2」，「三色猫魔人」</p><h2 id="海南版七龙珠"><a href="#海南版七龙珠" class="headerlink" title="海南版七龙珠"></a>海南版七龙珠</h2><p>海南摄影美术出版社，它是由海南省新闻出版局花了11万块钱建立起来的，是个挺正式的省级单位。刚开张那会儿，他们也不知道出啥书好，就尝试搞了些人体写真、美女挂历啊，还有些壮阳秘籍、鬼怪故事、养生菜谱之类的，当然也包括了介绍海南风情的画册和连环画。不过，这些书受众面可比漫画广多了。</p><p>说到漫画，海南版的《龙珠》那可是真牛，品质高，速度快，其他出版社都追不上，只能跟在后面抄作业。1991年1月，第一本《龙珠》就问世了，接着3月份第一卷就全套上架了。到了1992年2月，故事都快讲到人造人和未来战士那段了，一年之内就出了10卷，销量也是噌噌往上涨，最火的时候一卷能卖到12万册呢！</p><p>但是，从第11卷开始，出版速度就慢下来了，中间还隔了大半年才继续出。为啥呢？因为海南版快追上原作者鸟山明的进度了，他们不能这么赶了。这时候，市场上还出现了单本卖的情况，以前都是成套卖的。</p><p>到了1993年，海南社这边的情况就不太清楚了，反正沙鲁篇拖到了1994年才出完。那段时间，读者们可急坏了，等得花儿都谢了。</p><p>还有件事得提，1992年中国加入了《伯尔尼公约》，版权这事儿就严起来了。之前海南社出的那些日漫，其实算是打了个擦边球，不算完全的盗版。但新政一出，规矩就来了。</p><p>1994年，央视《新闻联播》连着三天讲打击盗版的事儿，还专门点名了日本漫画，说它们内容不健康，影响青少年。这下子，家长们都紧张了，孩子们看《龙珠》都得偷偷摸摸的。</p><p>最后，海南社还是没能继续出漫画了，不管读者怎么盼，后面的故事都只能留在想象中了。到了1997年，新闻出版署查了他们，发现违规出版了不少书，管理也乱，还被吊销了出版资格。从此，海南摄影美术出版社和《龙珠》的故事就告一段落了。</p><h2 id="画书大王"><a href="#画书大王" class="headerlink" title="画书大王"></a>画书大王</h2><p>记得94年那会儿，《画书大王》，大家都叫它“画王”，咱心里的一道光！那感觉，就像是大家坐一块儿，平等交流，一块儿进步，全靠一腔热爱撑着。这杂志虽然薄薄的，不到百页，但里头啥都有，从鸟山明、北条司到高桥留美子这些国际大咖的作品，再到咱们国内第一代漫画家王庸声、谭晓春、陈翔他们的原创故事，那叫一个丰富多彩。</p><p>最让我开眼界的是，它不光有漫画看，还时不时来点法国漫画、纸雕漫画，世界各地的风格都能在这上面找到，学校里那美术课本可没这待遇！</p><p>画王连载漫画的同时，还教你咋画漫画，有套连载叫《漫画研究所》，鸟山明亲自上阵，从零开始，一步步教你。虽然最后几页讲怎么给集英社投稿，对国内来说用处不大，但人家还是完完整整给咱们搬来了，这份诚意，没得说！</p><p>我看画书大王的起因主要是因为杂志里面有刊登打败沙鲁之后的内容。每期我都有跟，同时也看到了更多的漫画，以及漫画背后作者画漫画的事情，这些点燃了我对漫画这个行业的热爱。</p><p>杂志是王庸声老师创办，初心是为了中国漫画的未来。可惜，画王只坚持了两年，就赶上那时候对漫画的“风波”，没了它，中国漫画就像突然被掐了脖子，艰难前行。就算有其他杂志接着干，但总感觉少了那么一股子劲儿。</p><p>那时，总会有那么群人，带着纯纯的热爱，艰难却很快乐的坚守者这座小城堡。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上次录了期圣斗士的播客，还写了篇&lt;a href=&quot;%5Bhttps://starming.com/2024/07/20/saint-seiya-story/%5D(https://starming.com/2024/07/20/saint-seiya-story/)&quot;&gt;文章
      
    
    </summary>
    
      <category term="Podcast" scheme="https://starming.com/categories/Podcast/"/>
    
    
      <category term="Podcast" scheme="https://starming.com/tags/Podcast/"/>
    
      <category term="Manga" scheme="https://starming.com/tags/Manga/"/>
    
  </entry>
  
  <entry>
    <title>圣斗士星矢的前世今生，车田正美的坚持，城户光政的阴谋</title>
    <link href="https://starming.com/2024/07/20/saint-seiya-story/"/>
    <id>https://starming.com/2024/07/20/saint-seiya-story/</id>
    <published>2024-07-19T23:33:51.000Z</published>
    <updated>2024-07-19T23:50:20.572Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我最近和家人们一起做了一个播客，名叫<a href="https://www.xiaoyuzhoufm.com/podcast/668b45c5094e5a1fbfd51135">《铭莉双收》</a>，本文内容是对最新一期播客的一个补充，欢迎大家订阅收听。</p><p>提到圣斗士星矢，大部分人都是通过90年央视播出的《圣斗士星矢》这部动画片看到的。后来200多个地方电台每年轮番播放，我也是那时看了一遍又一遍。再后来圣斗士的风潮就结束了，被龙珠和灌篮高手等动画片所替代。</p><p>我相对更铁粉些，后来还看了圣斗士星矢的漫画，工作后还买了车田正美授权的手代木史织画的冥王神话LC。</p><p>圣斗士星矢在生活中的影响随处可见，像小宇宙爆发、天马流星拳、庐山升龙霸这样的词总是声声入耳。B站年会圣斗士主题演出也是常客。日本还有真人舞台音乐剧。在法国圣斗士也是非常流行，几个法国网友自制了一部十分钟左右的动画短片，这个动画在法国引起了轰动，动画还传到东映高层那，这是发生在圣斗士动画结束十年后的事情，东映因此重启了冥王篇动画。最近22年，法国还举办了一场圣斗士星矢的音乐会。在一些电视剧和电影中也会用到这些词。《爱情公寓》里关谷神奇总是会变身“圣斗士关谷”。韩寒的《飞驰人生》电影中，车手摸到以前赛车时将其比作打开圣衣箱的瞬间。</p><p>就算圣斗士星矢这个 IP 还一直人气尚在，但自从漫画冥王篇人气下滑，动画海皇篇收视率下降，还有后续的作品一直无法再续辉煌，即便是车田正美老师本人在五十多岁再次持笔续篇《圣斗士星矢NEXT DIMENSION 冥王神话》也没法重塑辉煌。如今 ND 刚完结，迎来最终回，官方随书赠了再多纪念品也没有破圈传播出来。</p><p>这也可以看出《周刊少年Jump》这个舞台的残酷，也正是有了这样的舞台，才会不断诞生出新的神作。</p><p>但对于车田正美来说他为圣斗士星矢搭建的巨大世界观还远没完成，关于漫画和动画为何双双落败，车田正美和周刊少年Jump还有东映动画之间发生了什么问题，车田正美到底是个什么样的人呢？</p><h2 id="车田正美"><a href="#车田正美" class="headerlink" title="车田正美"></a>车田正美</h2><p>车田正美出生在建筑工人家庭，生日是1953年12月6日，今年他已经71岁，是射手座，所以知道为什么星矢是射手座候选人了吧。小时候车田正美就是暴走族的一员，他和其他不良少年不同的是他高中时特别喜欢本宫宏志的《男儿当大将》，决定当像本宫宏志那样的漫画家。另外大家熟悉本宫宏志的作品是《吞食天地》，就是街机上那个三国志游戏的漫画原著。</p><p>车田正美高三时给周刊少年Jump的新人奖比赛投稿，结果入围未果，安慰奖中他的名字都被写错，写成了东田正美。还是不良少年的他直接跑到杂志社问责，结果杂志编辑为了安息民愤，给了他一个当本宫宏志助手的机会，本宫宏志可是他的偶像啊。可想当时车田正美的杀气有多大。</p><p>有了当漫画家的觉悟，学习起来是飞快的。车田正美很快就开始在周刊少年Jump上连载漫画了，《女强风暴》、《拳王创世纪》、《风魔小次郎》和《男坂》等作品不断推出。《风魔小次郎》我小时候看过，感觉和圣斗士的风格很像，只是少了圣衣。缺少了圣衣加持，里面的人物更难和圣斗士中人物区分开了。</p><p>这些作品中，《男坂》由于题材还是一群小混混对付黑道，已经过时，人气不断降低，最后被迫完结。但是车田正美本人和他作品中的热血男儿一样，不轻言放弃，于是在完结最后一页还写着未完二字。这种不放弃就是三十年，2014年《男坂》重开连载。</p><p>当时《男坂》的被迫停载让车田正美的小宇宙终于得到爆发，他曾表示，如果下部作品不能红他金盆洗手不干这行了。为了达成这个目标，他低下了他高傲的头颅，将他信奉的拳击和小混混题材放弃掉，给他们包上一层商业化的圣衣，侵泡在希腊神话中，拿出来的就是《圣斗士星矢》。</p><p>当年《圣斗士星矢》火到集英社大楼都被称为车田大楼，上一次被这么叫的还是鸟山明的《阿拉蕾》。东映动画制作了《圣斗士星矢》的TV动画，接着就是手办的热卖，手办火热程度一直持续到现在。车田正美当时在文化类纳税是排名第一的，他买了很多豪车，生活也过的豪起来了。</p><p>好景不长，在海皇篇时，他和编辑理念出现分歧，还打算用以前成功时的闯宫套路，小强们不升级，黄金圣斗士还是最厉害的，如今的他似乎更有底气，于是不再听从于编辑提出的人物成长，新对手更强的Jump成功学。到了冥王篇读者终于开始厌倦，车田正美的故事编排能力不足的缺陷也更加突出了。于是车田正美自断双臂，大量删减了冥王篇的内容，使其能很快的完结。同样的情景也发生在动画这，《剧场版 天界篇·序奏》里，编剧和车田正美的想法也出现了很大的冲突，这部动画口碑非常差，TV动画海皇篇收视率也出现了滑铁卢。</p><p>虽然漫画冥王篇中被删减的内容在续作《圣斗士星矢NEXT DIMENSION 冥王神话》中得到了补全，但圣斗士的故事还是没能回到公众视野中来。</p><p>自车田正美三十多岁完结《圣斗士星矢》后，他还一直在画新的漫画，包括《静斗士翔》、《魔矢》、《钢铁神兵》、《青鸟的神话》以及自传漫画《蓝之时代》。这些作品都没有流行起来。</p><p>流行就是这样，大家都在追求新鲜感的东西，东西再好，看多了就无趣了。即使是手冢治虫，鸟山明这样的顶流漫画家，后期的作品也难流行开来，但是这也不会妨碍他们成为经典。曾经流行过能够成为一段回忆，经典的作品却能够一直被关注，价值会更高些呢。</p><p>在车田正美画续作ND时，他已经五十多了，现在才完结，这一画就是十八年。老爷子真的和他笔下的角色一样，为了自己的理想，一直坚持着，努力着。</p><p>说完车田正美，接下来，我会说一说圣斗士星矢到底是个什么样的故事，还会包括圣斗士神话的起源，也就是车田正美创作的超神话。还有正篇中提到的前圣战的故事。</p><h2 id="故事起源"><a href="#故事起源" class="headerlink" title="故事起源"></a>故事起源</h2><p>圣斗士星矢的世界观是车田正美独创的超神话，和我们知道的希腊神话不一样，只是借鉴了希腊神话、印度和中国的一些神话故事。</p><p>起源要从大爆炸说起，大爆炸释放出众神意志，众神意志诞生出大地、天空、海洋和人，有些人会觉醒众神意志。最开始有三个人，分别是掌管天地的宙斯、冥界的哈迪斯和海洋的波塞冬。</p><p>人的欲望不断膨胀，掠夺、侵占，到处是罪恶。宙斯无法忍受，于是发起了大洪水作为惩罚。后来宙斯把大地交给了自己的女儿雅典娜，然后消失了。</p><p>波塞冬为了夺取雅典娜的大地，创建了亚特兰蒂斯和海斗士军团，使用特殊材料制作了鳞衣给海斗士。由于雅典娜不喜欢武器，所以大地斗士很难伤害身穿鳞衣的海斗士，还很容易被杀。雅典娜让穆大陆的炼金术士使用銀星砂等材料制作出圣衣，以保护这些斗士，这些斗士也被称为圣斗士。由于特殊材质，这些圣衣如果遇到小伤害放进圣衣箱里是会自修复的。天空的88个星座是雅典娜对圣衣做的设计图，因此斗士只能穿上和自己守护星座相对应的圣衣。</p><p>有了圣斗士，海皇落败，返回亚特兰蒂斯，利用神力发动洪水和地震，于是雅典娜让圣斗士将亚特兰蒂斯破坏，并把波塞冬封印于北极。常年看守的圣斗士后来成为冰战士。</p><p>神之间的战争叫圣战。第一次圣战后雅典娜创建了雅典娜神殿和十二宫，这片区域叫做圣域。这之后雅典娜和圣斗士还遭遇了巨人族的侵犯，战争结束后圣衣产地穆大陆沉没，很多炼金术士也死于这场战争。制作圣衣的技术失传，只剩下少数可以修复圣衣的人，比如牡羊座的穆。</p><p>后面还发生了很多次圣战，看起来大多数神是不爱和平的，这点还是比不上人类。最残暴的神是战神阿瑞斯，他还会煽动人类发动战争。他的斗士被叫做狂斗士。阿瑞斯发起的战争导致大量亡民成了哈迪斯的子民。阿瑞斯和雅典娜的圣战中，圣斗士不断死于狂斗士手下，于是雅典娜允许天秤座圣斗士可以使用武器，让他对付狂斗士，致使阿瑞斯败北。</p><h2 id="前圣战"><a href="#前圣战" class="headerlink" title="前圣战"></a>前圣战</h2><p>最近的圣战，也就是圣斗士星矢正篇里提到的前圣战，发生在两百多年前。和前圣战相关的作品有《圣斗士星矢NEXT DIMENSION 冥王神话》（后面简称 ND）和《圣斗士星矢 THE LOST CANVAS 冥王神话》(后面简称 LC)</p><p>ND 是继续着正篇讲的，里面纱织穿越到了前圣战，目的是毁掉哈迪斯之剑，以拯救被哈迪斯之剑伤害的星矢。LC 完全是讲的发生在正篇之前的事情，但是人物和 ND 不完全一样。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/saint-seiya-story/02.jpeg" class="lozad post-image"src="/uploads/saint-seiya-story/02.jpeg"></p><h2 id="正篇前发生的事情"><a href="#正篇前发生的事情" class="headerlink" title="正篇前发生的事情"></a>正篇前发生的事情</h2><p>正篇主要分为以下部分：</p><ul><li>银河战争篇</li><li>暗黑圣斗士</li><li>白银圣斗士</li><li>圣域十二宫</li><li>北欧篇</li><li>海王篇</li><li>冥王十二宫</li><li>冥王冥界篇</li></ul><p>在银河战争篇之前，女神雅典娜降生于圣域，老教皇史昂在宣布雅典娜降生这个消息后准备退位给撒加和艾欧罗斯，但是艾欧罗斯被选中的可能性更高些，于是撒加的弟弟加隆提议杀掉雅典娜和老教皇，撒加将加隆关到舒尼恩岬牢狱内。</p><p>住在德国灵根的潘多拉家中一个有封条的盒子，使得睡眠之神修普诺斯和死亡之神塔纳托斯复活了。瞬和哈迪斯的灵魂同时出生，哈迪斯的灵魂是借由潘多拉的母亲生出，潘多拉家族城堡里的人在哈迪斯灵魂诞生之时全部死去，只留下潘多拉一人，这座城堡后来就是哈迪斯城堡。</p><p>加隆在牢狱中发现了海皇波塞冬的封印，他让海皇波塞冬附身在希腊船王家的继承人-朱利安·索罗体内，波塞冬再次进入沉睡。</p><p>在老教皇宣布艾欧罗斯为继承人后，那夜撒加杀害了老教皇。在撒加要杀雅典娜时被艾欧罗斯发现，艾欧罗斯带上雅典娜打算逃出圣域，撒加以教皇名义说艾欧里亚绑架雅典娜，是叛徒，于是一路被其他黄金圣斗士阻拦，最后垂死的艾欧里亚碰到来希腊旅游的财阀城户光政，并将雅典娜托付给了他。</p><p>接着城户光政开始策划“百子祭奠神”。</p><h2 id="正篇"><a href="#正篇" class="headerlink" title="正篇"></a>正篇</h2><p>城户光政为了保护雅典娜，将100名孤儿派到世界各地进行修行，最后只有十个人成为了圣斗士。在银河擂台赛中，胜出的前四人是星矢、冰河、紫龙和瞬，后来经历由瞬的哥哥一辉领导的暗黑圣斗士之战后，一辉最终被四小强的友谊所感动，从而加入了他们，成为了五小强。五小强战胜了白银圣斗士，勇闯了黄金十二宫，铲除了海斗士和海皇波塞冬，死磕了冥王哈迪斯。</p><p>正篇中最出彩是黄金圣斗士和冥斗士，这也是圣斗士星矢IP最核心的部分，直到现在，即便圣斗士新作品无人问津，但是黄金圣斗士和冥斗士的手办依然火爆。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/saint-seiya-story/01.jpeg" class="lozad post-image"src="/uploads/saint-seiya-story/01.jpeg"></p><h2 id="黄金圣斗士排名"><a href="#黄金圣斗士排名" class="headerlink" title="黄金圣斗士排名"></a>黄金圣斗士排名</h2><p>另外，黄金圣斗士中谁更厉害也是永远是最受关注的话题。由于圣斗士星矢的作品太多，内容相互冲突，这里只限于车田正美自己的两部作品里的角色来比较。SS 代表正篇，ND 代表续作。</p><p>第一梯队有</p><ul><li>SS的撒加，SS加隆，SS童虎，SS史昂</li><li>ND双子座的该隐和亚伯，ND狮子座凯撒</li></ul><p>第二梯队有</p><ul><li>SS沙加，SS穆</li><li>ND山羊座以藏，ND处女座释静摩，ND水瓶座米斯托利亚，ND天蝎座艾卡拉特</li></ul><p>第三梯队有</p><ul><li>SS米罗，SS卡妙，SS艾欧里亚，SS修罗</li><li>ND的射手座格式塔，ND天秤座童虎，ND白羊座史昂，ND巨蟹座迪斯托尔，ND金牛奥克斯</li></ul><p>第四梯队有</p><ul><li>SS金牛阿鲁迪巴</li><li>ND双鱼座卡迪纳尔</li></ul><p>最差的</p><ul><li>SS双鱼座阿布罗狄，SS巨蟹座迪斯</li></ul><h2 id="城户光政是谁"><a href="#城户光政是谁" class="headerlink" title="城户光政是谁"></a>城户光政是谁</h2><p>看了圣斗士星矢的人都会觉得剧情漏洞太多。但这里做一个假设，所有圣斗士星矢的剧情漏洞就都填上了。</p><p>这个假设是城户光政就是将大地交给雅典娜后就消失的宙斯。从头按照这个假设再看看剧情，宙斯应该是在每次圣战中按照帮雅典娜的人，不然为什么每次雅典娜都能够赢得圣战。正篇中，宙斯下凡投胎成为城户光政，以神力成为了大富豪，并在两年内在全世界到处留种，生了一百个孩子。一般人到了城户光政这个年龄是无法办到的。因此这只能是使用了神力。并且他没有将遗产给自己的孩子而是给了一个捡来的娃娃，这并不是人类的思维。</p><p>艾欧里亚将雅典娜交给城户光政这段，是不是和赵子龙救阿斗，交给孩子亲爹刘备一模一样。宙斯一定是将自己的身份告知了艾欧里亚，不然他怎么会把雅典娜交给他呢，宙斯将艾欧里亚的灵魂附着到射手座圣衣上，这样圣衣可以继续保护雅典娜。你看后来冥界篇中黄金圣斗士复活时怎么就没有艾欧里亚呢，这是因为艾欧里亚的灵魂并没有到冥界啊。</p><p>救回雅典娜后，城户光政又生了两个最关键的孩子，一个是星矢，一个是瞬，星矢是弑神者，瞬是给冥王作为转世体用。随后几年中宙斯将这些孩子的母亲都害死，致使这些孩子成为孤儿。</p><p>6年后，城户光政将一百个孩子聚到一起，和撒加达成协议，提供一百个人给他培训，并提供大量资金支持。撒加欣然答应了。为了表达感谢，撒加额外将几十万年都没用过的天鹅座和天龙座奉献了出来，并配备了黄金圣斗士卡妙和童虎作为导师，看来紫龙和冰河是内定的啊。撒加知道下面要面对对付神的战斗，于是将弑神者星矢叫到希腊重点培养。你看，星矢成为圣斗士时，教皇还亲自到场祝贺。</p><p>宙斯布好局，就到天上等着看好戏了。</p><p>成为冥王的转世体的条件是世界上最纯洁善良的人，这种人不会主动进入冲突，降低了被伤害的概率，但是一旦遇到危险难于自保，因此需要一个能够随时保护转世体的人。于是冥王就在死亡岛安排了一个导师，这个导师没有身份、圣衣和实体，只有一个面具，存在的目的就培养一个能够保护冥王转世体的人，将这个人培养成死不了，能够穿越生死空间，还越战越猛的人。能够让人不死和自由穿越空间的只有冥王。这样每次瞬遇到危险，一辉都能瞬间感到，无视雅典娜结界，或者直接降到冥界第四狱。一辉的导师很可能是前面某个双子座圣斗士的灵魂，凤翼天翔加幻魔拳招式和效果与双子座的银河星爆加幻朧魔皇拳如出一辙。</p><p>最终宙斯的阴谋得逞，他的儿子们和他的女儿一同战胜了波塞冬，能够弑神的儿子星矢最终帮女儿弑掉了总是威胁她的大爷冥王哈迪斯。</p><p>最后海皇篇主题曲有段歌词可以作为这段猜想的印证，“正如被选中的神之子”。</p><h2 id="一些八卦图个乐"><a href="#一些八卦图个乐" class="headerlink" title="一些八卦图个乐"></a>一些八卦图个乐</h2><p>魔玲和星矢有着超越师徒的关系，这关系有点像杨过和小龙女。用漫画中魔玲自己说的话作证，“星矢一直把我当作他的姐姐，而且我们彼此问维持着超越师徒间的感情。如果可以的话，最后还是想再让他看一次我的真面目呢。”，待星矢背上圣衣走的时候，魔玲揭开了自己的面具。</p><p>邪武这个舔狗，给雅典娜做牛做马，雅典娜还是喜欢不服管教的星矢，这情节是不是也很熟悉，车田正美妥妥的看过神雕侠侣。</p><p>冰河恋母，成为圣斗士的动力就是为了下海。</p><p>死亡岛的斗士都是没有正式编制的，他们的圣衣是自产的，没被雅典娜采用的，黑暗斗士的招式是自己琢磨的，不像圣斗士都有名师指点。这妥妥的山寨工厂。</p><p>童虎的设定是中国人，童虎是从乾隆时一直到90年代，那么肯定经历了抗日战争，日本人在庐山烧杀抢掠时童虎无动于衷么，难道是因为超过了参军年龄。</p><p>紫龙的父亲是城户光政，母亲是庐山人，应该是叫照香炉，紫龙从小跟随母亲，随母姓，人称庐山照紫龙，他还有个妹妹叫紫烟，有诗为证：<br>日照香炉生紫烟，遥看瀑布挂前川。<br>飞流直下三千尺，疑是银河落九天。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我最近和家人们一起做了一个播客，名叫&lt;a href=&quot;https://www.xiaoyuzhoufm.com/podcast/668b45
      
    
    </summary>
    
      <category term="Podcast" scheme="https://starming.com/categories/Podcast/"/>
    
    
      <category term="Podcast" scheme="https://starming.com/tags/Podcast/"/>
    
      <category term="Manga" scheme="https://starming.com/tags/Manga/"/>
    
  </entry>
  
  <entry>
    <title>梵高灵感的来自江户浮世绘，颜气江户APP来自江户的色彩</title>
    <link href="https://starming.com/2024/07/04/edocolorapp/"/>
    <id>https://starming.com/2024/07/04/edocolorapp/</id>
    <published>2024-07-03T21:48:02.000Z</published>
    <updated>2024-07-04T13:08:15.023Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>看过我前面博客的同学会发现我很喜欢自己画些配图，每次给画配色都会有些新的体会，却不知道是什么，于是每次都要经过一轮新的摸爬滚打才能调到自己满意的颜色，最近我为了能够提高自己的配色效率，就专门的看了一些色彩相关的书籍，学习了点色彩的理论，还专门的手写了一款 APP，提高了上色的效率呢。这个 APP 叫颜气江户，我已经发到<a href="https://apps.apple.com/cn/app/%E9%A2%9C%E6%B0%94/id6504629708">苹果商店（28元）</a>，iOS、iPad 和 macOS 商店都可以找到，搜索“颜气江户”。下面我会聊一点色彩的理论，以及怎么将其融入到 APP 中的。</p><p>颜气江户 APP 有一些色彩 APP 的基本功能，200个江户色卡，色卡配图和配色表，以及识别图片配色等功能。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/08.png" class="lozad post-image"src="/uploads/edocolorapp/08.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/06.png" class="lozad post-image"src="/uploads/edocolorapp/06.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/04.png" class="lozad post-image"src="/uploads/edocolorapp/04.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/07.png" class="lozad post-image"src="/uploads/edocolorapp/07.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/03.png" class="lozad post-image"src="/uploads/edocolorapp/03.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/02.png" class="lozad post-image"src="/uploads/edocolorapp/02.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/05.png" class="lozad post-image"src="/uploads/edocolorapp/05.png"></p><h2 id="舒服的配色"><a href="#舒服的配色" class="headerlink" title="舒服的配色"></a>舒服的配色</h2><p>首先，无论你是否画画，你都会觉得一些配色看起来很舒服，也会觉得有些配色看起来很丑。这些其实是有一定规律可循的。你的眼睛会寻求中等灰色才会达到一种平衡状态，互补色调合后会变成灰色，所以灰色和互补色很容易让配色舒服。因此苹果笔记本常年都是主打银灰色，macOS 操作系统的窗口和 Sidebar 一直以来也都是灰色的，非常耐看。有颜色的手机，单个不耐看，放在一起看着就很舒服，也是这个道理。</p><p>色彩即是物理的、化学的，还是生理的和心理的。物理主要是关于光谱和色彩光波，化学就是染色和载色剂相关的东西，对于艺术美学来说，主要是生理和心理方面的作用，看着舒服就是生理方面的，生理学家埃瓦尔德·赫林就说过眼睛和大脑需要中等灰色，没有的话大脑会处于不安状态。</p><p>这种灰色是可以通过色彩调合而成，最简单的调合方式就是互补色加白色。</p><h2 id="互补色"><a href="#互补色" class="headerlink" title="互补色"></a>互补色</h2><p>那么什么是互补色呢。灰色好理解，互补色可能就比较复杂些了。严谨点的理论上通过色轮可以获取不同数量的互补颜色组合。比如双色互补是色轮上的直线段两端的颜色，三色互补是色轮上构成等边三角形火等腰三角形的三种色彩，四色互补是色轮上构成正方形或长方形的四种色彩。</p><p>虽然互补色会让画面配色看起来和谐舒服，但是有些艺术作品是需要有冲击性的，又或者有鲜明个性的，不然就不好玩了。因此创作时是不用严格按照互补色来配色，根据个人主观喜好来用色就好，当觉得配的不好时再运用互补色的理论调整好了。</p><h2 id="对比色"><a href="#对比色" class="headerlink" title="对比色"></a>对比色</h2><p>另外，通过对比色可以突出你想突出的内容，有五种常用的色彩对比方法</p><ul><li>色相对比：十二色轮的主色</li><li>明暗对比：黄色最亮，紫色最暗</li><li>冷暖对比：红色和橙色最暖，蓝绿色最冷，风景画中远处色彩较冷</li><li>补色对比：调合后成灰色的颜色对比</li><li>面积对比：颜色所占比例对比</li></ul><h2 id="色彩的意义"><a href="#色彩的意义" class="headerlink" title="色彩的意义"></a>色彩的意义</h2><p>色彩的组合其实和音乐的音阶一样，了解音阶的理论并不能创作出美妙的旋律，了解配色原理和每个颜色也不并能创作出美丽的作品。</p><p>了解色彩只是一切美好的基础，也是好的开端。</p><p>同时色彩的变迁和演变也伴随着历史、文化和艺术的演变，了解更多色彩的知识也能够探索到更多未知的领域，让日子意义感更足些呢。</p><h2 id="江户色"><a href="#江户色" class="headerlink" title="江户色"></a>江户色</h2><p>19世纪50年代，江户时期的艺术品传入欧洲，在欧洲流行起来，巴黎一些前卫的艺术家很喜欢这些艺术品。1886年梵高来到巴黎见到江户浮世绘后对其产生了极大兴趣。</p><p>梵高起初收集浮世绘作品是想在咖啡馆里卖这些作品，结果没人买。梵高作品《铃鼓咖啡馆里的阿戈斯蒂娜·塞迦陀利》中可以看到咖啡馆上挂着浮世绘艺伎图。</p><p>虽然梵高没有从浮世绘中获取收入，却从其中获取了创作灵感。他临摹了歌川广重的《开花的李树园》和《大桥安宅骤雨》，还有溪斋英泉的《身穿云龙打挂的花魁》。</p><p>梵高《包扎着耳朵的自画像》这张自画像中墙上挂着的是佐藤虎清的《艺者与富士》。梵高曾表示自己很喜欢葛饰北斋的《神奈川冲浪里》，而后创作了最著名的《星月夜》，其中旋转的星云和神奈川冲浪里的浪非常神似。</p><p>梵高曾经说过：“如果你研究日本艺术，你看到的是一个充满智慧、哲思和悟性的人将时间用来做什么呢？研究地球与月亮的距离？不。研究俾斯麦政策？不。他研究一片草叶。这难道不是日本人教给我们的真正的宗教吗?他们简单地生活在自然之中如同花儿一样。”</p><p>我喜欢梵高的配色，同时也喜欢江户时代浮世绘画中的颜色，因此我打算先从江户时代的颜色入手，先做好研究。</p><p>我找了200种当时流行的颜色，颜气江户 APP 目前就内置了这些颜色，并加入了颜色的名字的来源。江户色名主要取自植物、动物、自然现象以及歌舞伎演员等。透过这些色名的来源，我发现还能够了解到江户时期的人们生活文化自然的方方面面。</p><p>举几个由歌舞伎演员名命名的颜色的例子，比如団十郎茶、梅幸茶、路考茶、芝翫茶、璃寛茶。</p><p>団十郎茶是歌舞伎役者市川團十郎爱使用的颜色，成田屋的标志，是一种偏红的棕色。艺荒事（武戏）代表剧“暂”里所用的服装颜色，还有温泉猴子的脸和柿饼也是这种颜色。</p><p>梅幸茶是歌舞伎大师初代尾上菊五郎最喜欢的颜色，颜色名来自菊五郎的俳句名梅幸。</p><p>路考茶是江戸的歌舞伎役者二代目瀬川菊之丞襲名王子路考喜欢的颜色，江户各地女性争相模仿，浮世絵美人衣服很多用的也是这个颜色。</p><p>芝翫茶是大阪花形役者三代目中村歌右衛門喜欢的颜色，呈偏淡的红棕色，芝翫是他的俳名。</p><p>璃寛茶是歌舞伎演员二世嵐吉三郎最喜欢的舞台衣裳的颜色，他的俳句叫瑠寛。虎河豚是一种高级鱼，就是璃寛茶色。</p><p>歌舞伎的演员成了明星和时尚的领导者，庶民喜欢把歌舞伎演员喜欢的颜色叫做役者色，将这些颜色衣裳穿在自己身上，会觉得自己很时尚。</p><p>另外，江户时代颜色有个最显著的特色，那就是茶色和鼠色很多，统称四十八茶百鼠。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/edocolorapp/01.png" class="lozad post-image"src="/uploads/edocolorapp/01.png"></p><p>江户中期富裕的商人越来越多，生活变得奢侈起来，更多钱用在了华丽颜色的服饰上，幕府为了避免攀比和浪费，因此提倡节俭，并颁布了奢侈禁止令，让更多的钱用在江户的城市发展上。这样一些以前代表低身份的茶色和鼠色被玩出了花，出现了很多新的颜色，这些颜色变成了流行时尚色。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;看过我前面博客的同学会发现我很喜欢自己画些配图，每次给画配色都会有些新的体会，却不知道是什么，于是每次都要经过一轮新的摸爬滚打才能调到自己满
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="App" scheme="https://starming.com/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>小册子之 SwiftUI 动画</title>
    <link href="https://starming.com/2024/05/25/pamphlet-series-animation/"/>
    <id>https://starming.com/2024/05/25/pamphlet-series-animation/</id>
    <published>2024-05-25T11:20:09.000Z</published>
    <updated>2024-05-25T12:25:18.445Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容已整理到小册子中，小册子代码在 <a href="https://github.com/ming1016/SwiftPamphletApp">Github</a> 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">“戴铭的开发小册子”</a>应用(98元)，来跟踪查看本文内容新增和更新。</p><p>本文属于小册子系列中的一篇，已发布系列文章有：</p><ul><li><a href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/">小册子之如何使用 SwiftData 开发 SwiftUI 应用</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-widget/">小册子之简说 Widget 小组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-listdataview/">小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-layout/">小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-form/">小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</a></li><li>【本篇】<a href="https://starming.com/2024/05/25/pamphlet-series-animation/">小册子之 SwiftUI 动画</a></li></ul><h2 id="SwiftUI动画"><a href="#SwiftUI动画" class="headerlink" title="SwiftUI动画"></a>SwiftUI动画</h2><p>SwiftUI 里实现动画的方式包括有 .animation 隐式动画、withAnimation 和 withTransaction 显示动画、matchedGeometryEffect Hero 动画和 TimelineView 等。</p><p>示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayAnimation</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isChange <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> anis<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token class-name">Animation</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string-literal"><span class="token string">"p1"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p2"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">linear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p3"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">interpolatingSpring</span><span class="token punctuation">(</span>stiffness<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> damping<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p4"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p5"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">easeIn</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p6"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">easeOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p7"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">interactiveSpring</span><span class="token punctuation">(</span>response<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> dampingFraction<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> blendDuration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p8"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"p9"</span></span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">.</span><span class="token function">repeatCount</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selection <span class="token operator">=</span> <span class="token number">1</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// animation 隐式动画和 withAnimation 显示动画</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span>isChange <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"另一种状态"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"一种状态"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span>easeInOut<span class="token punctuation">,</span> value<span class="token punctuation">:</span> isChange<span class="token punctuation">)</span> <span class="token comment">// 受限的隐式动画，只绑定某个值。</span>            <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                <span class="token comment">// 使用 withAnimation 就是显式动画，效果等同 withTransaction(Transaction(animation: .default))</span>                withAnimation <span class="token punctuation">&#123;</span>                    isChange<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">// 设置 Transaction。和隐式动画共存时，优先执行 withAnimation 或 Transaction。</span>                <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">linear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                t<span class="token punctuation">.</span>disablesAnimations <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 用来禁用隐式动画</span>                <span class="token function">withTransaction</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    isChange<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end onHover</span>                <span class="token class-name">LazyVGrid</span><span class="token punctuation">(</span>columns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">adaptive</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> isChange <span class="token operator">?</span> <span class="token number">60</span> <span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">(</span>anis<span class="token punctuation">.</span>keys<span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span>anis<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> isChange<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>            isChange<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> isChange <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"pause.fill"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"play.fill"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">renderingMode</span><span class="token punctuation">(</span><span class="token punctuation">.</span>original<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>                <span class="token comment">// matchedGeometryEffect 的使用</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"后台"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>            placeStayView            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"前台"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>            placeShowView        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>                <span class="token comment">// 通过使用相同 matchedGeometryEffect 的 id，绑定两个元素变化。</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> isChange <span class="token punctuation">&#123;</span>                <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>pink<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"g1"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"转换"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">linear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">2.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    isChange<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token operator">!</span>isChange <span class="token punctuation">&#123;</span>                <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>orange<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"g1"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p1"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token operator">!</span>isChange <span class="token punctuation">&#123;</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p19"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"g1"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p1"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// 使用 isSource，作为移动到相同 matchedGeometryEffect id 的方法。</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p19"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> isChange <span class="token operator">?</span> <span class="token number">100</span> <span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> isChange <span class="token operator">?</span> <span class="token number">100</span> <span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> isChange <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"g2"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">,</span> isSource<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                        <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p19"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"g2"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>                                <span class="token comment">// 点击跟随的效果</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">...</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> i <span class="token operator">==</span> selection <span class="token operator">?</span> <span class="token number">200</span> <span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"h</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                    <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                        withAnimation <span class="token punctuation">&#123;</span>                            selection <span class="token operator">=</span> i                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>            <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>pink<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"h</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">selection</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">,</span> isSource<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>                <span class="token comment">// matchedGeometryEffect 还可以应用到 List 中，通过 Array enumerated 获得 index 作为 matchedGeometryEffect 的 id。右侧固定按钮可以直接让对应 id 的视图滚动到固定按钮的位置</span>                        <span class="token comment">// TimelineView</span>        <span class="token class-name">TimelineView</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">periodic</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> <span class="token punctuation">.</span>now<span class="token punctuation">,</span> by<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> t <span class="token keyword">in</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">t<span class="token punctuation">.</span>date</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token class-name">HStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">let</span> e <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"p</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token class-name">Int</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token operator">...</span><span class="token number">30</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">.</span><span class="token function">repeatCount</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> e<span class="token punctuation">)</span>                                <span class="token class-name">TimelineSubView</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> t<span class="token punctuation">.</span>date<span class="token punctuation">)</span> <span class="token comment">// 需要传入 timeline 的时间给子视图才能够起作用。</span>                                <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>                <span class="token comment">// matchedGeometryEffect</span>        <span class="token comment">/// TimelineScheduler 的使用，TimelineScheduler 有以下类型</span>        <span class="token comment">/// .animation：制定更新的频率，可以控制暂停</span>        <span class="token comment">/// .everyMinute：每分钟更新一次</span>        <span class="token comment">/// .explicit：所有要更新的放到一个数组里</span>        <span class="token comment">/// .periodic：设置开始时间和更新频率</span>        <span class="token comment">/// 也可以自定义 TimelineScheduler</span>        <span class="token class-name">TimelineView</span><span class="token punctuation">(</span><span class="token punctuation">.</span>everySecond<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> t <span class="token keyword">in</span>            <span class="token keyword">let</span> e <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"p</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token class-name">Int</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token operator">...</span><span class="token number">30</span><span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>                <span class="token comment">// 自定义的 TimelineScheduler</span>        <span class="token class-name">TimelineView</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">everyLoop</span><span class="token punctuation">(</span>timeOffsets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.2</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> t <span class="token keyword">in</span>            <span class="token class-name">TimelineSubView</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> t<span class="token punctuation">.</span>date<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// MARK: - TimelineSubView</span>    <span class="token keyword">struct</span> <span class="token class-name">TimelineSubView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> date <span class="token punctuation">:</span> <span class="token class-name">Date</span>        <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"let's go"</span></span>        <span class="token comment">// 顺序从数组中取值，取完再重头开始</span>        <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> idx<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">1</span>        <span class="token keyword">func</span> <span class="token function-definition function">advanceIndex</span><span class="token punctuation">(</span>count<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            idx <span class="token operator">=</span> <span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> count            <span class="token keyword">if</span> idx <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">&#123;</span> idx <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>                <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">HStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">idx</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeIn</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> date<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> date<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> newValue <span class="token keyword">in</span>                        <span class="token function">advanceIndex</span><span class="token punctuation">(</span>count<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>                        s <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">date<span class="token punctuation">.</span>hour</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">date<span class="token punctuation">.</span>minute</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">:</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">date<span class="token punctuation">.</span>second</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>                        <span class="token function">advanceIndex</span><span class="token punctuation">(</span>count<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                                    <span class="token class-name">Text</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// MARK: - 用 matchedGeometryEffect 做动画</span>    <span class="token comment">/// matchedGeometryEffect 可以无缝的将一个图像变成另外一个图像。</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> placeStayItems <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"p1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"p2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"p3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"p4"</span></span><span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> placeShowItems<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token attribute atrule">@Namespace</span> <span class="token keyword">private</span> <span class="token keyword">var</span> mgeStore        <span class="token keyword">private</span> <span class="token keyword">var</span> placeStayView<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">LazyVGrid</span><span class="token punctuation">(</span>columns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">adaptive</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>placeStayItems<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> s<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                    <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                        withAnimation <span class="token punctuation">&#123;</span>                            placeStayItems<span class="token punctuation">.</span>removeAll <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span> <span class="token operator">==</span> s <span class="token punctuation">&#125;</span>                            placeShowItems<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end ForEach</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end LazyVGrid</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// private var placeStayView</span>        <span class="token keyword">private</span> <span class="token keyword">var</span> placeShowView<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">LazyVGrid</span><span class="token punctuation">(</span>columns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">adaptive</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>placeShowItems<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> s<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> mgeStore<span class="token punctuation">)</span>                    <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                        withAnimation <span class="token punctuation">&#123;</span>                            placeShowItems<span class="token punctuation">.</span>removeAll <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span> <span class="token operator">==</span> s <span class="token punctuation">&#125;</span>                            placeStayItems<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>white<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end ForEach</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end LazyVGrid</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end private var placeShowView</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end struct PlayAnimation</span><span class="token comment">// MARK: - 扩展 TimelineSchedule</span><span class="token keyword">extension</span> <span class="token class-name">TimelineSchedule</span> <span class="token keyword">where</span> <span class="token keyword">Self</span> <span class="token operator">==</span> <span class="token class-name">PeriodicTimelineSchedule</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> everySecond<span class="token punctuation">:</span> <span class="token class-name">PeriodicTimelineSchedule</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">get</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> <span class="token punctuation">.</span>now<span class="token punctuation">,</span> by<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 自定义一个 TimelineSchedule</span><span class="token comment">// timeOffsets 用完，就会再重头重新再来一遍</span><span class="token keyword">struct</span> <span class="token class-name">PCLoopTimelineSchedule</span><span class="token punctuation">:</span> <span class="token class-name">TimelineSchedule</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> timeOffsets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">TimeInterval</span><span class="token punctuation">]</span>        <span class="token keyword">func</span> <span class="token function-definition function">entries</span><span class="token punctuation">(</span>from startDate<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">,</span> mode<span class="token punctuation">:</span> <span class="token class-name">TimelineScheduleMode</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Entries</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Entries</span><span class="token punctuation">(</span>last<span class="token punctuation">:</span> startDate<span class="token punctuation">,</span> offsets<span class="token punctuation">:</span> timeOffsets<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">struct</span> <span class="token class-name">Entries</span><span class="token punctuation">:</span> <span class="token class-name">Sequence</span><span class="token punctuation">,</span> <span class="token class-name">IteratorProtocol</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> last<span class="token punctuation">:</span> <span class="token class-name">Date</span>        <span class="token keyword">let</span> offsets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">TimeInterval</span><span class="token punctuation">]</span>        <span class="token keyword">var</span> idx<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>        <span class="token keyword">mutating</span> <span class="token keyword">func</span> <span class="token function-definition function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Date</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>            idx <span class="token operator">=</span> <span class="token punctuation">(</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> offsets<span class="token punctuation">.</span>count            last <span class="token operator">=</span> last<span class="token punctuation">.</span><span class="token function">addingTimeInterval</span><span class="token punctuation">(</span>offsets<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> last        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end Struct Entries</span><span class="token punctuation">&#125;</span><span class="token comment">// 为自定义的 PCLoopTimelineSchedule 做一个 TimelineSchedule 的扩展函数，方便使用</span><span class="token keyword">extension</span> <span class="token class-name">TimelineSchedule</span> <span class="token keyword">where</span> <span class="token keyword">Self</span> <span class="token operator">==</span> <span class="token class-name">PCLoopTimelineSchedule</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">everyLoop</span><span class="token punctuation">(</span>timeOffsets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">TimeInterval</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">PCLoopTimelineSchedule</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>timeOffsets<span class="token punctuation">:</span> timeOffsets<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="contentTransition"><a href="#contentTransition" class="headerlink" title="contentTransition"></a>contentTransition</h2><p><code>.contentTransition(.numericText())</code> 修饰符用于在视图内容发生变化时，以数字动画的方式进行过渡。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> filmNumber<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">filmNumber</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">contentTransition</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">numericText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span>easeIn<span class="token punctuation">,</span> value<span class="token punctuation">:</span> filmNumber<span class="token punctuation">)</span>            <span class="token class-name">Stepper</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影数量"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> $filmNumber<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token operator">...</span><span class="token number">100</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>indigo<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="animation修饰符"><a href="#animation修饰符" class="headerlink" title="animation修饰符"></a>animation修饰符</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><p>在 SwiftUI 中，创建一个动画需要以下三个组成部分：</p><ul><li>一个时间曲线函数</li><li>一个声明将状态（或特定的依赖项）与该时间曲线函数关联起来</li><li>一个依赖于该状态（或特定的依赖项）的可动画组件</li></ul><p>动画的接口定义为 <code>Animation(timingFunction:property:duration:delay)</code></p><ul><li><code>timingFunction</code> 是时间曲线函数，可以是线性、缓动、弹簧等</li><li><code>property</code> 是动画属性，可以是颜色、大小、位置等</li><li><code>duration</code> 是动画持续时间</li><li><code>delay</code> 是动画延迟时间</li></ul><p>三种写法</p><ul><li><code>withAnimation(_:_:)</code> 全局应用</li><li><code>animation(_:value:)</code> 应用于 View</li><li><code>animation(_:)</code> 应用于绑定的变量</li></ul><p>第一种</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    myProperty <span class="token operator">=</span> newValue<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>第二种</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">View</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> myProperty<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第三种</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">1.0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">PosterView</span><span class="token punctuation">(</span>scale<span class="token punctuation">:</span> $scale<span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">linear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PosterView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>            <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>                scale <span class="token operator">=</span> <span class="token number">1.5</span>            <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们创建了一个 <code>MovieView</code>，它有一个状态变量 <code>scale</code>。当 <code>scale</code> 的值改变时，<code>PosterView</code> 中的海报图片会以线性动画的方式进行缩放。当 <code>PosterView</code> 出现时，<code>scale</code> 的值会改变为 1.5，因此海报图片会以线性动画的方式放大到 1.5 倍。</p><p>在 SwiftUI 中，我们也可以创建一个自定义的 <code>AnimatableModifier</code> 来实现对图文卡片大小的动画处理。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isSmall <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">aspectRatio</span><span class="token punctuation">(</span>contentMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>fit<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">rect</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>bold<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">animatableCard</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> isSmall <span class="token operator">?</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>            <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                isSmall<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">AnimatableCardModifier</span><span class="token punctuation">:</span> <span class="token class-name">AnimatableModifier</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> size<span class="token punctuation">:</span> <span class="token class-name">CGSize</span>    <span class="token keyword">var</span> color<span class="token punctuation">:</span> <span class="token class-name">Color</span> <span class="token operator">=</span> <span class="token punctuation">.</span>white        <span class="token keyword">var</span> animatableData<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">.</span><span class="token class-name">AnimatableData</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">get</span> <span class="token punctuation">&#123;</span> <span class="token class-name">CGSize</span><span class="token punctuation">.</span><span class="token class-name">AnimatableData</span><span class="token punctuation">(</span>size<span class="token punctuation">.</span>width<span class="token punctuation">,</span> size<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>        <span class="token keyword">set</span> <span class="token punctuation">&#123;</span> size <span class="token operator">=</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> newValue<span class="token punctuation">.</span>first<span class="token punctuation">,</span> height<span class="token punctuation">:</span> newValue<span class="token punctuation">.</span>second<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">func</span> <span class="token function-definition function">body</span><span class="token punctuation">(</span>content<span class="token punctuation">:</span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        content            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> size<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> size<span class="token punctuation">.</span>height<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">animatableCard</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">,</span>                        color<span class="token punctuation">:</span> <span class="token class-name">Color</span> <span class="token operator">=</span> <span class="token punctuation">.</span>white<span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">modifier</span><span class="token punctuation">(</span><span class="token class-name">AnimatableCardModifier</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> size<span class="token punctuation">,</span>                                             color<span class="token punctuation">:</span> color<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SwiftUI 内置了许多动画过渡函数，主要分为四类：</p><ul><li>时间曲线动画函数</li><li>弹簧动画函数</li><li>高阶动画函数</li><li>自定义动画函数</li></ul><h3 id="时间曲线动画函数"><a href="#时间曲线动画函数" class="headerlink" title="时间曲线动画函数"></a>时间曲线动画函数</h3><p>时间曲线函数决定了动画的速度如何随时间变化，这对于动画的自然感觉非常重要。</p><p>SwiftUI 提供了以下几种预设的时间曲线函数：</p><ul><li><code>linear</code>：线性动画，动画速度始终保持不变。</li><li><code>easeIn</code>：动画开始时速度较慢，然后逐渐加速。</li><li><code>easeOut</code>：动画开始时速度较快，然后逐渐减速。</li><li><code>easeInOut</code>：动画开始和结束时速度较慢，中间阶段速度较快。</li></ul><p>除此之外，SwiftUI 还提供了 <code>timingCurve</code> 函数，可以通过二次曲线或 Bézier 曲线来自定义插值函数，实现更复杂的动画效果。</p><p>以下是代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">1.0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>            <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                scale <span class="token operator">=</span> <span class="token number">1.5</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们创建了一个 <code>MovieView</code>，它包含一个电影标题和一个电影海报。当视图出现时，海报的大小会以 <code>easeInOut</code> 的方式在 1 秒内放大到 1.5 倍。</p><h3 id="弹簧动画函数"><a href="#弹簧动画函数" class="headerlink" title="弹簧动画函数"></a>弹簧动画函数</h3><p>弹簧动画函数可以模拟物理世界中的弹簧运动，使动画看起来更加自然和生动。</p><p>SwiftUI 提供了以下几种预设的弹簧动画函数：</p><ul><li><code>smooth</code>：平滑的弹簧动画，动画速度逐渐减慢，直到停止。</li><li><code>snappy</code>：快速的弹簧动画，动画速度快速减慢，然后停止。</li><li><code>bouncy</code>：弹跳的弹簧动画，动画在结束时会有一些弹跳效果。</li></ul><p>除此之外，SwiftUI 还提供了 <code>spring</code> 函数，可以自定义弹簧动画的持续时间、弹跳度和混合持续时间，实现更复杂的弹簧动画效果。</p><p>以下是代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">1.0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>            <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span>response<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> dampingFraction<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> blendDuration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                scale <span class="token operator">=</span> <span class="token number">1.5</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们创建了一个 <code>MovieView</code>，它包含一个电影标题和一个电影海报。当视图出现时，海报的大小会以自定义的弹簧动画方式在 0.5 秒内放大到 1.5 倍。</p><h3 id="高阶动画函数"><a href="#高阶动画函数" class="headerlink" title="高阶动画函数"></a>高阶动画函数</h3><p>高级动画函数可以在基础动画函数的基础上，添加延迟、重复、翻转和速度等功能，使动画效果更加丰富和复杂。</p><p>以下是这些函数的简单介绍：</p><ul><li><code>func delay(TimeInterval) -&gt; Animation</code>：此函数可以使动画在指定的时间间隔后开始。</li><li><code>func repeatCount(Int, autoreverses: Bool) -&gt; Animation</code>：此函数可以使动画重复指定的次数。如果 <code>autoreverses</code> 参数为 <code>true</code>，则每次重复时动画都会翻转。</li><li><code>func repeatForever(autoreverses: Bool) -&gt; Animation</code>：此函数可以使动画无限次重复。如果 <code>autoreverses</code> 参数为 <code>true</code>，则每次重复时动画都会翻转。</li><li><code>func speed(Double) -&gt; Animation</code>：此函数可以调整动画的速度，使其比默认速度快或慢。</li></ul><p>以下是代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">MovieView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">1.0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"movie_poster"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>            <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token class-name">Animation</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">repeatCount</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> autoreverses<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">speed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                scale <span class="token operator">=</span> <span class="token number">1.5</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们创建了一个 <code>MovieView</code>，它包含一个电影标题和一个电影海报。当视图出现时，海报的大小会以 <code>easeInOut</code> 的方式在 1 秒内放大到 1.5 倍，然后在 0.5 秒后开始，重复 3 次，每次重复都会翻转，速度是默认速度的 2 倍。</p><h3 id="自定义动画函数"><a href="#自定义动画函数" class="headerlink" title="自定义动画函数"></a>自定义动画函数</h3><p>SwiftUI 可以通过实现 <code>CustomAnimation</code> 协议来完全自定义插值算法。</p><p>以下是一个简单的 <code>Linear</code> 动画函数的实现：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">1.0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">myLinear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> scale<span class="token punctuation">)</span> <span class="token comment">// use myLinear animation</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>            scale <span class="token operator">=</span> <span class="token number">1.5</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">MyLinearAnimation</span><span class="token punctuation">:</span> <span class="token class-name">CustomAnimation</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> duration<span class="token punctuation">:</span> <span class="token class-name">TimeInterval</span>  <span class="token keyword">func</span> <span class="token function-definition function">animate</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">></span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">V</span><span class="token punctuation">,</span> time<span class="token punctuation">:</span> <span class="token class-name">TimeInterval</span><span class="token punctuation">,</span> context<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">AnimationContext</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">V</span><span class="token operator">?</span> <span class="token keyword">where</span> <span class="token class-name">V</span> <span class="token punctuation">:</span> <span class="token class-name">VectorArithmetic</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> time <span class="token operator">&lt;=</span> duration <span class="token punctuation">&#123;</span>      value<span class="token punctuation">.</span><span class="token function">scaled</span><span class="token punctuation">(</span>by<span class="token punctuation">:</span> time <span class="token operator">/</span> duration<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token nil constant">nil</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">func</span> <span class="token function-definition function">velocity</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token punctuation">:</span> <span class="token class-name">VectorArithmetic</span><span class="token operator">></span><span class="token punctuation">(</span>    value<span class="token punctuation">:</span> <span class="token class-name">V</span><span class="token punctuation">,</span> time<span class="token punctuation">:</span> <span class="token class-name">TimeInterval</span><span class="token punctuation">,</span> context<span class="token punctuation">:</span> <span class="token class-name">AnimationContext</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">></span>  <span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">V</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>    value<span class="token punctuation">.</span><span class="token function">scaled</span><span class="token punctuation">(</span>by<span class="token punctuation">:</span> <span class="token number">1.0</span> <span class="token operator">/</span> duration<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">func</span> <span class="token function-definition function">shouldMerge</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">></span><span class="token punctuation">(</span>previous<span class="token punctuation">:</span> <span class="token class-name">Animation</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">V</span><span class="token punctuation">,</span> time<span class="token punctuation">:</span> <span class="token class-name">TimeInterval</span><span class="token punctuation">,</span> context<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">AnimationContext</span><span class="token operator">&lt;</span><span class="token class-name">V</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Bool</span> <span class="token keyword">where</span> <span class="token class-name">V</span> <span class="token punctuation">:</span> <span class="token class-name">VectorArithmetic</span> <span class="token punctuation">&#123;</span>    <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">Animation</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">myLinear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token class-name">TimeInterval</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Animation</span> <span class="token punctuation">&#123;</span> <span class="token comment">// define function like linear</span>    <span class="token keyword">return</span> <span class="token class-name">Animation</span><span class="token punctuation">(</span><span class="token class-name">MyLinearAnimation</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> duration<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Transaction"><a href="#Transaction" class="headerlink" title="Transaction"></a>Transaction</h2><h3 id="Transaction-使用指南"><a href="#Transaction-使用指南" class="headerlink" title="Transaction 使用指南"></a>Transaction 使用指南</h3><p>这段内容主要介绍了 SwiftUI 中的 <code>Transaction</code> 和 <code>withTransaction</code>。<code>Transaction</code> 是 SwiftUI 中用于控制动画的一种方式，它可以用来定义动画的详细参数，如动画类型、持续时间等。<code>withTransaction</code> 是一个函数，它接受一个 <code>Transaction</code> 实例和一个闭包作为参数，闭包中的代码将在这个 <code>Transaction</code> 的上下文中执行。</p><p>以下是一个使用 <code>Transaction</code> 和 <code>withTransaction</code> 的代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">1.0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> transaction <span class="token operator">=</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token function">withTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                scale <span class="token operator">=</span> <span class="token number">1.5</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们创建了一个 <code>MovieView</code>，它包含一个电影标题和一个电影海报。当视图出现时，我们创建了一个 <code>Transaction</code>，并设置了动画类型为 <code>easeInOut</code>，持续时间为 1 秒。然后我们在 <code>withTransaction</code> 的闭包中改变 <code>scale</code> 的值，这样海报的大小就会以 <code>easeInOut</code> 的方式在 1 秒内放大到 1.5 倍。</p><h3 id="使用-Transaction-和-withTransaction"><a href="#使用-Transaction-和-withTransaction" class="headerlink" title="使用 Transaction 和 withTransaction"></a>使用 <code>Transaction</code> 和 <code>withTransaction</code></h3><p>SwiftUI 中 <code>Transaction</code> 的 <code>disablesAnimations</code> 和 <code>isContinuous</code> 属性，以及 <code>transaction(_:)</code> 方法怎么使用？</p><p><code>disablesAnimations</code> 属性可以用来禁止动画，<code>isContinuous</code> 属性可以用来标识一个连续的交互（例如拖动）。<code>transaction(_:)</code> 方法可以用来创建一个新的 <code>Transaction</code> 并在其闭包中设置动画参数。</p><p>以下是一个使用这些特性的代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> size<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">100</span>    <span class="token attribute atrule">@GestureState</span> <span class="token keyword">var</span> dragSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"fearless"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> size<span class="token punctuation">,</span> height<span class="token punctuation">:</span> size<span class="token punctuation">)</span> <span class="token comment">// 使用 size 控制尺寸，而非位置</span>                <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> size<span class="token punctuation">)</span> <span class="token comment">// 使用弹簧动画</span>                <span class="token punctuation">.</span>transaction <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>isContinuous <span class="token punctuation">&#123;</span>                        <span class="token short-argument">$0</span><span class="token punctuation">.</span>animation <span class="token operator">=</span> <span class="token nil constant">nil</span> <span class="token comment">// 拖动时，不设置动画</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        <span class="token short-argument">$0</span><span class="token punctuation">.</span>animation <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 使用弹簧动画</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">gesture</span><span class="token punctuation">(</span>                    <span class="token class-name">DragGesture</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">updating</span><span class="token punctuation">(</span>$dragSize<span class="token punctuation">,</span> body<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> current<span class="token punctuation">,</span> state<span class="token punctuation">,</span> transaction <span class="token keyword">in</span>                            state <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> current<span class="token punctuation">.</span>translation<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> current<span class="token punctuation">.</span>translation<span class="token punctuation">.</span>height<span class="token punctuation">)</span>                            transaction<span class="token punctuation">.</span>isContinuous <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 拖动时，设置标识</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">)</span>            <span class="token class-name">Stepper</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"尺寸: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">size</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> $size<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token operator">...</span><span class="token number">200</span><span class="token punctuation">)</span> <span class="token comment">// 使用 Stepper 替代 Slider</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"开始动画"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> transaction <span class="token operator">=</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">if</span> size <span class="token operator">&lt;</span> <span class="token number">150</span> <span class="token punctuation">&#123;</span> transaction<span class="token punctuation">.</span>disablesAnimations <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token punctuation">&#125;</span>                <span class="token function">withTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    size <span class="token operator">=</span> <span class="token number">50</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，当 <code>size</code> 小于 150 时，我们禁用动画。通过 <code>.isContinuous</code> 属性，我们可以标识一个连续的交互（例如拖动）。在这个示例中，当拖动时，我们禁用动画。通过 <code>transaction(_:)</code> 方法，我们可以创建一个新的 <code>Transaction</code> 并在其中设置动画参数。</p><h3 id="用于视图组件"><a href="#用于视图组件" class="headerlink" title="用于视图组件"></a>用于视图组件</h3><p>大部分 SwiftUI 视图组件都有 <code>transaction(_:)</code> 方法，可以用来设置动画参数。比如 NavigationStack, Sheet, Alert 等。</p><p><code>Transaction</code> 也可以用于 <code>Binding</code> 和 <code>FetchRequest</code>。</p><p>看下面的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> size<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">100</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isBold<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">let</span> animation<span class="token punctuation">:</span> <span class="token class-name">Animation</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token punctuation">.</span>spring    <span class="token keyword">var</span> sizeBinding<span class="token punctuation">:</span> <span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">CGFloat</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> transaction <span class="token operator">=</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> animation<span class="token punctuation">)</span>        <span class="token keyword">return</span> $size<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> isBoldBinding<span class="token punctuation">:</span> <span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">Bool</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> transaction <span class="token operator">=</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> animation<span class="token punctuation">)</span>        <span class="token keyword">return</span> $isBold<span class="token punctuation">.</span><span class="token function">transaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"film"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> size<span class="token punctuation">,</span> height<span class="token punctuation">:</span> size<span class="token punctuation">)</span> <span class="token comment">// 使用 size 控制尺寸，而非位置</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> size<span class="token punctuation">,</span> weight<span class="token punctuation">:</span> isBold <span class="token operator">?</span> <span class="token punctuation">.</span>bold <span class="token punctuation">:</span> <span class="token punctuation">.</span>regular<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 使用 isBold 控制粗细</span>            <span class="token class-name">Stepper</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"尺寸: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">size</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> sizeBinding<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token operator">...</span><span class="token number">200</span><span class="token punctuation">)</span>            <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"粗细"</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> isBoldBinding<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="传播行为"><a href="#传播行为" class="headerlink" title="传播行为"></a>传播行为</h3><p><code>Transaction</code> 可以用于控制动画的传播行为。在 SwiftUI 中，动画可以在视图层次结构中传播，这意味着一个视图的动画效果可能会影响到其子视图。<code>Transaction</code> 可以用来控制动画的传播行为，例如禁用动画、设置动画类型等。</p><p>以下是一个使用 <code>Transaction</code> 控制动画传播行为的代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">enum</span> <span class="token class-name">BookStatus</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> small<span class="token punctuation">,</span> medium<span class="token punctuation">,</span> large<span class="token punctuation">,</span> extraLarge<span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@ViewBuilder</span> <span class="token keyword">func</span> <span class="token function-definition function">debugAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        transaction <span class="token punctuation">&#123;</span>            <span class="token function">debugPrint</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">.</span>animation <span class="token operator">??</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> status<span class="token punctuation">:</span> <span class="token class-name">BookStatus</span> <span class="token operator">=</span> <span class="token punctuation">.</span>small    <span class="token keyword">var</span> animation<span class="token punctuation">:</span> <span class="token class-name">Animation</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> status <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>small<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">.</span>linear        <span class="token keyword">case</span> <span class="token punctuation">.</span>medium<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">.</span>easeIn        <span class="token keyword">case</span> <span class="token punctuation">.</span>large<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">.</span>easeOut        <span class="token keyword">case</span> <span class="token punctuation">.</span>extraLarge<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> size<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> status <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>small<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token number">100</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>medium<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token number">200</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>large<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token number">300</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>extraLarge<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token number">400</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"book"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> size<span class="token punctuation">,</span> height<span class="token punctuation">:</span> size<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">debugAnimation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 查看动画变化信息</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"改变状态"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> transaction <span class="token operator">=</span> <span class="token class-name">Transaction</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                <span class="token function">withTransaction</span><span class="token punctuation">(</span>transaction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">switch</span> <span class="token keyword">self</span><span class="token punctuation">.</span>status <span class="token punctuation">&#123;</span>                    <span class="token keyword">case</span> <span class="token punctuation">.</span>small<span class="token punctuation">:</span>                        <span class="token keyword">self</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token punctuation">.</span>medium                    <span class="token keyword">case</span> <span class="token punctuation">.</span>medium<span class="token punctuation">:</span>                        <span class="token keyword">self</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token punctuation">.</span>large                    <span class="token keyword">case</span> <span class="token punctuation">.</span>large<span class="token punctuation">:</span>                        <span class="token keyword">self</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token punctuation">.</span>extraLarge                    <span class="token keyword">case</span> <span class="token punctuation">.</span>extraLarge<span class="token punctuation">:</span>                        <span class="token keyword">self</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token punctuation">.</span>small                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个示例中，我们创建了一个 <code>BookView</code>，它包含一个书籍图标。我们通过 <code>BookStatus</code> 枚举来控制书籍的大小，通过 <code>animation</code> 计算属性来根据状态返回不同的动画类型。在 <code>withTransaction</code> 中，我们根据状态创建一个新的 <code>Transaction</code>，并在其中设置动画类型。通过 <code>debugAnimation</code> 修饰符，我们可以查看动画的变化信息。</p><h3 id="TransactionKey"><a href="#TransactionKey" class="headerlink" title="TransactionKey"></a>TransactionKey</h3><p>TransactionKey 是一种在 SwiftUI 的视图更新过程中传递额外信息的机制，它可以让你在不同的视图和视图更新之间共享数据。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> store <span class="token operator">=</span> <span class="token class-name">MovieStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">saturation</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span>isPlaying <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// 滤镜变化</span>                <span class="token punctuation">.</span>transaction <span class="token punctuation">&#123;</span>                    <span class="token short-argument">$0</span><span class="token punctuation">.</span>animation <span class="token operator">=</span> <span class="token short-argument">$0</span><span class="token punctuation">[</span><span class="token class-name">StatusKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span><span class="token punctuation">.</span>animation                <span class="token punctuation">&#125;</span>            <span class="token class-name">PlayView</span><span class="token punctuation">(</span>store<span class="token punctuation">:</span> store<span class="token punctuation">)</span>            <span class="token class-name">PauseView</span><span class="token punctuation">(</span>store<span class="token punctuation">:</span> store<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PlayView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> store<span class="token punctuation">:</span> <span class="token class-name">MovieStore</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"播放"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">withTransaction</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>status<span class="token punctuation">,</span> <span class="token punctuation">.</span>playing<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                store<span class="token punctuation">.</span>isPlaying<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PauseView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> store<span class="token punctuation">:</span> <span class="token class-name">MovieStore</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"暂停"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">withTransaction</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>status<span class="token punctuation">,</span> <span class="token punctuation">.</span>paused<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                store<span class="token punctuation">.</span>isPlaying<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token attribute atrule">@Observable</span><span class="token keyword">class</span> <span class="token class-name">MovieStore</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> isPlaying <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token keyword">enum</span> <span class="token class-name">MovieStatus</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> playing    <span class="token keyword">case</span> paused    <span class="token keyword">case</span> stopped    <span class="token keyword">var</span> animation<span class="token punctuation">:</span> <span class="token class-name">Animation</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> <span class="token keyword">self</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>playing<span class="token punctuation">:</span>            <span class="token class-name">Animation</span><span class="token punctuation">.</span><span class="token function">linear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>paused<span class="token punctuation">:</span>            <span class="token nil constant">nil</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>stopped<span class="token punctuation">:</span>            <span class="token class-name">Animation</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">StatusKey</span><span class="token punctuation">:</span> <span class="token class-name">TransactionKey</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> defaultValue<span class="token punctuation">:</span> <span class="token class-name">MovieStatus</span> <span class="token operator">=</span> <span class="token punctuation">.</span>stopped<span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">Transaction</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> status<span class="token punctuation">:</span> <span class="token class-name">MovieStatus</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">get</span> <span class="token punctuation">&#123;</span> <span class="token keyword">self</span><span class="token punctuation">[</span><span class="token class-name">StatusKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span>        <span class="token keyword">set</span> <span class="token punctuation">&#123;</span> <span class="token keyword">self</span><span class="token punctuation">[</span><span class="token class-name">StatusKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span> <span class="token operator">=</span> newValue <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们创建了一个 <code>MovieStore</code> 类，用于存储电影播放状态。我们通过 <code>PlayView</code> 和 <code>PauseView</code> 分别创建了播放和暂停按钮，点击按钮时，我们通过 <code>withTransaction</code> 函数改变了 <code>MovieStore</code> 的 <code>isPlaying</code> 属性，并根据状态设置了动画类型。在 <code>ContentView</code> 中，我们通过 <code>transaction</code> 修饰符设置了动画类型为 <code>MovieStatus</code> 中的动画类型。</p><h3 id="AnyTransition"><a href="#AnyTransition" class="headerlink" title="AnyTransition"></a>AnyTransition</h3><p><code>AnyTransition</code> 是一个用于创建自定义过渡效果的类型，它可以让你定义视图之间的过渡动画。你可以使用 <code>AnyTransition</code> 的 <code>modifier</code> 方法将自定义过渡效果应用到视图上。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token attribute atrule">@StateObject</span> <span class="token keyword">var</span> musicViewModel <span class="token operator">=</span> <span class="token class-name">MusicViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>musicViewModel<span class="token punctuation">.</span>musicNames<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>description<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> musicName <span class="token keyword">in</span>                <span class="token keyword">if</span> musicName <span class="token operator">==</span> musicViewModel<span class="token punctuation">.</span>currentMusic <span class="token punctuation">&#123;</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span>musicName<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">250</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">250</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">.</span>glitch<span class="token punctuation">.</span><span class="token function">combined</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> <span class="token punctuation">.</span>opacity<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Next Music"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                musicViewModel<span class="token punctuation">.</span><span class="token function">selectNextMusic</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">buttonStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>borderedProminent<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">MyTransition</span><span class="token punctuation">:</span> <span class="token class-name">ViewModifier</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> active<span class="token punctuation">:</span> <span class="token class-name">Bool</span>    <span class="token keyword">func</span> <span class="token function-definition function">body</span><span class="token punctuation">(</span>content<span class="token punctuation">:</span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        content            <span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span>active <span class="token operator">?</span> <span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">10</span><span class="token operator">...</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>zero<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> active <span class="token operator">?</span> <span class="token class-name">CGFloat</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">10</span><span class="token operator">...</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> active <span class="token operator">?</span> <span class="token class-name">CGFloat</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">10</span><span class="token operator">...</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">AnyTransition</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> glitch<span class="token punctuation">:</span> <span class="token class-name">AnyTransition</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">AnyTransition</span><span class="token punctuation">.</span><span class="token function">modifier</span><span class="token punctuation">(</span>            active<span class="token punctuation">:</span> <span class="token class-name">MyTransition</span><span class="token punctuation">(</span>active<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            identity<span class="token punctuation">:</span> <span class="token class-name">MyTransition</span><span class="token punctuation">(</span>active<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">MusicViewModel</span><span class="token punctuation">:</span> <span class="token class-name">ObservableObject</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Published</span> <span class="token keyword">var</span> currentMusic <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>        <span class="token keyword">let</span> musicNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"fearless"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"red"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"speaknow"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"lover"</span></span><span class="token punctuation">]</span>        <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        currentMusic <span class="token operator">=</span> musicNames<span class="token punctuation">.</span>first <span class="token operator">??</span> <span class="token string-literal"><span class="token string">"fearless"</span></span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">func</span> <span class="token function-definition function">selectNextMusic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">guard</span> <span class="token keyword">let</span> currentIndex <span class="token operator">=</span> musicNames<span class="token punctuation">.</span><span class="token function">firstIndex</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> currentMusic<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span>        <span class="token punctuation">&#125;</span>                <span class="token keyword">let</span> nextIndex <span class="token operator">=</span> currentIndex <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> musicNames<span class="token punctuation">.</span>count <span class="token operator">?</span> currentIndex <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span>                <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            currentMusic <span class="token operator">=</span> musicNames<span class="token punctuation">[</span>nextIndex<span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们创建了一个 <code>MusicViewModel</code> 类，用于存储音乐播放状态。我们通过 <code>MyTransition</code> 自定义了一个过渡效果，通过 <code>AnyTransition</code> 的 <code>modifier</code> 方法将自定义过渡效果应用到视图上。在 <code>ContentView</code> 中，我们通过 <code>transition</code> 修饰符设置了过渡效果为 <code>glitch</code>，并在点击按钮时切换音乐。</p><h2 id="Matched-Geometry-Effect"><a href="#Matched-Geometry-Effect" class="headerlink" title="Matched Geometry Effect"></a>Matched Geometry Effect</h2><h3 id="位置变化"><a href="#位置变化" class="headerlink" title="位置变化"></a>位置变化</h3><p>Matched Geometry Effect 是一种特殊的动画效果。当你有两个视图，并且你想在一个视图消失，另一个视图出现时，创建一个平滑的过渡动画，你就可以使用这个效果。你只需要给这两个视图添加同样的标识符和命名空间，然后当你删除一个视图并添加另一个视图时，就会自动创建一个动画，让一个视图看起来像是滑动到另一个视图的位置。</p><p>示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@StateObject</span> <span class="token keyword">var</span> viewModel <span class="token operator">=</span> <span class="token class-name">ViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@Namespace</span> <span class="token keyword">var</span> musicSelectionNamespace    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>viewModel<span class="token punctuation">.</span>topMusic<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> viewModel<span class="token punctuation">.</span><span class="token function">selectTopMusic</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Image</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">60</span><span class="token punctuation">)</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">fontDesign</span><span class="token punctuation">(</span><span class="token punctuation">.</span>rounded<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> item<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> musicSelectionNamespace<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>minHeight<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">)</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">250</span><span class="token punctuation">)</span>            <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>viewModel<span class="token punctuation">.</span>bottomMusic<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> viewModel<span class="token punctuation">.</span><span class="token function">selectBottomMusic</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Image</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">90</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">90</span><span class="token punctuation">)</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>bold<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> item<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> musicSelectionNamespace<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>minHeight<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们创建了一个 <code>ContentView</code> 视图，其中包含两个 <code>HStack</code> 视图，分别展示了 <code>viewModel</code> 中的 <code>topMusic</code> 和 <code>bottomMusic</code> 数组。我们为每个 <code>topMusic</code> 和 <code>bottomMusic</code> 元素创建了一个 <code>Button</code> 视图，当用户点击按钮时，会调用 <code>viewModel</code> 中的 <code>selectTopMusic</code> 和 <code>selectBottomMusic</code> 方法。我们使用 <code>matchedGeometryEffect</code> 修饰符为每个 <code>Button</code> 视图添加了一个标识符，这样当用户点击按钮时，就会自动创建一个动画，让一个视图看起来像是滑动到另一个视图的位置。</p><h3 id="大小变化"><a href="#大小变化" class="headerlink" title="大小变化"></a>大小变化</h3><p>Matched Geometry Effect 在大小和位置上都可以进行动画过渡，这样可以让你创建更加复杂的动画效果。</p><p>以下是一个视图大小切换的示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isExpanded<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">private</span> <span class="token keyword">var</span> albumId <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Album"</span></span>        <span class="token attribute atrule">@Namespace</span> <span class="token keyword">var</span> expansionAnimation        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token function">albumView</span><span class="token punctuation">(</span>isExpanded<span class="token punctuation">:</span> isExpanded<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>            withAnimation <span class="token punctuation">&#123;</span>                isExpanded<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@ViewBuilder</span>    <span class="token keyword">func</span> <span class="token function-definition function">albumView</span><span class="token punctuation">(</span>isExpanded<span class="token punctuation">:</span> <span class="token class-name">Bool</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> imageSize <span class="token operator">=</span> isExpanded <span class="token operator">?</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">450</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">)</span>        <span class="token class-name">Image</span><span class="token punctuation">(</span>isExpanded <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"evermore"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"fearless"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">aspectRatio</span><span class="token punctuation">(</span>contentMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>fill<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> imageSize<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> imageSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">clipped</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> albumId<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> expansionAnimation<span class="token punctuation">)</span>            <span class="token punctuation">.</span>overlay <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Taylor Swift"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span>isExpanded <span class="token operator">?</span> <span class="token punctuation">.</span>largeTitle <span class="token punctuation">:</span> <span class="token punctuation">.</span>headline<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fontDesign</span><span class="token punctuation">(</span><span class="token punctuation">.</span>monospaced<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fontDesign</span><span class="token punctuation">(</span><span class="token punctuation">.</span>rounded<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="内容位置变化"><a href="#内容位置变化" class="headerlink" title="内容位置变化"></a>内容位置变化</h3><p>内容位置变化的动画效果。以下是一个内容位置变化的示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> show <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token attribute atrule">@Namespace</span> <span class="token keyword">var</span> placeHolder    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> albumCoverSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> songListSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Taylor Swift，1989年12月13日出生于美国宾夕法尼亚州，美国乡村音乐、流行音乐女歌手、词曲创作人、演员、慈善家。"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fontDesign</span><span class="token punctuation">(</span><span class="token punctuation">.</span>monospaced<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fontDesign</span><span class="token punctuation">(</span><span class="token punctuation">.</span>rounded<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>                <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Color</span><span class="token punctuation">.</span>clear                <span class="token comment">// AlbumCover placeholder</span>                <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Color</span><span class="token punctuation">.</span>clear <span class="token comment">// AlbumCoverView().opacity(0.01)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> albumCoverSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"bottom"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> placeHolder<span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">,</span> isSource<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"top"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> placeHolder<span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">,</span> isSource<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>                    <span class="token class-name">AlbumCoverView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">sizeInfo</span><span class="token punctuation">(</span>$albumCoverSize<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"bottom"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> placeHolder<span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> show <span class="token operator">?</span> <span class="token punctuation">.</span>bottom <span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">,</span> isSource<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>                    <span class="token class-name">SongListView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"top"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> placeHolder<span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> show <span class="token operator">?</span> <span class="token punctuation">.</span>bottom <span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">,</span> isSource<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>                <span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> show<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">overlayButton</span><span class="token punctuation">(</span>show<span class="token punctuation">:</span> $show<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">AlbumCoverView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">aspectRatio</span><span class="token punctuation">(</span>contentMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>fill<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SongListView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Fearless"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Speak Now"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span>            <span class="token comment">// ...</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">overlayButton</span><span class="token punctuation">(</span>show<span class="token punctuation">:</span> <span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">Bool</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    show<span class="token punctuation">.</span>wrappedValue<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"arrow.up.arrow.down.square"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>topTrailing        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">func</span> <span class="token function-definition function">sizeInfo</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> size<span class="token punctuation">:</span> <span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">CGSize</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>            <span class="token class-name">GeometryReader</span> <span class="token punctuation">&#123;</span> geometry <span class="token keyword">in</span>                <span class="token class-name">Color</span><span class="token punctuation">.</span>clear<span class="token punctuation">.</span><span class="token function">preference</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token class-name">SizePreferenceKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> geometry<span class="token punctuation">.</span>size<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">onPreferenceChange</span><span class="token punctuation">(</span><span class="token class-name">SizePreferenceKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> size<span class="token punctuation">.</span>wrappedValue <span class="token operator">=</span> <span class="token short-argument">$0</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SizePreferenceKey</span><span class="token punctuation">:</span> <span class="token class-name">PreferenceKey</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> defaultValue<span class="token punctuation">:</span> <span class="token class-name">CGSize</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">reduce</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">CGSize</span><span class="token punctuation">,</span> nextValue<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGSize</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        value <span class="token operator">=</span> <span class="token function">nextValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们使用 <code>matchedGeometryEffect</code> 修饰符为 <code>AlbumCoverView</code> 和 <code>SongListView</code> 添加了一个标识符，这样当用户点击按钮时，就会自动创建一个动画，让 <code>AlbumCoverView</code> 和 <code>SongListView</code> 看起来像是从一个位置切换到另一个位置。</p><h3 id="点击显示详细信息"><a href="#点击显示详细信息" class="headerlink" title="点击显示详细信息"></a>点击显示详细信息</h3><p>点击显示详细信息的动画效果。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Namespace</span> <span class="token keyword">var</span> animation    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> showDetail <span class="token operator">=</span> <span class="token boolean">false</span>            <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>showDetail<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Taylor Swift"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"artist"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"美国歌手"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"description"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                    <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>black<span class="token punctuation">.</span>gradient<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"background"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                <span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SingerView</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> animation<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>            withAnimation <span class="token punctuation">&#123;</span>                showDetail<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SingerView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> animation<span class="token punctuation">:</span> <span class="token class-name">Namespace</span><span class="token punctuation">.</span><span class="token constant">ID</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Taylor Swift"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"artist"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"美国歌手"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"description"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"泰勒·阿利森·斯威夫特（Taylor Swift），1989年12月13日出生于美国宾夕法尼亚州，美国乡村音乐、流行音乐女歌手、词曲创作人、演员、慈善家。"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>subheadline<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                        <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">rect</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Evermore 是 Taylor Swift 的最新专辑，这是她在 2020 年的第二张专辑，也是她的第九张录音室专辑。"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>subheadline<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> maxHeight<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>            <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>black<span class="token punctuation">.</span>gradient<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"background"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="导航动画"><a href="#导航动画" class="headerlink" title="导航动画"></a>导航动画</h3><p>以下是一个导航动画的示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Namespace</span> <span class="token keyword">var</span> animation    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> selectedManga<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span>            <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>selectedManga <span class="token operator">==</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">MangaListView</span><span class="token punctuation">(</span>animation<span class="token punctuation">:</span> animation<span class="token punctuation">,</span> selectedManga<span class="token punctuation">:</span> $selectedManga<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">MangaDetailView</span><span class="token punctuation">(</span>selectedManga<span class="token punctuation">:</span> $selectedManga<span class="token punctuation">,</span> animation<span class="token punctuation">:</span> animation<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">MangaDetailView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> selectedManga<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>    <span class="token keyword">var</span> animation<span class="token punctuation">:</span> <span class="token class-name">Namespace</span><span class="token punctuation">.</span><span class="token constant">ID</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">selectedManga <span class="token operator">??</span> <span class="token string-literal"><span class="token string">""</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"mangaTitle"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>                        <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    selectedManga <span class="token operator">=</span> <span class="token nil constant">nil</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"返回"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">.</span>gradient<span class="token punctuation">)</span>            <span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> maxHeight<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>            <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token class-name">UIColor</span><span class="token punctuation">.</span>systemTeal<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"background"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">)</span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">MangaListView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> animation<span class="token punctuation">:</span> <span class="token class-name">Namespace</span><span class="token punctuation">.</span><span class="token constant">ID</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> selectedManga<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    selectedManga <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"海贼王"</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"海贼王"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"mangaTitle"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>teal<span class="token punctuation">)</span>            <span class="token punctuation">)</span>                        <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    selectedManga <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"火影忍者"</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"火影忍者"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>mint<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"background"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> animation<span class="token punctuation">)</span>            <span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    selectedManga <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"进击的巨人"</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"进击的巨人"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>orange<span class="token punctuation">)</span>            <span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    selectedManga <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"鬼灭之刃"</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"鬼灭之刃"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>purple<span class="token punctuation">)</span>            <span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    selectedManga <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"我的英雄学院"</span></span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span> <span class="token string-literal"><span class="token string">"我的英雄学院"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title3<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>all<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">)</span>            <span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="geometryGroup"><a href="#geometryGroup" class="headerlink" title="geometryGroup"></a>geometryGroup</h3><p><code>.geometryGroup()</code> 主要用于处理一组视图动画变化时不协调的问题。如果你有一组视图，它们的位置和大小会随着动画变化，你可以使用 <code>.geometryGroup()</code> 修饰符来确保它们的位置和大小保持一致。</p><h2 id="PhaseAnimator"><a href="#PhaseAnimator" class="headerlink" title="PhaseAnimator"></a>PhaseAnimator</h2><p>PhaseAnimator</p><p>以下代码示例演示了如何使用 <code>PhaseAnimator</code> 视图修饰符创建一个动画，该动画通过循环遍历所有动画步骤来连续运行。在这个例子中，我们使用 <code>PhaseAnimator</code> 来创建一个简单的动画，该动画通过循环遍历所有动画步骤来连续运行。当观测值发生变化时，动画会触发一次。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">enum</span> <span class="token class-name">AlbumAnimationPhase</span><span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">CaseIterable</span><span class="token punctuation">,</span> <span class="token class-name">Comparable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> evermore<span class="token punctuation">,</span> fearless<span class="token punctuation">,</span> folklore<span class="token punctuation">,</span> lover<span class="token punctuation">,</span> midnights<span class="token punctuation">,</span> red<span class="token punctuation">,</span> speaknow    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token operator">&lt;</span> <span class="token punctuation">(</span>lhs<span class="token punctuation">:</span> <span class="token class-name">AlbumAnimationPhase</span><span class="token punctuation">,</span> rhs<span class="token punctuation">:</span> <span class="token class-name">AlbumAnimationPhase</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Bool</span> <span class="token punctuation">&#123;</span>        lhs<span class="token punctuation">.</span>rawValue <span class="token operator">&lt;</span> rhs<span class="token punctuation">.</span>rawValue    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> animate<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">PhaseAnimator</span><span class="token punctuation">(</span>                <span class="token class-name">AlbumAnimationPhase</span><span class="token punctuation">.</span>allCases<span class="token punctuation">,</span>                trigger<span class="token punctuation">:</span> animate<span class="token punctuation">,</span>                content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> phase <span class="token keyword">in</span>                    <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">AlbumAnimationPhase</span><span class="token punctuation">.</span>allCases<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> album <span class="token keyword">in</span>                            <span class="token keyword">if</span> phase <span class="token operator">>=</span> album <span class="token punctuation">&#123;</span>                                <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                                    <span class="token class-name">Image</span><span class="token punctuation">(</span>album<span class="token punctuation">.</span>rawValue<span class="token punctuation">)</span>                                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span>                                    <span class="token class-name">Text</span><span class="token punctuation">(</span>album<span class="token punctuation">.</span>rawValue<span class="token punctuation">.</span>capitalized<span class="token punctuation">)</span>                                        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                                <span class="token punctuation">&#125;</span>                                <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">asymmetric</span><span class="token punctuation">(</span>insertion<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>edge<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">)</span><span class="token punctuation">,</span> removal<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>edge<span class="token punctuation">:</span> <span class="token punctuation">.</span>trailing<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> animation<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> phase <span class="token keyword">in</span>                    <span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end ScrollView</span>        <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            animate<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"开始"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上面的代码中，我们首先定义了一个枚举类型 <code>AlbumAnimationPhase</code>，用于表示专辑的不同阶段。然后，我们在 <code>ContentView</code> 视图中创建了一个 <code>PhaseAnimator</code> 视图修饰符，该修饰符接受一个观测值 <code>trigger</code>，用于触发动画。在 <code>content</code> 闭包中，我们遍历所有专辑，并根据当前阶段 <code>phase</code> 来决定是否显示专辑。在 <code>animation</code> 闭包中，我们使用 <code>.spring(duration: 0.5)</code> 创建了一个弹簧动画效果。   </p><h2 id="KeyframeAnimator"><a href="#KeyframeAnimator" class="headerlink" title="KeyframeAnimator"></a>KeyframeAnimator</h2><p><code>KeyframeAnimator</code>是一个在SwiftUI中创建关键帧动画的工具。关键帧动画是一种动画类型，其中定义了动画开始和结束的关键帧，以及可能的一些中间关键帧，然后动画系统会在这些关键帧之间进行插值以创建平滑的动画。</p><p><code>KeyframeAnimator</code>接受一个初始值，一个内容闭包，以及一个关键帧闭包。初始值是一个包含了动画所需的所有属性的结构（在这个例子中是<code>scale</code>，<code>rotation</code>和<code>offset</code>）。内容闭包接受一个这样的结构实例，并返回一个视图。这个视图将使用结构中的值进行配置，以便它可以根据这些值进行动画。关键帧闭包接受一个这样的结构实例，并定义了一系列的关键帧轨道。每个轨道都对应于结构中的一个属性，并定义了一系列的关键帧。每个关键帧都定义了一个值和一个时间点，动画系统将在这些关键帧之间进行插值。</p><p>此外，SwiftUI提供了四种不同类型的关键帧：<code>LinearKeyframe</code>，<code>SpringKeyframe</code>，<code>CubicKeyframe</code>和<code>MoveKeyframe</code>。前三种关键帧使用不同的动画过渡函数进行插值，而<code>MoveKeyframe</code>则立即跳转到指定值，无需插值。</p><p><code>KeyframeAnimator</code>可以用于创建各种复杂的动画效果，例如根据滚动位置调整关键帧驱动的效果，或者根据时间进行更新。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> animationTrigger<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">KeyframeAnimator</span><span class="token punctuation">(</span>                initialValue<span class="token punctuation">:</span> <span class="token class-name">AnimatedMovie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> movie <span class="token keyword">in</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>movie<span class="token punctuation">.</span>scaleRatio<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span>movie<span class="token punctuation">.</span>rotationAngle<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span> movie<span class="token punctuation">.</span>verticalOffset<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> keyframes<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> movie <span class="token keyword">in</span>                    <span class="token class-name">KeyframeTrack</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>scaleRatio<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">LinearKeyframe</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.36</span><span class="token punctuation">)</span>                        <span class="token class-name">SpringKeyframe</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span> spring<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span>                        <span class="token class-name">SpringKeyframe</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> spring<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token class-name">KeyframeTrack</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>rotationAngle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">CubicKeyframe</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span>                        <span class="token class-name">CubicKeyframe</span><span class="token punctuation">(</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token class-name">KeyframeTrack</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>verticalOffset<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">LinearKeyframe</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">)</span>                        <span class="token class-name">SpringKeyframe</span><span class="token punctuation">(</span><span class="token number">20.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.15</span><span class="token punctuation">,</span> spring<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span>                        <span class="token class-name">CubicKeyframe</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">60.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">)</span>                        <span class="token class-name">MoveKeyframe</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">AnimatedMovie</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> scaleRatio<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">var</span> rotationAngle <span class="token operator">=</span> <span class="token class-name">Angle</span><span class="token punctuation">.</span>zero    <span class="token keyword">var</span> verticalOffset<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们首先定义了一个<code>AnimatedMovie</code>结构，它包含了动画所需的所有属性。然后，我们在<code>ContentView</code>视图中创建了一个<code>KeyframeAnimator</code>，该修饰符接受一个观测值<code>animationTrigger</code>，用于触发动画。在<code>content</code>闭包中，我们使用<code>Image</code>视图创建了一个电影海报，并根据<code>AnimatedMovie</code>结构中的值对其进行配置。在<code>keyframes</code>闭包中，我们为每个属性定义了一系列的关键帧轨道。例如，我们为<code>scaleRatio</code>属性定义了三个关键帧，分别使用<code>LinearKeyframe</code>和<code>SpringKeyframe</code>进行插值。我们还为<code>rotationAngle</code>和<code>verticalOffset</code>属性定义了两个关键帧轨道，分别使用<code>CubicKeyframe</code>和<code>MoveKeyframe</code>进行插值。</p><p>也可以使用 <code>.keyframeAnimator</code> 修饰符来创建关键帧动画。以下是一个示例，演示了如何使用 .keyframeAnimator 修饰符创建一个关键帧动画，该动画在用户点击时触发。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> animationTrigger<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"evermore"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>animationTrigger <span class="token operator">?</span> <span class="token number">1.5</span> <span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span>animationTrigger <span class="token operator">?</span> <span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>zero<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span> animationTrigger <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">60.0</span> <span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">keyframeAnimator</span><span class="token punctuation">(</span>initialValue<span class="token punctuation">:</span> <span class="token class-name">AnimatedMovie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                              trigger<span class="token punctuation">:</span> animationTrigger<span class="token punctuation">,</span>                              content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> view<span class="token punctuation">,</span> value <span class="token keyword">in</span>                view                    <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>scaleRatio<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span>rotationAngle<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                              keyframes<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> value <span class="token keyword">in</span>                <span class="token class-name">KeyframeTrack</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>scaleRatio<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">LinearKeyframe</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.36</span><span class="token punctuation">)</span>                    <span class="token class-name">SpringKeyframe</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span> spring<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span>                    <span class="token class-name">SpringKeyframe</span><span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">,</span> spring<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                                <span class="token class-name">KeyframeTrack</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>rotationAngle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">CubicKeyframe</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span>                    <span class="token class-name">CubicKeyframe</span><span class="token punctuation">(</span><span class="token punctuation">.</span>zero<span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">1.0</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                                <span class="token class-name">KeyframeTrack</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>verticalOffset<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">LinearKeyframe</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">60.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">)</span>                    <span class="token class-name">SpringKeyframe</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.15</span><span class="token punctuation">,</span> spring<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span>                    <span class="token class-name">CubicKeyframe</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">60.0</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">)</span>                    <span class="token class-name">MoveKeyframe</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    animationTrigger<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">AnimatedMovie</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> scaleRatio<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token operator">=</span> <span class="token number">1</span>    <span class="token keyword">var</span> rotationAngle <span class="token operator">=</span> <span class="token class-name">Angle</span><span class="token punctuation">.</span>zero    <span class="token keyword">var</span> verticalOffset<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个 <code>AnimatedMovie</code> 结构，它包含了动画所需的所有属性。然后，我们在 <code>ContentView</code> 视图中创建了一个 <code>KeyframeAnimator</code>，该修饰符接受一个观测值 <code>animationTrigger</code>，用于触发动画。在 <code>content</code> 闭包中，我们使用 <code>Image</code> 视图创建了一个电影海报，并根据 <code>AnimatedMovie</code> 结构中的值对其进行配置。在 <code>keyframes</code> 闭包中，我们为每个属性定义了一系列的关键帧轨道。例如，我们为 <code>scaleRatio</code> 属性定义了三个关键帧，分别使用 <code>LinearKeyframe</code> 和 <code>SpringKeyframe</code> 进行插值。我们还为 <code>rotationAngle</code> 和 <code>verticalOffset</code> 属性定义了两个关键帧轨道，分别使用 <code>CubicKeyframe</code> 和 <code>MoveKeyframe</code> 进行插值。</p><h2 id="布局动画"><a href="#布局动画" class="headerlink" title="布局动画"></a>布局动画</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">struct</span> <span class="token class-name">AnimateLayout</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span> <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> changeLayout<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token attribute atrule">@Namespace</span> <span class="token keyword">var</span> namespace <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">VStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">if</span> changeLayout <span class="token punctuation">&#123;</span>    <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span> items <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span> items <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>   <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"切换布局"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    withAnimation <span class="token punctuation">&#123;</span> changeLayout<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token attribute atrule">@ViewBuilder</span> <span class="token keyword">var</span> items<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"one"</span></span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"one"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> namespace<span class="token punctuation">)</span>  <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Two"</span></span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Two"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> namespace<span class="token punctuation">)</span>  <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Three"</span></span><span class="token punctuation">)</span>   <span class="token punctuation">.</span><span class="token function">matchedGeometryEffect</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Three"</span></span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> namespace<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="动画-例子"><a href="#动画-例子" class="headerlink" title="动画-例子"></a>动画-例子</h2><p>动画的例子有很多。准备中… 请期待。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容已整理到小册子中，小册子代码在 &lt;a href=&quot;https://github.com/ming1016/SwiftPamphletApp&quot;&gt;Github&lt;/a&gt; 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买&lt;a href=&quot;https://apps
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</title>
    <link href="https://starming.com/2024/05/18/pamphlet-series-form/"/>
    <id>https://starming.com/2024/05/18/pamphlet-series-form/</id>
    <published>2024-05-18T02:24:12.000Z</published>
    <updated>2024-05-25T12:26:56.827Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容已整理到小册子中，小册子代码在 <a href="https://github.com/ming1016/SwiftPamphletApp">Github</a> 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">“戴铭的开发小册子”</a>应用(98元)，来跟踪查看本文内容新增和更新。</p><p>本文属于小册子系列中的一篇，已发布系列文章有：</p><ul><li><a href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/">小册子之如何使用 SwiftData 开发 SwiftUI 应用</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-widget/">小册子之简说 Widget 小组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-listdataview/">小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-layout/">小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</a></li><li>【本篇】<a href="https://starming.com/2024/05/18/pamphlet-series-form/">小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/25/pamphlet-series-animation/">小册子之 SwiftUI 动画</a></li></ul><h2 id="Form"><a href="#Form" class="headerlink" title="Form"></a>Form</h2><table><thead><tr><th>控件视图</th><th>说明</th><th>Style</th></tr></thead><tbody><tr><td>Button</td><td>触发操作的按钮</td><td>.bordered, .borderless, .borderedProminent, .plain</td></tr><tr><td>Picker</td><td>提供多选项供选择</td><td>.wheel, .inline, .segmented, .menu, .radioGroup</td></tr><tr><td>DatePicker and MultiDatePicker</td><td>选择日期的工具</td><td>.compact, .wheel, .graphical</td></tr><tr><td>Toggle</td><td>切换两种状态的开关</td><td>.switch, .botton, .checkbox</td></tr><tr><td>Stepper</td><td>调整数值的步进器</td><td>无样式选项</td></tr><tr><td>Menu</td><td>显示选项列表的菜单</td><td>.borderlessButton, .button</td></tr></tbody></table><p>Form 有 ColumnFormStyle 还有 GroupedFormStyle。使用 buttonStyle 修饰符：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>   <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">formStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>grouped<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Form 新版也得到了增强，示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SimpleFormView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> eventDescription <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> accent <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>red    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scheme <span class="token operator">=</span> <span class="token class-name">ColorScheme</span><span class="token punctuation">.</span>light    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">DatePicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Date"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $date<span class="token punctuation">)</span>                <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Description"</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $eventDescription<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">lineLimit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">Section</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Vibe"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Accent color"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $accent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>accentColors<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> color <span class="token keyword">in</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>description<span class="token punctuation">.</span>capitalized<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Color scheme"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $scheme<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Light"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">ColorScheme</span><span class="token punctuation">.</span>light<span class="token punctuation">)</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Dark"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">ColorScheme</span><span class="token punctuation">.</span>dark<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">formStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>grouped<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">Color</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">let</span> accentColors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Color</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span> <span class="token punctuation">.</span>green<span class="token punctuation">,</span> <span class="token punctuation">.</span>blue<span class="token punctuation">,</span> <span class="token punctuation">.</span>orange<span class="token punctuation">,</span> <span class="token punctuation">.</span>pink<span class="token punctuation">,</span> <span class="token punctuation">.</span>purple<span class="token punctuation">,</span> <span class="token punctuation">.</span>yellow<span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Form 的样式除了 <code>.formStyle(.grouped)</code> 还有 <code>.formStyle(..columns)</code>。</p><p>关于 Form 字体、单元、背景颜色设置，参看下面代码：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> movieTitle <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isWatched <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> rating <span class="token operator">=</span> <span class="token number">1</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> watchDate <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影标题"</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $movieTitle<span class="token punctuation">)</span>                <span class="token class-name">LabeledContent</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"导演"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"克里斯托弗·诺兰"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> header<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"关于电影"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">listRowBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"已观看"</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> $isWatched<span class="token punctuation">)</span>                <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"评分"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $rating<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">...</span><span class="token number">5</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> number <span class="token keyword">in</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">number</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 星"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> header<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影详情"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">listRowBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">DatePicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"观看日期"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $watchDate<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">listRowBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"重置所有电影数据"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">resetAllData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">listRowBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>indigo<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>yellow<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">scrollContentBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>hidden<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">navigationBarTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影追踪器"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">resetAllData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        movieTitle <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>        isWatched <span class="token operator">=</span> <span class="token boolean">false</span>        rating <span class="token operator">=</span> <span class="token number">1</span>        watchDate <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">LabeledContent</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> label<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> value<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> label<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>label <span class="token operator">=</span> label        <span class="token keyword">self</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>label<span class="token punctuation">)</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Picker选择器"><a href="#Picker选择器" class="headerlink" title="Picker选择器"></a>Picker选择器</h2><h3 id="Picker"><a href="#Picker" class="headerlink" title="Picker"></a>Picker</h3><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/picker-ap01.jpeg" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/picker-ap01.jpeg"></p><p>SwiftUI 中的 <code>Picker</code> 视图是一个用于选择列表中的一个选项的用户界面元素。你可以使用 <code>Picker</code> 视图来创建各种类型的选择器，包括滚动选择器、弹出菜单和分段控制。</p><p>示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayPickerView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> select <span class="token operator">=</span> <span class="token number">1</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> color <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span>        <span class="token keyword">var</span> dateFt<span class="token punctuation">:</span> <span class="token class-name">DateFormatter</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> ft <span class="token operator">=</span> <span class="token class-name">DateFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        ft<span class="token punctuation">.</span>dateStyle <span class="token operator">=</span> <span class="token punctuation">.</span>long        <span class="token keyword">return</span> ft    <span class="token punctuation">&#125;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 默认是下拉的风格</span>        <span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Section</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选区"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选一个"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $select<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"1"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"2"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// Segment 风格，</span>        <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选一个"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $select<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"one"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"two"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token class-name">SegmentedPickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// 颜色选择器</span>        <span class="token class-name">ColorPicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选一个颜色"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $color<span class="token punctuation">,</span> supportsOpacity<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>                <span class="token comment">// 时间选择器</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">DatePicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $date<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token operator">...</span><span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> displayedComponents<span class="token punctuation">:</span> <span class="token punctuation">.</span>date<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选时间"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">DatePicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选时间"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $date<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">datePickerStyle</span><span class="token punctuation">(</span><span class="token class-name">GraphicalDatePickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxHeight<span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">)</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"时间：</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">date<span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> dateFt</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的代码中，有三种类型的 <code>Picker</code> 视图：</p><ol><li>默认的下拉风格 <code>Picker</code> 视图。这种类型的 <code>Picker</code> 视图在 <code>Form</code> 中使用，用户可以点击选择器来打开一个下拉菜单，然后从菜单中选择一个选项。</li></ol><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Section</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选区"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选一个"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $select<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"1"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"2"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>分段控制风格 <code>Picker</code> 视图。这种类型的 <code>Picker</code> 视图使用 <code>SegmentedPickerStyle()</code> 修饰符，它将选择器显示为一组水平排列的按钮，用户可以点击按钮来选择一个选项。</li></ol><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选一个"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $select<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"one"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"two"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token class-name">SegmentedPickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><code>ColorPicker</code> 和 <code>DatePicker</code> 视图。这两种类型的视图是 <code>Picker</code> 视图的特殊形式，它们分别用于选择颜色和日期。</li></ol><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">ColorPicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选一个颜色"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $color<span class="token punctuation">,</span> supportsOpacity<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token class-name">DatePicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选时间"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $date<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">datePickerStyle</span><span class="token punctuation">(</span><span class="token class-name">GraphicalDatePickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在所有这些 <code>Picker</code> 视图中，你都需要提供一个绑定的选择状态，这个状态会在用户选择一个新的选项时更新。你还需要为每个选项提供一个视图和一个唯一的标签。</p><h3 id="文字Picker"><a href="#文字Picker" class="headerlink" title="文字Picker"></a>文字Picker</h3><h4 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h4><p>文字 Picker 示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">StaticDataPickerView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedCategory <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"动作"</span></span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择的类别: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">selectedCategory</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影类别"</span></span><span class="token punctuation">,</span>                 selection<span class="token punctuation">:</span> $selectedCategory<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"动作"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"动作"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"喜剧"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"喜剧"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"剧情"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"剧情"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"恐怖"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"恐怖"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="使用枚举"><a href="#使用枚举" class="headerlink" title="使用枚举"></a>使用枚举</h4><p>使用枚举来创建选取器的示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">enum</span> <span class="token class-name">MovieCategory</span><span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">CaseIterable</span><span class="token punctuation">,</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> action <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"动作"</span></span>    <span class="token keyword">case</span> comedy <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"喜剧"</span></span>    <span class="token keyword">case</span> drama <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"剧情"</span></span>    <span class="token keyword">case</span> horror <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"恐怖"</span></span>    <span class="token keyword">var</span> id<span class="token punctuation">:</span> <span class="token class-name">MovieCategory</span> <span class="token punctuation">&#123;</span> <span class="token keyword">self</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">MoviePicker</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>   <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedCategory<span class="token punctuation">:</span> <span class="token class-name">MovieCategory</span> <span class="token operator">=</span> <span class="token punctuation">.</span>action  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>     <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影类别"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selectedCategory<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">MovieCategory</span><span class="token punctuation">.</span>allCases<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> category <span class="token keyword">in</span>             <span class="token class-name">Text</span><span class="token punctuation">(</span>category<span class="token punctuation">.</span>rawValue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span>category<span class="token punctuation">)</span>       <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h4><p>SwiftUI 提供了多种内置的 <code>Picker</code> 样式，以改变 <code>Picker</code> 的外观和行为。以下是一些主要的 <code>Picker</code> 样式及其使用示例：</p><ul><li><code>DefaultPickerStyle</code>：根据平台和环境自动调整样式。这是默认的 <code>Picker</code> 样式。</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Label"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span>options<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>options<span class="token punctuation">[</span><span class="token short-argument">$0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>WheelPickerStyle</code>：以旋转轮的形式展示选项。在 iOS 上，这种样式会显示一个滚动的选择器。</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Label"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span>options<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>options<span class="token punctuation">[</span><span class="token short-argument">$0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token class-name">WheelPickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>SegmentedPickerStyle</code>：将选项以分段控件的形式展示。这种样式会显示一个分段控制，用户可以在其中选择一个选项。</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Label"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span>options<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>options<span class="token punctuation">[</span><span class="token short-argument">$0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token class-name">SegmentedPickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>InlinePickerStyle</code>：在列表或表格中内联展示选项。这种样式会在 <code>Form</code> 或 <code>List</code> 中显示一个内联的选择器。</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Label"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span>options<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>options<span class="token punctuation">[</span><span class="token short-argument">$0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token class-name">InlinePickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>MenuPickerStyle</code>：点击时以菜单的形式展示选项。这种样式会显示一个菜单，用户可以在其中选择一个选项。</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Label"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span>options<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>options<span class="token punctuation">[</span><span class="token short-argument">$0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token class-name">MenuPickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>.navigationLink</code>：在 iOS 16+ 中，点击后进入下一个页面。这种样式会显示一个导航链接，用户可以点击它来打开一个新的视图。</li><li><code>.radioGrouped</code>：仅在 macOS 中可用，以单选按钮组的形式展示选项。这种样式会显示一个单选按钮组，用户可以在其中选择一个选项。</li></ul><h3 id="ColorPicker"><a href="#ColorPicker" class="headerlink" title="ColorPicker"></a>ColorPicker</h3><p><code>ColorPicker</code> 是一个允许用户选择颜色的视图。以下是一个 <code>ColorPicker</code> 的使用示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedColor <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>white    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ColorPicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择一个颜色"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selectedColor<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"你选择的颜色"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span>selectedColor<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们创建了一个 <code>ColorPicker</code> 视图，用户可以通过这个视图选择一个颜色。我们使用 <code>@State</code> 属性包装器来创建一个可以绑定到 <code>ColorPicker</code> 的 <code>selectedColor</code> 状态。当用户选择一个新的颜色时，<code>selectedColor</code> 状态会自动更新，<code>Text</code> 视图的前景色也会相应地更新。</p><h3 id="DatePicker"><a href="#DatePicker" class="headerlink" title="DatePicker"></a>DatePicker</h3><h4 id="基本使用-1"><a href="#基本使用-1" class="headerlink" title="基本使用"></a>基本使用</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> releaseDate<span class="token punctuation">:</span> <span class="token class-name">Date</span> <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">DatePicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择电影发布日期"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $releaseDate<span class="token punctuation">,</span> displayedComponents<span class="token punctuation">:</span> <span class="token punctuation">.</span>date<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择的发布日期: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">releaseDate<span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> <span class="token class-name">DateFormatter</span><span class="token punctuation">.</span>dateMedium</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="选择多个日期"><a href="#选择多个日期" class="headerlink" title="选择多个日期"></a>选择多个日期</h4><p>在 iOS 16 中，您现在可以允许用户选择多个日期，MultiDatePicker 视图会显示一个日历，用户可以选择多个日期，可以设置选择范围。示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PMultiDatePicker</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>calendar<span class="token punctuation">)</span> <span class="token keyword">var</span> cal    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> dates<span class="token punctuation">:</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token class-name">DateComponents</span><span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">MultiDatePicker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择个日子"</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $dates<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>now<span class="token operator">...</span><span class="token punctuation">)</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> s<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token punctuation">&#123;</span>        dates<span class="token punctuation">.</span>compactMap <span class="token punctuation">&#123;</span> c <span class="token keyword">in</span>            cal<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span>c<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">formatted</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token punctuation">.</span>long<span class="token punctuation">,</span> time<span class="token punctuation">:</span> <span class="token punctuation">.</span>omitted<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">formatted</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="指定日期范围"><a href="#指定日期范围" class="headerlink" title="指定日期范围"></a>指定日期范围</h4><p>指定日期的范围，例如只能选择当前日期之后的日期，示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">DatePicker</span><span class="token punctuation">(</span>    <span class="token string-literal"><span class="token string">"选择日期"</span></span><span class="token punctuation">,</span>    selection<span class="token punctuation">:</span> $selectedDate<span class="token punctuation">,</span>    <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token punctuation">,</span>    displayedComponents<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>date<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">datePickerStyle</span><span class="token punctuation">(</span><span class="token class-name">WheelDatePickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">labelsHidden</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中：</p><ul><li><code>selection: $selectedDate</code> 表示选定的日期和时间。</li><li><code>in: Date()...</code> 表示可选日期的范围。在这个例子中，用户只能选择当前日期之后的日期。你也可以使用 <code>...Date()</code> 来限制用户只能选择当前日期之前的日期，或者使用 <code>Date().addingTimeInterval(86400*7)</code> 来限制用户只能选择从当前日期开始的接下来一周内的日期。</li><li><code>displayedComponents: [.date]</code> 表示 <code>DatePicker</code> 应该显示哪些组件。在这个例子中，我们只显示日期组件。你也可以使用 <code>.hourAndMinute</code> 来显示小时和分钟组件，或者同时显示日期和时间组件。</li><li><code>.datePickerStyle(WheelDatePickerStyle())</code> 表示 <code>DatePicker</code> 的样式。在这个例子中，我们使用滚轮样式。你也可以使用 <code>GraphicalDatePickerStyle()</code> 来应用图形样式。</li><li><code>.labelsHidden()</code> 表示隐藏 <code>DatePicker</code> 的标签。</li></ul><h3 id="PhotoPicker"><a href="#PhotoPicker" class="headerlink" title="PhotoPicker"></a>PhotoPicker</h3><h4 id="PhotoPicker-使用示例"><a href="#PhotoPicker-使用示例" class="headerlink" title="PhotoPicker 使用示例"></a>PhotoPicker 使用示例</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">PhotosUI</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedItem<span class="token punctuation">:</span> <span class="token class-name">PhotosPickerItem</span><span class="token operator">?</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedPhotoData<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token operator">?</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token keyword">let</span> item <span class="token operator">=</span> selectedItem<span class="token punctuation">,</span> <span class="token keyword">let</span> data <span class="token operator">=</span> selectedPhotoData<span class="token punctuation">,</span> <span class="token keyword">let</span> image <span class="token operator">=</span> <span class="token class-name">UIImage</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span>uiImage<span class="token punctuation">:</span> image<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择电影海报"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电影海报"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>                <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>navigationBarTrailing<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">PhotosPicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selectedItem<span class="token punctuation">,</span> matching<span class="token punctuation">:</span> <span class="token punctuation">.</span>images<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择照片"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"photo"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>indigo<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">controlSize</span><span class="token punctuation">(</span><span class="token punctuation">.</span>extraLarge<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">buttonStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>borderedProminent<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> selectedItem<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> oldValue<span class="token punctuation">,</span> newValue <span class="token keyword">in</span>                <span class="token class-name">Task</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> <span class="token keyword">await</span> newValue<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">loadTransferable</span><span class="token punctuation">(</span>type<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        selectedPhotoData <span class="token operator">=</span> data                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="限制选择媒体类型"><a href="#限制选择媒体类型" class="headerlink" title="限制选择媒体类型"></a>限制选择媒体类型</h4><p>我们可以使用 <code>matching</code> 参数来过滤 <code>PhotosPicker</code> 中显示的媒体类型。这个参数接受一个 <code>PHAssetMediaType</code> 枚举值，可以是 <code>.images</code>、<code>.videos</code>、<code>.audio</code>、<code>.any</code> 等。</p><p>例如，如果我们只想显示图片，可以这样设置：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">PhotosPicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selectedItem<span class="token punctuation">,</span> matching<span class="token punctuation">:</span> <span class="token punctuation">.</span>images<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择照片"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"photo"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果我们想同时显示图片和视频，可以使用 <code>.any(of:)</code> 方法：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">PhotosPicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selectedItem<span class="token punctuation">,</span> matching<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>images<span class="token punctuation">,</span> <span class="token punctuation">.</span>videos<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择照片"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"photo"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>此外，我们还可以使用 <code>.not(_:)</code> 方法来排除某种类型的媒体。例如，如果我们想显示所有的图片，但是不包括 Live Photo，可以这样设置：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">PhotosPicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selectedItem<span class="token punctuation">,</span> matching<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>images<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">.</span>livePhotos<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择照片"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"photo"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这些设置可以让我们更精确地控制 <code>PhotosPicker</code> 中显示的媒体类型。</p><h4 id="选择多张图片"><a href="#选择多张图片" class="headerlink" title="选择多张图片"></a>选择多张图片</h4><p>以下示例演示了如何使用 <code>PhotosPicker</code> 选择多张图片，并将它们显示在一个 <code>LazyVGrid</code> 中：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">PhotosUI</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedItems<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">PhotosPickerItem</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">PhotosPickerItem</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedPhotosData<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Data</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">Data</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">LazyVGrid</span><span class="token punctuation">(</span>columns<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">adaptive</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>selectedPhotosData<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> photoData <span class="token keyword">in</span>                        <span class="token keyword">if</span> <span class="token keyword">let</span> image <span class="token operator">=</span> <span class="token class-name">UIImage</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> photoData<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Image</span><span class="token punctuation">(</span>uiImage<span class="token punctuation">:</span> image<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token number">10.0</span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"书籍"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>                <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>navigationBarTrailing<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">PhotosPicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selectedItems<span class="token punctuation">,</span> maxSelectionCount<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> matching<span class="token punctuation">:</span> <span class="token punctuation">.</span>images<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"book.fill"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>brown<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> selectedItems<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> oldValue<span class="token punctuation">,</span> newValue <span class="token keyword">in</span>                        <span class="token keyword">for</span> newItem <span class="token keyword">in</span> newValue <span class="token punctuation">&#123;</span>                            <span class="token class-name">Task</span> <span class="token punctuation">&#123;</span>                                <span class="token keyword">if</span> <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> <span class="token keyword">await</span> newItem<span class="token punctuation">.</span><span class="token function">loadTransferable</span><span class="token punctuation">(</span>type<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                    selectedPhotosData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>                                <span class="token punctuation">&#125;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上示例中，我们使用了 <code>PhotosPicker</code> 的 <code>maxSelectionCount</code> 参数来限制用户最多只能选择 5 张图片。当用户选择图片后，我们将图片数据保存在 <code>selectedPhotosData</code> 数组中，并在 <code>LazyVGrid</code> 中显示这些图片。</p><h3 id="字体Picker"><a href="#字体Picker" class="headerlink" title="字体Picker"></a>字体Picker</h3><p>这段代码实现了一个字体选择器的功能，用户可以在其中选择和查看自己喜欢的字体。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> fontFamily<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"选择字体:"</span></span><span class="token punctuation">)</span>            <span class="token class-name">FontPicker</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">:</span> $fontFamily<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">equatable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">FontPicker</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token punctuation">,</span> <span class="token class-name">Equatable</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> fontFamily<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">fontFamily</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $fontFamily<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">NSFontManager</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span>availableFontFamilies<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> family <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span>family<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span>family<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token operator">==</span> <span class="token punctuation">(</span>l<span class="token punctuation">:</span> <span class="token class-name">FontPicker</span><span class="token punctuation">,</span> r<span class="token punctuation">:</span> <span class="token class-name">FontPicker</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Bool</span> <span class="token punctuation">&#123;</span>        l<span class="token punctuation">.</span>fontFamily <span class="token operator">==</span> r<span class="token punctuation">.</span>fontFamily    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="WheelPicker"><a href="#WheelPicker" class="headerlink" title="WheelPicker"></a>WheelPicker</h3><p>本示例是一个可折叠的滚轮选择器 <code>CollapsibleWheelPicker</code>。这个选择器允许用户从一组书籍中选择一本。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selection <span class="token operator">=</span> <span class="token number">0</span>  <span class="token keyword">let</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Book 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Book 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Book 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Book 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Book 5"</span></span><span class="token punctuation">]</span>  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">NavigationStack</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">CollapsibleWheelPicker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">item</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Books"</span></span><span class="token punctuation">)</span>          <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">items<span class="token punctuation">[</span>selection<span class="token punctuation">]</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">CollapsibleWheelPicker</span><span class="token operator">&lt;</span><span class="token class-name">SelectionValue</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">,</span> <span class="token class-name">Label</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">SelectionValue</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token punctuation">,</span> <span class="token class-name">Label</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> selection<span class="token punctuation">:</span> <span class="token class-name">SelectionValue</span>    <span class="token attribute atrule">@ViewBuilder</span> <span class="token keyword">let</span> content<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span>    <span class="token attribute atrule">@ViewBuilder</span> <span class="token keyword">let</span> label<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Label</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">CollapsibleView</span><span class="token punctuation">(</span>label<span class="token punctuation">:</span> label<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Picker</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selection<span class="token punctuation">,</span> content<span class="token punctuation">:</span> content<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">EmptyView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>wheel<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">CollapsibleView</span><span class="token operator">&lt;</span><span class="token class-name">Label</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">Label</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isSecondaryViewVisible <span class="token operator">=</span> <span class="token boolean">false</span>  <span class="token attribute atrule">@ViewBuilder</span> <span class="token keyword">let</span> label<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Label</span>  <span class="token attribute atrule">@ViewBuilder</span> <span class="token keyword">let</span> content<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span>  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Group</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> isSecondaryViewVisible<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> label<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">buttonStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>plain<span class="token punctuation">)</span>      <span class="token keyword">if</span> isSecondaryViewVisible <span class="token punctuation">&#123;</span>        <span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 <code>ContentView</code> 中，我们创建了一个 <code>CollapsibleWheelPicker</code> 视图。这个视图包含一个滚轮样式的选择器，用户可以从中选择一本书。选择的书籍会绑定到 <code>selection</code> 变量。</p><p><code>CollapsibleWheelPicker</code> 视图是一个可折叠的滚轮选择器，它接受一个绑定的选择变量、一个内容视图和一个标签视图。内容视图是一个 <code>Picker</code> 视图，用于显示可供选择的书籍。标签视图是一个 <code>Text</code> 视图，显示当前选择的书籍。</p><h2 id="Toggle"><a href="#Toggle" class="headerlink" title="Toggle"></a>Toggle</h2><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/toggle-ap01.png" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/toggle-ap01.png"></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>使用示例如下</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayToggleView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isEnable <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 普通样式</span>        <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isEnable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">isEnable <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"开了"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"关了"</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// 按钮样式</span>        <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isEnable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">isEnable <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"打开了"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"关闭了"</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"cloud.moon"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>pink<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">controlSize</span><span class="token punctuation">(</span><span class="token punctuation">.</span>large<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>button<span class="token punctuation">)</span>                <span class="token comment">// Switch 样式</span>        <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isEnable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">isEnable <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"开了"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"关了"</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token class-name">SwitchToggleStyle</span><span class="token punctuation">(</span>tint<span class="token punctuation">:</span> <span class="token punctuation">.</span>orange<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// 自定义样式</span>        <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isEnable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>isEnable <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"录音中"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"已静音"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token class-name">PCToggleStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 自定义样式</span><span class="token keyword">struct</span> <span class="token class-name">PCToggleStyle</span><span class="token punctuation">:</span> <span class="token class-name">ToggleStyle</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">makeBody</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> <span class="token class-name">Configuration</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            configuration<span class="token punctuation">.</span>label            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"mic.square.fill"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"mic.slash.circle.fill"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">renderingMode</span><span class="token punctuation">(</span><span class="token punctuation">.</span>original<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                    configuration<span class="token punctuation">.</span>isOn<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="样式-1"><a href="#样式-1" class="headerlink" title="样式"></a>样式</h3><p>Toggle 可以设置 toggleStyle，可以自定义样式。</p><p>下表是不同平台支持的样式</p><ul><li>DefaultToggleStyle：iOS 表现的是 Switch，macOS 是 Checkbox</li><li>SwitchToggleStyle：iOS 和 macOS 都支持</li><li>CheckboxToggleStyle：只支持 macOS</li></ul><h3 id="纯图像的-Toggle"><a href="#纯图像的-Toggle" class="headerlink" title="纯图像的 Toggle"></a>纯图像的 Toggle</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isMuted <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isMuted<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> isMuted <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"speaker.slash.fill"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"speaker.fill"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>button<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="自定义-ToggleStyle"><a href="#自定义-ToggleStyle" class="headerlink" title="自定义 ToggleStyle"></a>自定义 ToggleStyle</h3><p>做一个自定义的切换按钮 OfflineModeToggleStyle。这个切换按钮允许用户控制是否开启离线模式。代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isOfflineMode <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isOfflineMode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Offline Mode"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token class-name">OfflineModeToggleStyle</span><span class="token punctuation">(</span>systemImage<span class="token punctuation">:</span> isOfflineMode <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"wifi.slash"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"wifi"</span></span><span class="token punctuation">,</span> activeColor<span class="token punctuation">:</span> <span class="token punctuation">.</span>blue<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">OfflineModeToggleStyle</span><span class="token punctuation">:</span> <span class="token class-name">ToggleStyle</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> systemImage<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> activeColor<span class="token punctuation">:</span> <span class="token class-name">Color</span>    <span class="token keyword">func</span> <span class="token function-definition function">makeBody</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> <span class="token class-name">Configuration</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            configuration<span class="token punctuation">.</span>label            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> activeColor <span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token punctuation">.</span>systemGray5<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span>overlay <span class="token punctuation">&#123;</span>                    <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span>overlay <span class="token punctuation">&#123;</span>                            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> systemImage<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> activeColor <span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token punctuation">.</span>systemGray5<span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                        <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token number">8</span> <span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                    <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        configuration<span class="token punctuation">.</span>isOn<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们定义了一个 OfflineModeToggleStyle，它接受两个参数：systemImage 和 activeColor。systemImage 是一个字符串，表示图像的系统名称。activeColor 是一个颜色，表示激活状态的颜色。</p><h3 id="动画化的-Toggle"><a href="#动画化的-Toggle" class="headerlink" title="动画化的 Toggle"></a>动画化的 Toggle</h3><p>以下是一个自定义的切换按钮 MuteToggleStyle。这个切换按钮允许用户控制是否开启静音模式。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isMuted <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $isMuted<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Mute Mode"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span>isMuted <span class="token operator">?</span> <span class="token punctuation">.</span>white <span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token class-name">MuteToggleStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> maxHeight<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">MuteToggleStyle</span><span class="token punctuation">:</span> <span class="token class-name">ToggleStyle</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> onImage <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"speaker.slash.fill"</span></span>    <span class="token keyword">var</span> offImage <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"speaker.2.fill"</span></span>    <span class="token keyword">func</span> <span class="token function-definition function">makeBody</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> <span class="token class-name">Configuration</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            configuration<span class="token punctuation">.</span>label            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token punctuation">.</span>systemGray6<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>yellow<span class="token punctuation">)</span>                <span class="token punctuation">.</span>overlay <span class="token punctuation">&#123;</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> onImage <span class="token punctuation">:</span> offImage<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token number">10</span> <span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">32</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                    <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        configuration<span class="token punctuation">.</span>isOn<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">ToggleStyle</span> <span class="token keyword">where</span> <span class="token keyword">Self</span> <span class="token operator">==</span> <span class="token class-name">MuteToggleStyle</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> mute<span class="token punctuation">:</span> <span class="token class-name">MuteToggleStyle</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们定义了一个 MuteToggleStyle，它接受两个参数：onImage 和 offImage。onImage 是一个字符串，表示激活状态的图像的系统名称。offImage 是一个字符串，表示非激活状态的图像的系统名称。</p><h3 id="两个标签的-Toggle"><a href="#两个标签的-Toggle" class="headerlink" title="两个标签的 Toggle"></a>两个标签的 Toggle</h3><p>以下是一个自定义的切换按钮，它有两个标签。这个切换按钮允许用户控制是否开启静音模式。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Toggle</span><span class="token punctuation">(</span>isOn<span class="token punctuation">:</span> $mute<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"静音"</span></span><span class="token punctuation">)</span>  <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"这将关闭所有声音"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Slider"><a href="#Slider" class="headerlink" title="Slider"></a>Slider</h2><p>简单示例</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlaySliderView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> count<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Slider</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> $count<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token operator">...</span><span class="token number">100</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token class-name">Int</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下代码演示了如何创建一个自定义的 <code>Slider</code> 控件，用于调整亮度。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> brightness<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token operator">=</span> <span class="token number">50</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isEditing<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Brightness Control"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">BrightnessSlider</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> $brightness<span class="token punctuation">,</span> range<span class="token punctuation">:</span> <span class="token number">0</span><span class="token operator">...</span><span class="token number">100</span><span class="token punctuation">,</span> step<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> isEditing<span class="token punctuation">:</span> $isEditing<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Brightness: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token class-name">Int</span><span class="token punctuation">(</span>brightness<span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">, is changing: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">isEditing</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>footnote<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">BrightnessSlider</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> value<span class="token punctuation">:</span> <span class="token class-name">Double</span>    <span class="token keyword">var</span> range<span class="token punctuation">:</span> <span class="token class-name">ClosedRange</span><span class="token operator">&lt;</span><span class="token class-name">Double</span><span class="token operator">></span>    <span class="token keyword">var</span> step<span class="token punctuation">:</span> <span class="token class-name">Double</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> isEditing<span class="token punctuation">:</span> <span class="token class-name">Bool</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Slider</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> $value<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> range<span class="token punctuation">,</span> step<span class="token punctuation">:</span> step<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"亮度"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"light.max"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> minimumValueLabel<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token class-name">Int</span><span class="token punctuation">(</span>range<span class="token punctuation">.</span>lowerBound<span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> maximumValueLabel<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token class-name">Int</span><span class="token punctuation">(</span>range<span class="token punctuation">.</span>upperBound<span class="token punctuation">)</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> onEditingChanged<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token function">print</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们创建了一个 <code>BrightnessSlider</code> 控件，它是一个自定义的 <code>Slider</code> 控件，用于调整亮度。<code>BrightnessSlider</code> 接受一个 <code>value</code> 绑定，一个 <code>range</code> 范围，一个 <code>step</code> 步长，以及一个 <code>isEditing</code> 绑定。在 <code>BrightnessSlider</code> 中，我们使用 <code>Slider</code> 控件来显示亮度调整器。我们还使用 <code>Label</code> 来显示亮度调整器的标题，并使用 <code>minimumValueLabel</code> 和 <code>maximumValueLabel</code> 来显示亮度调整器的最小值和最大值。最后，我们使用 <code>onEditingChanged</code> 修饰符来监听亮度调整器的编辑状态。</p><h2 id="Stepper"><a href="#Stepper" class="headerlink" title="Stepper"></a>Stepper</h2><p><code>Stepper</code> 控件允许用户通过点击按钮来增加或减少数值。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> count<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">2</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Stepper</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> $count<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token operator">...</span><span class="token number">20</span><span class="token punctuation">,</span> step<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"共</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">count</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> onEditingChanged<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> b <span class="token keyword">in</span>            <span class="token function">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end Stepper</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 <code>ContentView</code> 中，我们定义了一个状态变量 <code>count</code>，并将其初始化为 2。然后，我们创建了一个 <code>Stepper</code> 视图，并将其绑定到 <code>count</code> 状态变量。</p><p><code>Stepper</code> 视图的值范围为 2 到 20，步进值为 2，这意味着每次点击按钮，<code>count</code> 的值会增加或减少 2。我们还添加了一个标签，显示当前的 <code>count</code> 值。</p><p>我们还添加了 <code>onEditingChanged</code> 回调，当 <code>Stepper</code> 的值改变时，会打印出一个布尔值，表示 <code>Stepper</code> 是否正在被编辑。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容已整理到小册子中，小册子代码在 &lt;a href=&quot;https://github.com/ming1016/SwiftPamphletApp&quot;&gt;Github&lt;/a&gt; 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买&lt;a href=&quot;https://apps
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</title>
    <link href="https://starming.com/2024/05/18/pamphlet-series-layout/"/>
    <id>https://starming.com/2024/05/18/pamphlet-series-layout/</id>
    <published>2024-05-18T01:48:04.000Z</published>
    <updated>2024-05-25T12:27:13.953Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容已整理到小册子中，小册子代码在 <a href="https://github.com/ming1016/SwiftPamphletApp">Github</a> 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">“戴铭的开发小册子”</a>应用(98元)，来跟踪查看本文内容新增和更新。</p><p>本文属于小册子系列中的一篇，已发布系列文章有：</p><ul><li><a href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/">小册子之如何使用 SwiftData 开发 SwiftUI 应用</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-widget/">小册子之简说 Widget 小组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-listdataview/">小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</a></li><li>【本篇】<a href="https://starming.com/2024/05/18/pamphlet-series-layout/">小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-form/">小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/25/pamphlet-series-animation/">小册子之 SwiftUI 动画</a></li></ul><h2 id="Navigation导航"><a href="#Navigation导航" class="headerlink" title="Navigation导航"></a>Navigation导航</h2><h3 id="Navigation"><a href="#Navigation" class="headerlink" title="Navigation"></a>Navigation</h3><p>控制导航启动状态、管理 size class 之间的 transition 和响应 deep link。</p><p>Navigation bar 有新的默认行为，如果没有提供标题，导航栏默认为 inline  title 显示模式。使用 <code>navigationBarTitleDisplayMode(_:)</code> 改变显示模式。如果 navigation bar  没有标题、工具栏项或搜索内容，它就会自动隐藏。使用 <code>.toolbar(.visible)</code> modifier 显示一个空 navigation bar。</p><p>参考：</p><ul><li><a href="https://developer.apple.com/documentation/swiftui/migrating-to-new-navigation-types?changes=latest_minor">Migrating to New Navigation Types</a> 官方迁移指南</li><li><a href="https://developer.apple.com/documentation/swiftui/navigationstack?changes=latest_minor">NavigationStack</a></li><li><a href="https://developer.apple.com/documentation/swiftui/navigationsplitview">NavigationSplitView</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2022/10054/">The SwiftUI cookbook for navigation</a></li></ul><p>NavigationStack 的示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PNavigationStack</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span> <span class="token comment">// 深层链接</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> $a<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">..&lt;</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"第 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 行"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">.circle"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"第 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 行内容"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"NavigationStack Demo"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里的 path 设置了 stack 的深度路径。</p><p>NavigationSplitView 两栏的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PNavigationSplitViewTwoColumn</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"one"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"two"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"three"</span></span><span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> choice<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationSplitView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $choice<span class="token punctuation">,</span> rowContent<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> detail<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>choice <span class="token operator">??</span> <span class="token string-literal"><span class="token string">"选一个"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>NavigationSplitView 三栏的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PNavigationSplitViewThreeColumn</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">struct</span> <span class="token class-name">Group</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Hashable</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>        <span class="token keyword">var</span> subs<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> gps <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token class-name">Group</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"One"</span></span><span class="token punctuation">,</span> subs<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"o1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"o2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"o3"</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Group</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Two"</span></span><span class="token punctuation">,</span> subs<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"t1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"t2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"t3"</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>        <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> choiceGroup<span class="token punctuation">:</span> <span class="token class-name">Group</span><span class="token operator">?</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> choiceSub<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span>        <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> cv <span class="token operator">=</span> <span class="token class-name">NavigationSplitViewVisibility</span><span class="token punctuation">.</span>automatic        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationSplitView</span><span class="token punctuation">(</span>columnVisibility<span class="token punctuation">:</span> $cv<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>gps<span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $choiceGroup<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> g <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationSplitViewColumnWidth</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>choiceGroup<span class="token operator">?</span><span class="token punctuation">.</span>subs <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $choiceSub<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> detail<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>choiceSub <span class="token operator">??</span> <span class="token string-literal"><span class="token string">"选一个"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"点击"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                cv <span class="token operator">=</span> <span class="token punctuation">.</span>all            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">navigationSplitViewStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>prominentDetail<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>navigationSplitViewColumnWidth() </code> 是用来自定义宽的，<code>navigationSplitViewStyle</code> 设置为 <code>.prominentDetail</code> 是让 detail 的视图尽量保持其大小。</p><p>SwiftUI 新加了个<a href="https://developer.apple.com/documentation/swiftui/presentedwindowcontent/toolbar(_:in:)">功能</a>可以配置是否隐藏 Tabbar，这样在从主页进入下一级时就可以选择不显示底部标签栏了，示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toolbar</span><span class="token punctuation">(</span><span class="token punctuation">.</span>hidden<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>tabBar<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>相比较以前 NavigationView 增强的是 destination 可以根据值的不同类型展示不同的目的页面，示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PNavigationStackDestination</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"字符串"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"字符串"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"红色"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"不同类型 Destination"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> c <span class="token keyword">in</span>                c<span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">s</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 的 detail"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对 toolbar 的自定义，示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">toolbar</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"toolbar"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"new"</span></span><span class="token punctuation">,</span> placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>secondaryAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"New Invitation"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"envelope"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">toolbarRole</span><span class="token punctuation">(</span><span class="token punctuation">.</span>editor<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以下是废弃的 NavigationView 的用法。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/navigation-ap01.jpeg" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/navigation-ap01.jpeg"></p><p>对应代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayNavigationView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> lData <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">...</span><span class="token number">10</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">LinearGradient</span><span class="token punctuation">(</span>colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>pink<span class="token punctuation">,</span> <span class="token punctuation">.</span>orange<span class="token punctuation">]</span><span class="token punctuation">,</span> startPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>topLeading<span class="token punctuation">,</span> endPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottomTrailing<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token class-name">List</span><span class="token punctuation">(</span>lData<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token class-name">NavigationLink</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">PNavDetailView</span><span class="token punctuation">(</span>contentStr<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">LinearGradient</span><span class="token punctuation">(</span>colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>mint<span class="token punctuation">,</span> <span class="token punctuation">.</span>yellow<span class="token punctuation">]</span><span class="token punctuation">,</span> startPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>topLeading<span class="token punctuation">,</span> endPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottomTrailing<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"一个 NavigationView 的示例"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>white<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">safeAreaInset</span><span class="token punctuation">(</span>edge<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"bottom1"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"bottom2"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"bottom3"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                    <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">LinearGradient</span><span class="token punctuation">(</span>colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>purple<span class="token punctuation">,</span> <span class="token punctuation">.</span>blue<span class="token punctuation">]</span><span class="token punctuation">,</span> startPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>topLeading<span class="token punctuation">,</span> endPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottomTrailing<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"数字列表"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>            <span class="token comment">// placement 共有 keyboard、destructiveAction、cancellationAction、confirmationAction、status、primaryAction、navigation、principal、automatic 这些</span>            <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>primaryAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"primaryAction"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token punctuation">.</span>ultraThinMaterial<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// 通过 ToolbarItemGroup 可以简化相同位置 ToolbarItem 的编写。</span>            <span class="token class-name">ToolbarItemGroup</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>navigation<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"返回"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"前进"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">PCToolbar</span><span class="token punctuation">(</span>doDestruct<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"删除了"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> doCancel<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"取消了"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> doConfirm<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"确认了"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>status<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"status"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>principal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"principal"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                    <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>keyboard<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Touch Bar Button"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end toolbar</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - NavigationView 的目的页面</span><span class="token keyword">struct</span> <span class="token class-name">PNavDetailView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>presentationMode<span class="token punctuation">)</span> <span class="token keyword">var</span> pMode<span class="token punctuation">:</span> <span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">PresentationMode</span><span class="token operator">></span>    <span class="token keyword">var</span> contentStr<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LinearGradient</span><span class="token punctuation">(</span>colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>purple<span class="token punctuation">,</span> <span class="token punctuation">.</span>blue<span class="token punctuation">]</span><span class="token punctuation">,</span> startPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>topLeading<span class="token punctuation">,</span> endPoint<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottomTrailing<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>contentStr<span class="token punctuation">)</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"返回"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    pMode<span class="token punctuation">.</span>wrappedValue<span class="token punctuation">.</span><span class="token function">dismiss</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end ZStack</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 自定义 toolbar</span><span class="token comment">// 通过 ToolbarContent 创建可重复使用的 toolbar 组</span><span class="token keyword">struct</span> <span class="token class-name">PCToolbar</span><span class="token punctuation">:</span> <span class="token class-name">ToolbarContent</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> doDestruct<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span>    <span class="token keyword">let</span> doCancel<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span>    <span class="token keyword">let</span> doConfirm<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">ToolbarContent</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>destructiveAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"删除"</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> doDestruct<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>cancellationAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"取消"</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> doCancel<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>confirmationAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"确定"</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> doConfirm<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>toolbar 的位置设置可选项如下：</p><ul><li>primaryAction：放置到最主要位置，macOS 就是放在 toolbar 的最左边</li><li>automatic：根据平台不同放到默认位置</li><li>confirmationAction：一些确定的动作</li><li>cancellationAction：取消动作</li><li>destructiveAction：删除的动作</li><li>status：状态变化，比如检查更新等动作</li><li>navigation：导航动作，比如浏览器的前进后退</li><li>principal：突出的位置，iOS 和 macOS 会出现在中间的位置</li><li>keyboard：macOS 会出现在 Touch Bar 里。iOS 会出现在弹出的虚拟键盘上。</li></ul><h3 id="NavigationStack"><a href="#NavigationStack" class="headerlink" title="NavigationStack"></a>NavigationStack</h3><h4 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h4><p>假设我们有一个 TVShow 结构体和一个 Book 结构体，它们分别包含电视剧和书籍的名字。当用户点击一个电视剧或书籍的名字时，他们会被导航到相应的详细信息页面。</p><p>以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">TVShow</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">Book</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> tvShows <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Game of Thrones"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Breaking Bad"</span></span><span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> books <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">Book</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"1984"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Book</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"To Kill a Mockingbird"</span></span><span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Section</span><span class="token punctuation">(</span>header<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Best TV Shows"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>tvShows<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> show <span class="token keyword">in</span>                        <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> show<span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span>show<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Section</span><span class="token punctuation">(</span>header<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Books"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>books<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> book <span class="token keyword">in</span>                        <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> book<span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">TVShow</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> show <span class="token keyword">in</span>                <span class="token class-name">TVShowView</span><span class="token punctuation">(</span>show<span class="token punctuation">:</span> show<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> book <span class="token keyword">in</span>                <span class="token class-name">BookView</span><span class="token punctuation">(</span>book<span class="token punctuation">:</span> book<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Media"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">TVShowView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> show<span class="token punctuation">:</span> <span class="token class-name">TVShow</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Details for </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">show<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">BookView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> book<span class="token punctuation">:</span> <span class="token class-name">Book</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Details for </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="全局路由"><a href="#全局路由" class="headerlink" title="全局路由"></a>全局路由</h4><p>先写个路由的枚举</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">enum</span> <span class="token class-name">Route</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> all    <span class="token keyword">case</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">)</span>    <span class="token keyword">case</span> <span class="token function">detail</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">Book</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> des<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 App 中设置好全局路由</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">LearnNavApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WindowGroup</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">NavigationStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Route</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> route <span class="token keyword">in</span>                        <span class="token keyword">switch</span> route <span class="token punctuation">&#123;</span>                            <span class="token keyword">case</span> <span class="token punctuation">.</span>all<span class="token punctuation">:</span>                                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"显示所有图书"</span></span><span class="token punctuation">)</span>                            <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">let</span> book<span class="token punctuation">)</span><span class="token punctuation">:</span>                                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"添加书 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                            <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">detail</span><span class="token punctuation">(</span><span class="token keyword">let</span> book<span class="token punctuation">)</span><span class="token punctuation">:</span>                                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"详细 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>des</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所有视图都可调用，调用方式如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">NavigationLink</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"查看书籍详细说明"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token class-name">Route</span><span class="token punctuation">.</span><span class="token function">detail</span><span class="token punctuation">(</span><span class="token class-name">Book</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"1984"</span></span><span class="token punctuation">,</span> des<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"1984 Detail"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="NavigationPath"><a href="#NavigationPath" class="headerlink" title="NavigationPath"></a>NavigationPath</h3><p><code>NavigationPath</code> 是一个用于管理 SwiftUI 中导航路径的工具。它可以帮助你在 SwiftUI 中实现更复杂的导航逻辑。</p><p>在 SwiftUI 中，我们通常使用 <code>NavigationLink</code> 来实现导航。然而，<code>NavigationLink</code> 只能实现简单的前进导航，如果你需要实现更复杂的导航逻辑，例如后退、跳转到任意页面等，你就需要使用 <code>NavigationPath</code>。</p><p><code>NavigationPath</code> 的工作原理是，它维护了一个路径数组，每个元素代表一个页面。当你需要导航到一个新的页面时，你只需要将这个页面添加到路径数组中。当你需要后退时，你只需要从路径数组中移除最后一个元素。这样，你就可以实现任意复杂的导航逻辑。</p><p>看个例子</p><p>假设我们有一个 TVShow 结构体，它包含电视剧的名字。当用户点击一个电视剧的名字时，他们会被导航到这个电视剧的详细信息页面。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> path <span class="token operator">=</span> <span class="token class-name">NavigationPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> tvShows <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Game of Thrones"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Breaking Bad"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"The Witcher"</span></span><span class="token punctuation">)</span> <span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> $path<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Select a TV show to get started."</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>subheadline<span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>semibold<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>tvShows<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> show <span class="token keyword">in</span>                    <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> show<span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span>show<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>subheadline<span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>medium<span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> showFriends<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"This isn't navigation"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">TVShow</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> destination<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> show <span class="token keyword">in</span>                <span class="token class-name">TVShowView</span><span class="token punctuation">(</span>onSelectReset<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> <span class="token function">popToRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> show<span class="token punctuation">:</span> show<span class="token punctuation">,</span> otherShows<span class="token punctuation">:</span> tvShows<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Select your show"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> path<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> oldValue<span class="token punctuation">,</span> newValue <span class="token keyword">in</span>            <span class="token function">print</span><span class="token punctuation">(</span>newValue<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">showFriends</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> show <span class="token operator">=</span> <span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Friends"</span></span><span class="token punctuation">)</span>        path<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>show<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">func</span> <span class="token function-definition function">popToRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        path<span class="token punctuation">.</span><span class="token function">removeLast</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span>count<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">TVShowView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> onSelectReset<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span>    <span class="token keyword">var</span> show<span class="token punctuation">:</span> <span class="token class-name">TVShow</span>    <span class="token keyword">var</span> otherShows<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">TVShow</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>show<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>bottom<span class="token punctuation">)</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> onSelectReset<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Reset Selection"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>otherShows<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> otherShow <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>otherShow<span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">TVShow</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> premiereDate<span class="token punctuation">:</span> <span class="token class-name">Date</span> <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>now    <span class="token keyword">var</span> description<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"detail"</span></span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码中，<code>NavigationPath</code> 被用作一个 <code>@State</code> 变量，这意味着它会自动响应变化，并更新视图。当你修改 <code>NavigationPath</code> 中的路径数组时，视图会自动更新，显示新的页面。</p><h3 id="NavigationSplitView"><a href="#NavigationSplitView" class="headerlink" title="NavigationSplitView"></a>NavigationSplitView</h3><p>以下是一个基于 NavigationSplitView 的三栏视图的示例。这个示例包含了一个主视图，一个次级视图和一个详细视图。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> books<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Book</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token class-name">Book</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Book 1"</span></span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Author 1"</span></span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Description 1"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Book</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Book 2"</span></span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Author 2"</span></span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Description 2"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Book</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Book 3"</span></span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Author 3"</span></span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Description 3"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> selectedBook<span class="token punctuation">:</span> <span class="token class-name">Book</span><span class="token operator">?</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> splitVisibility<span class="token punctuation">:</span> <span class="token class-name">NavigationSplitViewVisibility</span> <span class="token operator">=</span> <span class="token punctuation">.</span>all    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationSplitView</span><span class="token punctuation">(</span>columnVisibility<span class="token punctuation">:</span> $splitVisibility<span class="token punctuation">,</span> sidebar<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> book <span class="token keyword">in</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> selectedBook <span class="token operator">=</span> book <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> book <span class="token operator">=</span> selectedBook <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Author: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>author</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Select a Book"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> detail<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> book <span class="token operator">=</span> selectedBook <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>description<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Book details will appear here"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> selectedBook<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> oldValue<span class="token punctuation">,</span> newValue <span class="token keyword">in</span>            <span class="token comment">//...</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">Book</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Equatable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> description<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>示例中，<code>sidebar</code> 是主视图，它显示了一个图书列表。当用户选择一个图书时，<code>content</code> 视图会显示图书的作者，<code>detail</code> 视图会显示图书的详细信息。<code>NavigationSplitView</code> 会根据 <code>splitVisibility</code> 的值来决定显示哪些视图。</p><h3 id="自定义导航栏"><a href="#自定义导航栏" class="headerlink" title="自定义导航栏"></a>自定义导航栏</h3><h4 id="交互样式"><a href="#交互样式" class="headerlink" title="交互样式"></a>交互样式</h4><p>使用 <code>navigationSplitViewStyle(_:)</code> 修饰符</p><h4 id="改变标签栏背景色"><a href="#改变标签栏背景色" class="headerlink" title="改变标签栏背景色"></a>改变标签栏背景色</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">toolbarBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>yellow<span class="token punctuation">.</span>gradient<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>automatic<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toolbarBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>visible<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>automatic<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="列宽"><a href="#列宽" class="headerlink" title="列宽"></a>列宽</h4><p> <code>navigationSplitViewColumnWidth(_:)</code> 修饰符用于指定列宽。</p><p> 设置列的最小、最大和理想大小，使用 <code>navigationSplitViewColumnWidth(min:ideal:max:)</code>。可以修饰于不同的列上。</p><h4 id="自定返回按钮"><a href="#自定返回按钮" class="headerlink" title="自定返回按钮"></a>自定返回按钮</h4><p>先通过修饰符隐藏系统返回按钮 <code>.navigationBarBackButtonHidden(true)</code>。然后通过 <code>ToolbarItem(placement: .navigationBarLeading)</code> 来添加自定义的返回按钮。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">BookDetailView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> book<span class="token punctuation">:</span> <span class="token class-name">Book</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> isDetailShown<span class="token punctuation">:</span> <span class="token class-name">Bool</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Author: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>author</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">navigationBarBackButtonHidden</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>title<span class="token punctuation">)</span>        <span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>            <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>navigationBarLeading<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>                    isDetailShown <span class="token operator">=</span> <span class="token boolean">false</span>                <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"chevron.backward"</span></span><span class="token punctuation">)</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Back to Books"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Inspectors右侧多出一栏"><a href="#Inspectors右侧多出一栏" class="headerlink" title="Inspectors右侧多出一栏"></a>Inspectors右侧多出一栏</h3><p>Inspector 的示例</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">Book</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> description<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> books<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Book</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token class-name">Book</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Book 1"</span></span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Author 1"</span></span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Description 1"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Book</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Book 2"</span></span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Author 2"</span></span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Description 2"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Book</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Book 3"</span></span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Author 3"</span></span><span class="token punctuation">,</span> description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Description 3"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> selectedBook<span class="token punctuation">:</span> <span class="token class-name">Book</span><span class="token operator">?</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> showInspector<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> splitVisibility<span class="token punctuation">:</span> <span class="token class-name">NavigationSplitViewVisibility</span> <span class="token operator">=</span> <span class="token punctuation">.</span>all        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationSplitView</span><span class="token punctuation">(</span>columnVisibility<span class="token punctuation">:</span> $splitVisibility<span class="token punctuation">,</span> sidebar<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> book <span class="token keyword">in</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> selectedBook <span class="token operator">=</span> book <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> book <span class="token operator">=</span> selectedBook <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Author: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>author</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Select a Book"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> detail<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Inspector 开关"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                showInspector<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> book <span class="token operator">=</span> selectedBook <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>description<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Book details will appear here"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">inspector</span><span class="token punctuation">(</span>isPresented<span class="token punctuation">:</span> $showInspector<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> book <span class="token operator">=</span> selectedBook <span class="token punctuation">&#123;</span>                <span class="token class-name">InspectorView</span><span class="token punctuation">(</span>book<span class="token punctuation">:</span> book<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">InspectorView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> book<span class="token punctuation">:</span> <span class="token class-name">Book</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Author: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">book<span class="token punctuation">.</span>author</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>book<span class="token punctuation">.</span>description<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">inspectorColumnWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">presentationDetents</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span>medium<span class="token punctuation">,</span> <span class="token punctuation">.</span>large<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>它显示了一个图书列表。当用户选择一个图书时，会显示 InspectorView，这是辅助视图，它显示了图书的详细信息。inspector 方法用于显示和隐藏 InspectorView，inspectorColumnWidth 方法用于设置辅助视图的宽度，presentationDetents 方法用于设置辅助视图的大小。</p><h3 id="导航状态保存和还原"><a href="#导航状态保存和还原" class="headerlink" title="导航状态保存和还原"></a>导航状态保存和还原</h3><p>通过 SceneStorage 保存导航路径，程序终止时会持久化存储路径，重启时恢复路径。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">protocol</span> <span class="token class-name">URLProcessor</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">associatedtype</span> <span class="token class-name">RouteType</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span>    <span class="token keyword">func</span> <span class="token function-definition function">process</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> url<span class="token punctuation">:</span> <span class="token constant">URL</span><span class="token punctuation">,</span> <span class="token keyword">mutating</span><span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token punctuation">[</span><span class="token class-name">RouteType</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">protocol</span> <span class="token class-name">UserActivityProcessor</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">associatedtype</span> <span class="token class-name">RouteType</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span>    <span class="token keyword">func</span> <span class="token function-definition function">process</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> activity<span class="token punctuation">:</span> <span class="token class-name">NSUserActivity</span><span class="token punctuation">,</span> <span class="token keyword">mutating</span><span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token punctuation">[</span><span class="token class-name">RouteType</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token attribute atrule">@Observable</span><span class="token attribute atrule">@MainActor</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">RouteManager</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> navigationPath<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">RouteType</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> jsonDecoder <span class="token operator">=</span> <span class="token class-name">JSONDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> jsonEncoder <span class="token operator">=</span> <span class="token class-name">JSONEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> urlProcessor<span class="token punctuation">:</span> any <span class="token class-name">URLProcessor</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token operator">></span>    <span class="token keyword">private</span> <span class="token keyword">let</span> activityProcessor<span class="token punctuation">:</span> any <span class="token class-name">UserActivityProcessor</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token operator">></span>    <span class="token keyword">init</span><span class="token punctuation">(</span>        urlProcessor<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">URLProcessor</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token operator">></span><span class="token punctuation">,</span>        activityProcessor<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">UserActivityProcessor</span><span class="token operator">&lt;</span><span class="token class-name">RouteType</span><span class="token operator">></span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>urlProcessor <span class="token operator">=</span> urlProcessor        <span class="token keyword">self</span><span class="token punctuation">.</span>activityProcessor <span class="token operator">=</span> activityProcessor    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">process</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> activity<span class="token punctuation">:</span> <span class="token class-name">NSUserActivity</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        activityProcessor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> <span class="token keyword">mutating</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>navigationPath<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">process</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> url<span class="token punctuation">:</span> <span class="token constant">URL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        urlProcessor<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token keyword">mutating</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>navigationPath<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">RouteManager</span> <span class="token keyword">where</span> <span class="token class-name">RouteType</span><span class="token punctuation">:</span> <span class="token class-name">Codable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">toData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Data</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span><span class="token operator">?</span> jsonEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>navigationPath<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">func</span> <span class="token function-definition function">restore</span><span class="token punctuation">(</span>from data<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            navigationPath <span class="token operator">=</span> <span class="token keyword">try</span> jsonDecoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">RouteType</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> data<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>            navigationPath <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码定义了一个名为 <code>RouteManager</code> 的类，它用于处理和管理导航路径。这个类使用了 SwiftUI 的 <code>@MainActor</code> 和 <code>@Observable</code> 属性包装器，以确保它的操作在主线程上执行，并且当 <code>navigationPath</code> 发生变化时，会自动更新相关的 UI。</p><p><code>RouteManager</code> 类有两个协议类型的属性：<code>urlProcessor</code> 和 <code>activityProcessor</code>。这两个属性分别用于处理 URL 和用户活动（<code>NSUserActivity</code>）。这两个处理器的任务是根据给定的 URL 或用户活动，更新 <code>navigationPath</code>。</p><p><code>RouteManager</code> 类还有两个方法：<code>process(_ activity: NSUserActivity)</code> 和 <code>process(_ url: URL)</code>。这两个方法分别用于处理用户活动和 URL。处理的方式是调用相应的处理器的 <code>process</code> 方法。</p><p>此外，<code>RouteManager</code> 类还有一个扩展，这个扩展只适用于 <code>RouteType</code> 是 <code>Codable</code> 的情况。这个扩展提供了两个方法：<code>toData()</code> 和 <code>restore(from data: Data)</code>。<code>toData()</code> 方法将 <code>navigationPath</code> 转换为 <code>Data</code>，<code>restore(from data: Data)</code> 方法则将 <code>Data</code> 转换回 <code>navigationPath</code>。这两个方法可以用于将 <code>navigationPath</code> 保存到磁盘，并在需要时从磁盘恢复。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">MainView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@SceneStorage</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"navigationState"</span></span><span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">var</span> navigationData<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token operator">?</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> dataStore <span class="token operator">=</span> <span class="token class-name">DataStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> routeManager <span class="token operator">=</span> <span class="token class-name">RouteManager</span><span class="token operator">&lt;</span><span class="token class-name">Route</span><span class="token operator">></span><span class="token punctuation">(</span>        urlProcessor<span class="token punctuation">:</span> <span class="token class-name">SomeURLProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        activityProcessor<span class="token punctuation">:</span> <span class="token class-name">SomeUserActivityProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> $routeManager<span class="token punctuation">.</span>navigationPath<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">SomeView</span><span class="token punctuation">(</span>categories<span class="token punctuation">:</span> dataStore<span class="token punctuation">.</span>categories<span class="token punctuation">)</span>                <span class="token punctuation">.</span>task <span class="token punctuation">&#123;</span> <span class="token keyword">await</span> dataStore<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Route</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> route <span class="token keyword">in</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span>onOpenURL <span class="token punctuation">&#123;</span> routeManager<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>task <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> navigationData <span class="token operator">=</span> navigationData <span class="token punctuation">&#123;</span>                routeManager<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> navigationData<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>                        <span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span> routeManager<span class="token punctuation">.</span>$navigationPath<span class="token punctuation">.</span>values <span class="token punctuation">&#123;</span>                navigationData <span class="token operator">=</span> routeManager<span class="token punctuation">.</span><span class="token function">toData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>@SceneStorage(&quot;navigationState&quot;)</code> 是用来保存和恢复导航状态的。当应用程序被挂起时，它会自动将 <code>navigationData</code> 保存到磁盘，当应用程序重新启动时，它会自动从磁盘恢复 <code>navigationData</code>。</p><p><code>@State private var dataStore = DataStore()</code> 和 <code>@State private var routeManager = RouteManager&lt;Route&gt;(...)</code> 是用来存储数据和路由管理器的。<code>DataStore</code> 是用来获取和存储数据的，<code>RouteManager</code> 是用来处理和管理导航路径的。</p><p><code>body</code> 属性定义了视图的内容。它首先创建了一个 <code>NavigationStack</code>，然后在这个 <code>NavigationStack</code> 中创建了一个 <code>SomeView</code>。<code>SomeView</code> 使用了 <code>dataStore.categories</code> 作为它的参数，并且在被创建后立即执行 <code>dataStore.fetch()</code> 来获取数据。</p><p><code>body</code> 属性还定义了一个任务，这个任务在视图被创建后立即执行。这个任务首先检查 <code>navigationData</code> 是否存在，如果存在，就使用 <code>routeManager.restore(from: navigationData)</code> 来恢复导航路径。然后，它监听 <code>routeManager.$navigationPath.values</code>，每当 <code>navigationPath</code> 发生变化时，就使用 <code>routeManager.toData()</code> 来将 <code>navigationPath</code> 转换为 <code>Data</code>，并将结果保存到 <code>navigationData</code> 中。</p><h2 id="布局基础"><a href="#布局基础" class="headerlink" title="布局基础"></a>布局基础</h2><h3 id="布局-基础"><a href="#布局-基础" class="headerlink" title="布局-基础"></a>布局-基础</h3><h4 id="基本元素样式"><a href="#基本元素样式" class="headerlink" title="基本元素样式"></a>基本元素样式</h4><p>通过 <code>.font(.title)</code> 设置字体大小。</p><p><code>.stroke(Color.blue)</code> 设置描边。举个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>orange<span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token class-name">StrokeStyle</span><span class="token punctuation">(</span>lineWidth<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> lineCap<span class="token punctuation">:</span> <span class="token punctuation">.</span>round<span class="token punctuation">,</span> dash<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>StrokeStyle(lineWidth: 10, lineCap: .round, dash: [30])</code> 定义了描边的样式，其中 <code>lineWidth: 10</code> 表示线宽为 10，<code>lineCap: .round</code> 表示线帽样式为圆形，<code>dash: [30]</code> 表示虚线模式，数组中的数字表示虚线和间隙的交替长度。</p><h4 id="frame"><a href="#frame" class="headerlink" title="frame"></a>frame</h4><p><code>.frame(width: 200, height:100, alignment: .topLeading)</code></p><ul><li><code>width: 200</code> 表示视图的宽度为 200 点。</li><li><code>height: 100</code> 表示视图的高度为 100 点。</li><li><code>alignment: .topLeading</code> 表示视图的内容应该在视图的左上角对齐。<code>.topLeading</code> 是 SwiftUI 中的一个对齐方式，表示左上角对齐。</li></ul><h4 id="Stack"><a href="#Stack" class="headerlink" title="Stack"></a>Stack</h4><p>多个视图通过 Stack 视图进行对齐排列。这些 Stack 视图主要是：</p><ul><li>ZStack：Z轴排列</li><li>VStack：垂直排列</li><li>HStack：横向排列</li></ul><h4 id="间隔"><a href="#间隔" class="headerlink" title="间隔"></a>间隔</h4><p> 视图之间的间隔可以用 Space()，它可以在各种布局视图中使用。</p><h3 id="布局-留白"><a href="#布局-留白" class="headerlink" title="布局-留白"></a>布局-留白</h3><h4 id="Space"><a href="#Space" class="headerlink" title="Space"></a>Space</h4><p><code>Spacer</code> 是一个灵活的空间，它会尽可能地占用多的空间，从而将其周围的视图推向堆栈的两边。因此，第一个 <code>Text</code> 视图会被推到左边，第二个 <code>Text</code> 视图会被推到中间，第三个 <code>Text</code> 视图会被推到右边。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"左边"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"中间"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"右边"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面这个例子是用 Space() 让三个视图都居右。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"视图1"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"视图2"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"视图3"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="布局-对齐"><a href="#布局-对齐" class="headerlink" title="布局-对齐"></a>布局-对齐</h3><h4 id="frame-对齐"><a href="#frame-对齐" class="headerlink" title="frame 对齐"></a>frame 对齐</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>topLeading<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="可设置对齐的视图"><a href="#可设置对齐的视图" class="headerlink" title="可设置对齐的视图"></a>可设置对齐的视图</h4><p>在 SwiftUI 中，许多视图都接受 <code>alignment</code> 参数，用于控制其子视图的对齐方式。以下是一些常见的接受 <code>alignment</code> 参数的视图：</p><ul><li><code>HStack(alignment: .bottom)</code>：水平堆栈视图，可以控制其子视图在垂直方向上的对齐方式。</li><li><code>VStack(alignment: .trailing)</code>：垂直堆栈视图，可以控制其子视图在水平方向上的对齐方式。</li><li><code>ZStack(alignment: .center)</code>：深度堆栈视图，可以控制其子视图在水平和垂直方向上的对齐方式。</li><li><code>GridRow(alignment: .firstTextBaseline)</code>：用于定义网格的行或列的大小，可以设置行或列中的内容的对齐方式。。</li></ul><h4 id="基线对齐"><a href="#基线对齐" class="headerlink" title="基线对齐"></a>基线对齐</h4><p>你可以使用 <code>alignment</code> 参数来设置视图的对齐方式，包括基线对齐。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">HStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>firstTextBaseline<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Hello"</span></span><span class="token punctuation">)</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"World"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，<code>HStack</code> 是一个水平堆栈视图，它会将其子视图水平排列。<code>alignment: .firstTextBaseline</code> 是一个参数，用于设置堆栈中的内容的对齐方式。<code>.firstTextBaseline</code> 表示所有文本视图都应该根据它们的第一行的基线对齐。基线是文本字符的底部线。</p><p>因此，这个 <code>HStack</code> 中的两个 <code>Text</code> 视图会根据它们的第一行的基线对齐，即使它们的字体大小不同。</p><h3 id="布局-居中"><a href="#布局-居中" class="headerlink" title="布局-居中"></a>布局-居中</h3><p>在 SwiftUI 中，有多种方法可以使视图居中：</p><h4 id="Spacer"><a href="#Spacer" class="headerlink" title="Spacer"></a>Spacer</h4><p>使用 <code>Spacer</code>：<code>Spacer</code> 是一个灵活的空间，它会尽可能地占用多的空间，从而将其周围的视图推向堆栈的两边。如果在一个视图的两边都放置一个 <code>Spacer</code>，那么这个视图就会被推到中间。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"居中"</span></span><span class="token punctuation">)</span>    <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="alignment"><a href="#alignment" class="headerlink" title="alignment"></a>alignment</h4><p>使用 <code>alignment</code> 参数：许多 SwiftUI 视图都接受 <code>alignment</code> 参数，用于控制其子视图的对齐方式。例如，<code>VStack</code> 和 <code>HStack</code> 都接受 <code>alignment</code> 参数。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"居中"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="frame-1"><a href="#frame-1" class="headerlink" title="frame"></a>frame</h4><p>使用 <code>frame</code> 方法：<code>frame</code> 方法可以设置视图的尺寸和对齐方式。如果你想让一个视图在其父视图中居中，你可以使用 <code>frame(maxWidth: .infinity, maxHeight: .infinity)</code> 来使视图尽可能地占用多的空间，然后使用 <code>alignment: .center</code> 来使视图在这个空间中居中。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"居中"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> maxHeight<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="布局-offset偏移"><a href="#布局-offset偏移" class="headerlink" title="布局-offset偏移"></a>布局-offset偏移</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">OffsetDemo</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> offset<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Hello, World!"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>y<span class="token punctuation">:</span> offset<span class="token punctuation">)</span>            <span class="token class-name">Slider</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> $offset<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">100</span><span class="token operator">...</span><span class="token number">100</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们创建了一个 <code>Text</code> 视图和一个 <code>Slider</code>。<code>Text</code> 视图使用了 <code>.offset(y: offset)</code> 修饰符，这意味着它的 y 偏移量会根据 <code>offset</code> 的值改变。<code>Slider</code> 则用于改变 <code>offset</code> 的值。当你移动滑块时，<code>Text</code> 视图的位置也会相应地上下移动。</p><h3 id="Safe-Area"><a href="#Safe-Area" class="headerlink" title="Safe Area"></a>Safe Area</h3><h4 id="ignoresSafeArea-忽略安全区域"><a href="#ignoresSafeArea-忽略安全区域" class="headerlink" title="ignoresSafeArea 忽略安全区域"></a>ignoresSafeArea 忽略安全区域</h4><p>使用 <code>.ignoresSafeArea()</code> 可以忽略安全区域。默认是所有方向都忽略。</p><p>如果只忽略部分方向，可以按照下面方法做：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">// 默认会同时包含 .keyboard 和 .container。</span><span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span>edges<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span>edges<span class="token punctuation">:</span> <span class="token punctuation">.</span>vertical<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span>edges<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>leading<span class="token punctuation">,</span> <span class="token punctuation">.</span>trailing<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">// 可以对安全区域分别指定</span><span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">.</span>keyboard<span class="token punctuation">,</span> edges<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">.</span>container<span class="token punctuation">,</span> edges<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>leading<span class="token punctuation">,</span> <span class="token punctuation">.</span>trailing<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="safeAreaInset"><a href="#safeAreaInset" class="headerlink" title="safeAreaInset"></a>safeAreaInset</h4><p><code>safeAreaInset</code> 是 SwiftUI 中的一个属性，它允许你将视图放置在安全区域内。”安全区域”是指设备屏幕上的一块区域，这块区域不会被系统界面（如状态栏、导航栏、工具栏、Tab栏等）遮挡。</p><p>例如，你可以使用 <code>safeAreaInset</code> 将一个视图放置在屏幕底部的安全区域内，代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Hello, World!"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">safeAreaInset</span><span class="token punctuation">(</span>edge<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Press me"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Button pressed"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，”Press me” 按钮会被放置在屏幕底部的安全区域内，而且距离底部有 10 个点的间距。</p><p>下面是更完整点的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> tasks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">TaskModel</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">...</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> <span class="token class-name">TaskModel</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Task </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token short-argument">$0</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> taskName <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isFocused<span class="token punctuation">:</span> <span class="token class-name">Bool</span> <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>tasks<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> task <span class="token keyword">in</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span>name<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">listStyle</span><span class="token punctuation">(</span><span class="token class-name">PlainListStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">safeAreaInset</span><span class="token punctuation">(</span>edge<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Add task"</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $taskName<span class="token punctuation">,</span> onCommit<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                            <span class="token function">addTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">textFieldStyle</span><span class="token punctuation">(</span><span class="token class-name">RoundedBorderTextFieldStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>leading<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>                                                <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                            <span class="token function">addTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"plus"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>trailing<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>bottom<span class="token punctuation">,</span> isFocused <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">NotificationCenter</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">.</span><span class="token function">publisher</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">UIResponder</span><span class="token punctuation">.</span>keyboardWillShowNotification<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span>                    withAnimation <span class="token punctuation">&#123;</span>                        isFocused <span class="token operator">=</span> <span class="token boolean">true</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">NotificationCenter</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">.</span><span class="token function">publisher</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">UIResponder</span><span class="token punctuation">.</span>keyboardWillHideNotification<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span>                    withAnimation <span class="token punctuation">&#123;</span>                        isFocused <span class="token operator">=</span> <span class="token boolean">false</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationBarTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Task List Demo"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">addTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token operator">!</span>taskName<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span>            withAnimation <span class="token punctuation">&#123;</span>                tasks<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">TaskModel</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> taskName<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            taskName <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">TaskModel</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用户可以在底部的输入框中输入任务名称，然后点击 “+” 按钮将任务添加到任务清单中。添加的任务会显示在屏幕的上方。当键盘出现或消失时，底部的输入框会相应地移动，以确保不会被键盘遮挡。 </p><h3 id="布局原理"><a href="#布局原理" class="headerlink" title="布局原理"></a>布局原理</h3><p>SwiftUI 的布局系统是一个两阶段的协商过程，涉及到父视图和子视图之间的交互。</p><p>建议阶段：在这个阶段，父视图会向子视图提出一个建议尺寸。这个建议尺寸是父视图希望子视图的大小。例如，如果父视图是一个 VStack，那么它可能会向子视图提出一个具有明确高度、宽度未指定的建议尺寸。</p><p>需求阶段：在这个阶段，子视图会根据父视图的建议尺寸来确定自己的需求尺寸。子视图可以选择接受父视图的建议尺寸，也可以选择返回一个不同的尺寸。例如，一个 Text 视图可能会返回一个刚好能够容纳其文本的尺寸。</p><p>在这个过程中，父视图和子视图都有可能影响最终的布局结果。父视图可以通过调整建议尺寸来影响子视图的大小，而子视图可以通过返回不同的需求尺寸来影响自己的大小。</p><p>在一些复杂的布局场景中，可能需要进行多轮的协商才能得到最终的布局结果。例如，如果一个视图使用了 GeometryReader 来获取其在父视图中的位置和尺寸，那么 GeometryReader 可能会在布局稳定之前，多次向子视图发送新的几何信息。</p><p>总的来说 SwiftUI 它允许父视图和子视图之间进行协商，以达到最佳的布局效果。</p><h2 id="布局进阶"><a href="#布局进阶" class="headerlink" title="布局进阶"></a>布局进阶</h2><h3 id="AnyLayout"><a href="#AnyLayout" class="headerlink" title="AnyLayout"></a>AnyLayout</h3><p>使用 AnyLayout 包装布局组件，可以在布局之间进行切换，同时保持动画效果。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">WeatherLayout</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> changeLayout <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> layout <span class="token operator">=</span> changeLayout <span class="token operator">?</span> <span class="token class-name">AnyLayout</span><span class="token punctuation">(</span><span class="token class-name">HStackLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token class-name">AnyLayout</span><span class="token punctuation">(</span><span class="token class-name">VStackLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        layout <span class="token punctuation">&#123;</span>            <span class="token class-name">WeatherView</span><span class="token punctuation">(</span>icon<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"sun.max.fill"</span></span><span class="token punctuation">,</span> temperature<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token punctuation">.</span>yellow<span class="token punctuation">)</span>            <span class="token class-name">WeatherView</span><span class="token punctuation">(</span>icon<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"cloud.rain.fill"</span></span><span class="token punctuation">,</span> temperature<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token punctuation">.</span>blue<span class="token punctuation">)</span>            <span class="token class-name">WeatherView</span><span class="token punctuation">(</span>icon<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"snow"</span></span><span class="token punctuation">,</span> temperature<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token punctuation">.</span>white<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> changeLayout<span class="token punctuation">)</span>        <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>            changeLayout<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">WeatherView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> icon<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> temperature<span class="token punctuation">:</span> <span class="token class-name">Int</span>    <span class="token keyword">let</span> color<span class="token punctuation">:</span> <span class="token class-name">Color</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> icon<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">temperature</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">°"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码中，我们创建了一个 WeatherView 视图，它包含一个天气图标和一个温度标签。然后，我们在 WeatherLayout 视图中使用 AnyLayout 来动态改变布局。用户可以通过点击视图来在水平布局和垂直布局之间切换。</p><h3 id="ViewThatFits"><a href="#ViewThatFits" class="headerlink" title="ViewThatFits"></a>ViewThatFits</h3><p><code>ViewThatFits</code> 是一个自动选择最适合当前屏幕大小的子视图进行显示的视图。它会根据可用空间的大小来决定如何布局和显示子视图。</p><p><code>ViewThatFits</code> 是一个在 SwiftUI 中用于选择最适合显示的视图的组件。它的工作原理如下：</p><ul><li><p>首先，<code>ViewThatFits</code> 会测量在特定轴（水平或垂直）或两个轴（水平和垂直）上的可用空间。这是通过 SwiftUI 的布局系统来完成的，该系统提供了当前视图的大小和位置信息。</p></li><li><p>接着，<code>ViewThatFits</code> 会测量第一个视图的大小。这是通过调用视图的 <code>measure(in:)</code> 方法来完成的，该方法返回一个包含视图理想大小的 <code>CGSize</code> 值。</p></li><li><p>如果第一个视图的大小适合可用空间，<code>ViewThatFits</code> 就会选择并放置这个视图。放置视图是通过调用视图的 <code>layout(in:)</code> 方法来完成的，该方法接受一个 <code>CGRect</code> 值，该值定义了视图在其父视图中的位置和大小。</p></li><li><p>如果第一个视图的大小不适合可用空间，<code>ViewThatFits</code> 会继续测量第二个视图的大小。如果第二个视图的大小适合可用空间，<code>ViewThatFits</code> 就会选择并放置这个视图。</p></li><li><p>如果所有视图的大小都不适合可用空间，<code>ViewThatFits</code> 会选择并放置 <code>ViewBuilder</code> 闭包中的最后一个视图。<code>ViewBuilder</code> 是一个特殊的闭包，它可以根据其内容动态创建视图。</p></li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">ViewThatFits</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"晴天，气温25°"</span></span><span class="token punctuation">)</span> <span class="token comment">// 宽度在200到300之间</span>        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>yellow<span class="token punctuation">)</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"晴天，25°"</span></span><span class="token punctuation">)</span> <span class="token comment">// 宽度在150到200之间</span>        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>gray<span class="token punctuation">)</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"晴25"</span></span><span class="token punctuation">)</span> <span class="token comment">// 宽度在100到150之间</span>        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">)</span> <span class="token comment">// ViewThatFits所需的大小</span><span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>orange<span class="token punctuation">)</span> <span class="token comment">// 父视图提议的大小</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在不同的宽度下，ViewThatFits 会选择不同的视图进行显示。在上面的示例中，当父视图的宽度在100到150之间时，ViewThatFits 会选择显示 “晴25” 这个视图。</p><p>通过 ViewThatFits 来确定内容是否可滚动。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> step<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token number">3</span>    <span class="token keyword">var</span> count<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Int</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span><span class="token punctuation">.</span>leading<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"数量: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">count</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span>            <span class="token class-name">Stepper</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"数量"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> $step<span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token operator">...</span><span class="token number">20</span><span class="token punctuation">)</span>            <span class="token class-name">ViewThatFits</span> <span class="token punctuation">&#123;</span>                content                <span class="token class-name">ScrollView</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">,</span>showsIndicators<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    content                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> content<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">..&lt;</span> count<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                    <span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Layout协议"><a href="#Layout协议" class="headerlink" title="Layout协议"></a>Layout协议</h3><p>通过实现 Layout 协议，创建一个水平堆栈布局，其中所有子视图的宽度都相等。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">OptimizedEqualWidthHStack</span><span class="token punctuation">:</span> <span class="token class-name">Layout</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">func</span> <span class="token function-definition function">sizeThatFits</span><span class="token punctuation">(</span>proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span> subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">,</span> cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGSize</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> subviews<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token punctuation">.</span>zero <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> maxSubviewSize <span class="token operator">=</span> <span class="token function">calculateMaxSize</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> totalSpacing <span class="token operator">=</span> <span class="token function">calculateSpacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">+</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> maxSubviewSize<span class="token punctuation">.</span>width <span class="token operator">*</span> <span class="token class-name">CGFloat</span><span class="token punctuation">(</span>subviews<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token operator">+</span> totalSpacing<span class="token punctuation">,</span> height<span class="token punctuation">:</span> maxSubviewSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">func</span> <span class="token function-definition function">placeSubviews</span><span class="token punctuation">(</span><span class="token keyword">in</span> bounds<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">,</span> proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span> subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">,</span> cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> subviews<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> maxSubviewSize <span class="token operator">=</span> <span class="token function">calculateMaxSize</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> spacings <span class="token operator">=</span> <span class="token function">calculateSpacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> placementProposal <span class="token operator">=</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> maxSubviewSize<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> maxSubviewSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span>    <span class="token keyword">var</span> nextX <span class="token operator">=</span> bounds<span class="token punctuation">.</span>minX <span class="token operator">+</span> maxSubviewSize<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span>    <span class="token keyword">for</span> index <span class="token keyword">in</span> subviews<span class="token punctuation">.</span>indices <span class="token punctuation">&#123;</span>      subviews<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">place</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> nextX<span class="token punctuation">,</span> y<span class="token punctuation">:</span> bounds<span class="token punctuation">.</span>midY<span class="token punctuation">)</span><span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">,</span> proposal<span class="token punctuation">:</span> placementProposal<span class="token punctuation">)</span>      nextX <span class="token operator">+=</span> maxSubviewSize<span class="token punctuation">.</span>width <span class="token operator">+</span> spacings<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">calculateMaxSize</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGSize</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> subviews<span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">sizeThatFits</span><span class="token punctuation">(</span><span class="token punctuation">.</span>unspecified<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">.</span>zero<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token short-argument">$1</span><span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">.</span>height<span class="token punctuation">,</span> <span class="token short-argument">$1</span><span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">calculateSpacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">[</span><span class="token class-name">CGFloat</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> subviews<span class="token punctuation">.</span>indices<span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span> <span class="token operator">&lt;</span> subviews<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> subviews<span class="token punctuation">[</span><span class="token short-argument">$0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>spacing<span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> subviews<span class="token punctuation">[</span><span class="token short-argument">$0</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>spacing<span class="token punctuation">,</span> along<span class="token punctuation">:</span> <span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面这段代码中 sizeThatFits 方法计算并返回布局容器需要的大小，以便排列其子视图。它首先检查子视图数组是否为空，如果为空则返回 .zero。然后，它计算子视图的最大尺寸和总间距，最后返回一个 CGSize 对象，其宽度等于最大子视图宽度乘以子视图数量加上总间距，高度等于最大子视图高度。</p><p>placeSubviews 方法将子视图放置在布局容器中。它首先检查子视图数组是否为空，如果为空则返回。然后，它计算子视图的最大尺寸和间距，然后遍历子视图数组，将每个子视图放置在布局容器中的适当位置。</p><p>calculateMaxSize 和 calculateSpacing 是两个私有方法，用于计算子视图的最大尺寸和间距。</p><h3 id="GeometryReader"><a href="#GeometryReader" class="headerlink" title="GeometryReader"></a>GeometryReader</h3><p>在 SwiftUI 中，有多种方法可以获取和控制视图的尺寸：</p><ul><li><code>frame(width:60, height:60)</code>：这个方法会为子视图提供一个建议的尺寸，这里是 60 x 60。</li><li><code>fixedSize()</code>：这个方法会为子视图提供一个未指定模式的建议尺寸，这意味着视图会尽可能地大以适应其内容。</li><li><code>frame(minWidth: 120, maxWidth: 360)</code>：这个方法会将子视图的需求尺寸控制在指定的范围中，这里是宽度在 120 到 360 之间。</li><li><code>frame(idealWidth: 120, idealHeight: 120)</code>：这个方法会返回一个需求尺寸，如果当前视图收到为未指定模式的建议尺寸，那么它会返回 120 x 120 的尺寸。</li><li><code>GeometryReader</code>：<code>GeometryReader</code> 会将建议尺寸作为需求尺寸直接返回，这意味着它会充满全部可用区域。你可以使用 <code>GeometryReader</code> 来获取其内容的尺寸和位置。</li></ul><p><code>GeometryReader</code> 可以获取其内容的尺寸和位置。在这个例子中，我们使用 <code>GeometryReader</code> 来获取视图的尺寸，然后打印出来。这对于理解 SwiftUI 的布局系统和调试布局问题非常有用。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">logSizeInfo</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> label<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token function">background</span><span class="token punctuation">(</span>            <span class="token class-name">GeometryReader</span> <span class="token punctuation">&#123;</span> proxy <span class="token keyword">in</span>                <span class="token class-name">Color</span><span class="token punctuation">.</span>clear                    <span class="token punctuation">.</span><span class="token function">onAppear</span><span class="token punctuation">(</span>perform<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                        <span class="token function">debugPrint</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">label</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> Size: </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">proxy<span class="token punctuation">.</span>size</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"大标题"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">logSizeInfo</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"大标题视图"</span></span><span class="token punctuation">)</span> <span class="token comment">// 打印视图尺寸</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"正文"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">logSizeInfo</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"正文视图"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码首先定义了一个 <code>View</code> 的扩展，添加了一个 <code>logSizeInfo(_:)</code> 方法。这个方法接受一个标签字符串作为参数，然后返回一个新的视图。这个新的视图在背景中使用 <code>GeometryReader</code> 来获取并打印视图的尺寸。</p><p>然后，我们创建了一个 <code>VStack</code> 视图，其中包含一个 <code>Text</code> 视图。我们为 <code>Text</code> 视图调用了 <code>logSizeInfo(_:)</code> 方法，以打印其尺寸。</p><p>如何利用 <code>GeometryReader</code> 来绘制一个圆形？</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">CircleView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">GeometryReader</span> <span class="token punctuation">&#123;</span> proxy <span class="token keyword">in</span>            <span class="token class-name">Path</span> <span class="token punctuation">&#123;</span> path <span class="token keyword">in</span>                <span class="token keyword">let</span> radius <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>proxy<span class="token punctuation">.</span>size<span class="token punctuation">.</span>width<span class="token punctuation">,</span> proxy<span class="token punctuation">.</span>size<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span>                <span class="token keyword">let</span> center <span class="token operator">=</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> proxy<span class="token punctuation">.</span>size<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> proxy<span class="token punctuation">.</span>size<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>                path<span class="token punctuation">.</span><span class="token function">addArc</span><span class="token punctuation">(</span>center<span class="token punctuation">:</span> center<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> radius<span class="token punctuation">,</span> startAngle<span class="token punctuation">:</span> <span class="token punctuation">.</span>zero<span class="token punctuation">,</span> endAngle<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>degrees<span class="token punctuation">:</span> <span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">,</span> clockwise<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们首先获取 <code>GeometryReader</code> 的尺寸，然后计算出半径和中心点的位置。然后，我们使用 <code>Path</code> 的 <code>addArc(center:radius:startAngle:endAngle:clockwise:)</code> 方法来添加一个圆形路径。最后，我们使用 <code>fill(_:)</code> 方法来填充路径，颜色为蓝色。</p><p>关于 GeometryReader 性能问题</p><p>GeometryReader 是 SwiftUI 中的一个工具，它可以帮助我们获取视图的大小和位置。但是，它在获取这些信息时，需要等待视图被评估、布局和渲染完成。这就好比你在装修房子时，需要等待墙壁砌好、油漆干燥后，才能测量墙壁的尺寸。这个过程可能需要等待一段时间，而且可能需要多次重复，因为每次墙壁的尺寸改变，都需要重新测量。</p><p>这就是 GeometryReader 可能会影响性能的原因。它需要等待视图完成一轮的评估、布局和渲染，然后才能获取到尺寸数据，然后可能需要根据这些数据重新调整布局，这就需要再次进行评估、布局和渲染。这个过程可能需要重复多次，导致视图被多次重新评估和布局。</p><p>但是，随着 SwiftUI 的更新，这个问题已经有所改善。现在，我们可以创建自定义的布局容器，这些容器可以在布局阶段就获取到父视图的建议尺寸和所有子视图的需求尺寸，这样就可以避免反复传递尺寸数据，减少了视图的反复更新。</p><h3 id="alignmentGuide"><a href="#alignmentGuide" class="headerlink" title="alignmentGuide"></a>alignmentGuide</h3><p><code>alignmentGuide</code>是SwiftUI中的一个修饰符，它允许你自定义视图的对齐方式。你可以使用它来调整视图在其父视图或同级视图中的位置。</p><p>当你在一个视图上应用<code>alignmentGuide</code>修饰符时，你需要提供一个对齐标识符和一个闭包。对齐标识符定义了你想要调整的对齐方式（例如，<code>.leading</code>，<code>.trailing</code>，<code>.center</code>等）。闭包接收一个参数，这个参数包含了视图的尺寸，你可以使用这个参数来计算对齐指南的偏移量。</p><p>举个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">CircleView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">alignmentGuide</span><span class="token punctuation">(</span><span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> vd <span class="token keyword">in</span>                    vd<span class="token punctuation">[</span><span class="token punctuation">.</span>top<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">50</span>                <span class="token punctuation">&#125;</span>            <span class="token class-name">CircleView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">struct</span> <span class="token class-name">CircleView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>mint<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在HStack中，第一个CircleView使用了.alignmentGuide修饰符，这使得它在顶部对齐时向下偏移了50个单位。</p><h3 id="布局进阶-参考资料"><a href="#布局进阶-参考资料" class="headerlink" title="布局进阶-参考资料"></a>布局进阶-参考资料</h3><h4 id="WWDC"><a href="#WWDC" class="headerlink" title="WWDC"></a>WWDC</h4><p>23</p><ul><li><a href="https://developer.apple.com/wwdc23/10111">Go beyond the window with SwiftUI - WWDC23 - Videos - Apple Developer</a></li></ul><p>22</p><ul><li><a href="https://developer.apple.com/wwdc22/10061">Bring multiple windows to your SwiftUI app  - WWDC22 - Videos - Apple Developer</a> 为您的 SwiftUI App 添加多个窗口</li></ul><p>20</p><ul><li><a href="https://developer.apple.com/wwdc20/10031">Stacks, Grids, and Outlines in SwiftUI - WWDC20 - Videos - Apple Developer</a> SwiftUI 中的叠放、网格和大纲</li><li><a href="https://developer.apple.com/news/?id=nixcb564">How to make your app look great on every screen - Discover - Apple Developer</a> How to make your app look greate on every screen</li></ul><h4 id="官方接口文档"><a href="#官方接口文档" class="headerlink" title="官方接口文档"></a>官方接口文档</h4><ul><li><a href="https://developer.apple.com/documentation/swiftui/layout-fundamentals">Layout fundamentals | 接口</a></li><li><a href="https://developer.apple.com/documentation/swiftui/layout-adjustments">Layout adjustments | 接口</a></li><li><a href="https://developer.apple.com/documentation/swiftui/custom-layout">Custom layout | 接口</a></li><li><a href="https://developer.apple.com/documentation/swiftui/view-groupings">View groupings | 接口</a></li></ul><h2 id="Stack-1"><a href="#Stack-1" class="headerlink" title="Stack"></a>Stack</h2><p>Stack View 有 VStack、HStack 和 ZStack</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/stack-ap01.jpeg" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/stack-ap01.jpeg"></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayStackView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 默认是 VStack 竖排</span>                <span class="token comment">// 横排</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"左"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"右"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// Z 轴排</span>        <span class="token class-name">ZStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"logo"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"戴铭的开发小册子"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>                <span class="token class-name">Color</span><span class="token punctuation">.</span>cyan            <span class="token punctuation">.</span><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"一段文字"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="GroupBox"><a href="#GroupBox" class="headerlink" title="GroupBox"></a>GroupBox</h2><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/groupbox-ap01.png" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/groupbox-ap01.png"></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayGroupBoxView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">GroupBox</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"这是 GroupBox 的内容"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"标题一"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"t.square.fill"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token class-name">GroupBox</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"还是 GroupBox 的内容"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"标题二"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"t.square.fill"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">groupBoxStyle</span><span class="token punctuation">(</span><span class="token class-name">PCGroupBoxStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PCGroupBoxStyle</span><span class="token punctuation">:</span> <span class="token class-name">GroupBoxStyle</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">makeBody</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> <span class="token class-name">Configuration</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            configuration<span class="token punctuation">.</span>label                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>            configuration<span class="token punctuation">.</span>content        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token punctuation">.</span>pink<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token punctuation">.</span>continuous<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>叠加 GroupBox 颜色会有区分</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">GroupBox</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电视剧名称: 人民的名义"</span></span><span class="token punctuation">)</span>    <span class="token class-name">GroupBox</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"播放时间: 每周一至周五"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后，您还可以 <code>GroupBox</code> 使用 <code>Label</code> .将 <code>Label</code> 定位为 <code>GroupBox</code> 容器的标题。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">GroupBox</span><span class="token punctuation">(</span>label<span class="token punctuation">:</span> <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电视剧"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"tv"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"播放时间: 每周一至周五"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>GroupBox 也可以用于创建自定义的按钮组，如下所示：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">TVShowCardView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// The header of the card</span>            <span class="token comment">// - Photo, Show Name and Genre</span>            <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>gray<span class="token punctuation">)</span>                <span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"权力的游戏"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>semibold<span class="token punctuation">)</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"奇幻剧"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>caption<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">(</span>uiColor<span class="token punctuation">:</span> <span class="token class-name">UIColor</span><span class="token punctuation">.</span>systemGray6<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span>top<span class="token punctuation">,</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span>                        <span class="token comment">// The description of the show in a few lines</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"《权力的游戏》是一部改编自乔治·马丁的奇幻小说系列《冰与火之歌》的电视剧。"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>body<span class="token punctuation">)</span>                        <span class="token comment">// Buttons to watch, share or save the show</span>            <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                <span class="token function">actionGroupBox</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"play.rectangle"</span></span><span class="token punctuation">,</span> actionName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"观看"</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Watching..."</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token function">actionGroupBox</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"square.and.arrow.up"</span></span><span class="token punctuation">,</span> actionName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"分享"</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Sharing..."</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token function">actionGroupBox</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"bookmark"</span></span><span class="token punctuation">,</span> actionName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"保存"</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Saving..."</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">cornerRadius</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// A function to create a GroupBox for an action</span>    <span class="token keyword">func</span> <span class="token function-definition function">actionGroupBox</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> actionName<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">GroupBox</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">VStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> imageName<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>actionName<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>caption<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>            <span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">TVShowCardView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                                <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token class-name">UIColor</span><span class="token punctuation">.</span>systemGray6<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"电视剧"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token punctuation">.</span>sRGB<span class="token punctuation">,</span> red<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> green<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> blue<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> opacity<span class="token punctuation">:</span> <span class="token number">0.25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="TabView"><a href="#TabView" class="headerlink" title="TabView"></a>TabView</h2><h3 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayTabView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selection <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ZStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TabView</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"one"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"首页"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">hidden</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"two"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"二栏"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"three"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"三栏"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"four"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"five"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"six"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"seven"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"eight"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"nine"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"ten"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end TabView</span>                                    <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"上一页"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> selection <span class="token operator">></span> <span class="token number">0</span> <span class="token punctuation">&#123;</span>                        selection <span class="token operator">-=</span> <span class="token number">1</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">keyboardShortcut</span><span class="token punctuation">(</span><span class="token punctuation">.</span>cancelAction<span class="token punctuation">)</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"下一页"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> selection <span class="token operator">&lt;</span> <span class="token number">9</span> <span class="token punctuation">&#123;</span>                        selection <span class="token operator">+=</span> <span class="token number">1</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">keyboardShortcut</span><span class="token punctuation">(</span><span class="token punctuation">.</span>defaultAction<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end HStack</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>.tabViewStyle(PageTabViewStyle(indexDisplayMode: .never)) 可以实现 UIPageViewController 的效果，如果要给小白点加上背景，可以多添加一个 .indexViewStyle(PageIndexViewStyle(backgroundDisplayMode: .always)) 修改器。</p><h3 id="添加提醒"><a href="#添加提醒" class="headerlink" title="添加提醒"></a>添加提醒</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> bookVm<span class="token punctuation">:</span> <span class="token class-name">BooksViewModel</span>        <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        bookVm <span class="token operator">=</span> <span class="token class-name">BooksViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TabView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">BookListView</span><span class="token punctuation">(</span>bookVm<span class="token punctuation">:</span> bookVm<span class="token punctuation">)</span>                <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"list.bullet.rectangle.fill"</span></span><span class="token punctuation">)</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Book List"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token class-name">SelectedBooksView</span><span class="token punctuation">(</span>bookVm<span class="token punctuation">:</span> bookVm<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">badge</span><span class="token punctuation">(</span>bookVm<span class="token punctuation">.</span>selectedBooks<span class="token punctuation">.</span>count<span class="token punctuation">)</span>                <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"book.fill"</span></span><span class="token punctuation">)</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Selected Books"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="自定义样式"><a href="#自定义样式" class="headerlink" title="自定义样式"></a>自定义样式</h3><p>iOS 14 和 macOS 11 开始可以使用 tabViewStyle 修饰符更改 TabView 样式。比如有页面指示器的水平滚动图片。</p><p>显示页面指示器：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">tabViewStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>indexDisplayMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>always<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>.tabViewStyle(.page(indexDisplayMode: .never))</code> 修饰符隐藏页面指示器。</p><p>水平滚动图片：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> images <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"pencil"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"scribble"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"highlighter"</span></span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TabView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>images<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> imageName <span class="token keyword">in</span>                    <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> imageName<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">scaledToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">tabViewStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>indexDisplayMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>always<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>分页视图</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">OnboardingView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TabView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">OnboardingPageView</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"figure.mixed.cardio"</span></span><span class="token punctuation">,</span>                               title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Welcome"</span></span><span class="token punctuation">,</span>                               description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Welcome to MyApp! Get started by exploring our amazing features."</span></span><span class="token punctuation">)</span>            <span class="token class-name">OnboardingPageView</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"figure.archery"</span></span><span class="token punctuation">,</span>                               title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Discover"</span></span><span class="token punctuation">,</span>                               description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Discover new content and stay up-to-date with the latest news and updates."</span></span><span class="token punctuation">)</span>            <span class="token class-name">OnboardingPageView</span><span class="token punctuation">(</span>imageName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"figure.yoga"</span></span><span class="token punctuation">,</span>                               title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Connect"</span></span><span class="token punctuation">,</span>                               description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Connect with friends and share your experiences with the community."</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">tabViewStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span>indexDisplayMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>always<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">indexViewStyle</span><span class="token punctuation">(</span><span class="token class-name">PageIndexViewStyle</span><span class="token punctuation">(</span>backgroundDisplayMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>always<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>.indexViewStyle(PageIndexViewStyle(backgroundDisplayMode: .always))</code> 修饰符添加了背景。这将在点周围添加一个背景，使其在任何背景下都更容易看到。</p><h3 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h3><p>iOS 16 和 macOS 13 开始可以更改 TabView 的背景颜色。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">MainScreen</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">TabView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">BookListView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"图书列表"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">toolbarBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>yellow<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>navigationBar<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">toolbarBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>visible<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>navigationBar<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"图书"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"book.closed"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">UserPreferencesView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span>tabItem <span class="token punctuation">&#123;</span>                    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"设置"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"gearshape"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">toolbarBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>indigo<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>tabBar<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">toolbarBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>visible<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>tabBar<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">toolbarColorScheme</span><span class="token punctuation">(</span><span class="token punctuation">.</span>dark<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>tabBar<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">BookListView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"这里是图书列表"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">UserPreferencesView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"这里是用户设置"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ControlGroup"><a href="#ControlGroup" class="headerlink" title="ControlGroup"></a>ControlGroup</h2><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayControlGroupView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ControlGroup</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"plus"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"plus"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"minus"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"minus"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">controlGroupStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>automatic<span class="token punctuation">)</span> <span class="token comment">// .automatic 是默认样式，还有 .navigation</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Advanced-layout-control"><a href="#Advanced-layout-control" class="headerlink" title="Advanced layout control"></a>Advanced layout control</h2><p>session <a href="https://developer.apple.com/videos/play/wwdc2022-10056">Compose custom layouts with SwiftUI</a> </p><p>提供了新的 Grid 视图来同时满足 VStack 和 HStack。还有一个更低级别 Layout 接口，可以完全控制构建应用所需的布局。另外还有 ViewThatFits 可以自动选择填充可用空间的方式。</p><p>Grid 示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Grid</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">GridRow</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"One"</span></span><span class="token punctuation">)</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"One"</span></span><span class="token punctuation">)</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"One"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token class-name">GridRow</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Two"</span></span><span class="token punctuation">)</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Two"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token class-name">GridRow</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Three"</span></span><span class="token punctuation">)</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Three"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">gridCellColumns</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>gridCellColumns()</code>  modifier 可以让一个单元格跨多列。</p><p>ViewThatFits 的新视图，允许根据适合的大小放视图。ViewThatFits 会自动选择对于当前屏幕大小合适的子视图进行显示。Ryan Lintott 的<a href="https://twitter.com/ryanlintott/status/1534706352177700871">示例效果</a> ，对应示例代码 <a href="https://gist.github.com/ryanlintott/d03140dd155d0493a758dcd284e68eaa">LayoutThatFits.swift</a> 。</p><p>新的 Layout 协议可以观看 Swift Talk 第 308 期 <a href="https://talk.objc.io/episodes/S01E308-the-layout-protocol">The Layout Protocol</a> 。</p><p>通过符合 Layout 协议，我们可以自定义一个自定义的布局容器，直接参与 SwiftUI 的布局过程。新的 ProposedViewSize 结构，它是容器视图提供的大小。 <code>Layout.Subviews</code> 是布局视图的子视图代理集合，我们可以在其中为每个子视图请求各种布局属性。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">public</span> <span class="token keyword">protocol</span> <span class="token class-name">Layout</span><span class="token punctuation">:</span> <span class="token class-name">Animatable</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">static</span> <span class="token keyword">var</span> layoutProperties<span class="token punctuation">:</span> <span class="token class-name">LayoutProperties</span> <span class="token punctuation">&#123;</span> <span class="token keyword">get</span> <span class="token punctuation">&#125;</span>  <span class="token keyword">associatedtype</span> <span class="token class-name">Cache</span> <span class="token operator">=</span> <span class="token class-name">Void</span>  <span class="token keyword">typealias</span> <span class="token class-name">Subviews</span> <span class="token operator">=</span> <span class="token class-name">LayoutSubviews</span>  <span class="token keyword">func</span> <span class="token function-definition function">updateCache</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Cache</span><span class="token punctuation">,</span> subviews<span class="token punctuation">:</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Subviews</span><span class="token punctuation">)</span>  <span class="token keyword">func</span> <span class="token function-definition function">spacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Subviews</span><span class="token punctuation">,</span> cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Cache</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">ViewSpacing</span>  <span class="token comment">/// We return our view size here, use the passed parameters for computing the</span>  <span class="token comment">/// layout.</span>  <span class="token keyword">func</span> <span class="token function-definition function">sizeThatFits</span><span class="token punctuation">(</span>    proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span>     subviews<span class="token punctuation">:</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Subviews</span><span class="token punctuation">,</span>     cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Cache</span> <span class="token comment">// 👈🏻 use this for calculated data shared among Layout methods</span>  <span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGSize</span>    <span class="token comment">/// Use this to tell your subviews where to appear.</span>  <span class="token keyword">func</span> <span class="token function-definition function">placeSubviews</span><span class="token punctuation">(</span>    <span class="token keyword">in</span> bounds<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">,</span> <span class="token comment">// 👈🏻 region where we need to place our subviews into, origin might not be .zero</span>    proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span>     subviews<span class="token punctuation">:</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Subviews</span><span class="token punctuation">,</span>     cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token keyword">Self</span><span class="token punctuation">.</span><span class="token class-name">Cache</span>  <span class="token punctuation">)</span>    <span class="token comment">// ... there are more a couple more optional methods</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下面例子是一个自定义的水平 stack 视图，为其所有子视图提供其最大子视图的宽度：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">MyEqualWidthHStack</span><span class="token punctuation">:</span> <span class="token class-name">Layout</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/// Returns a size that the layout container needs to arrange its subviews.</span>  <span class="token comment">/// - Tag: sizeThatFitsHorizontal</span>  <span class="token keyword">func</span> <span class="token function-definition function">sizeThatFits</span><span class="token punctuation">(</span>    proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span>    subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">,</span>    cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">Void</span>  <span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGSize</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">guard</span> <span class="token operator">!</span>subviews<span class="token punctuation">.</span>isEmpty <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token punctuation">.</span>zero <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> maxSize <span class="token operator">=</span> <span class="token function">maxSize</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> spacing <span class="token operator">=</span> <span class="token function">spacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> totalSpacing <span class="token operator">=</span> spacing<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span> <span class="token operator">+</span> <span class="token short-argument">$1</span> <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>      width<span class="token punctuation">:</span> maxSize<span class="token punctuation">.</span>width <span class="token operator">*</span> <span class="token class-name">CGFloat</span><span class="token punctuation">(</span>subviews<span class="token punctuation">.</span>count<span class="token punctuation">)</span> <span class="token operator">+</span> totalSpacing<span class="token punctuation">,</span>      height<span class="token punctuation">:</span> maxSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">/// Places the stack's subviews.</span>  <span class="token comment">/// - Tag: placeSubviewsHorizontal</span>  <span class="token keyword">func</span> <span class="token function-definition function">placeSubviews</span><span class="token punctuation">(</span>    <span class="token keyword">in</span> bounds<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">,</span>    proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span>    subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">,</span>    cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">Void</span>  <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">guard</span> <span class="token operator">!</span>subviews<span class="token punctuation">.</span>isEmpty <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> maxSize <span class="token operator">=</span> <span class="token function">maxSize</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> spacing <span class="token operator">=</span> <span class="token function">spacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> subviews<span class="token punctuation">)</span>    <span class="token keyword">let</span> placementProposal <span class="token operator">=</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> maxSize<span class="token punctuation">.</span>width<span class="token punctuation">,</span> height<span class="token punctuation">:</span> maxSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span>    <span class="token keyword">var</span> nextX <span class="token operator">=</span> bounds<span class="token punctuation">.</span>minX <span class="token operator">+</span> maxSize<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token number">2</span>    <span class="token keyword">for</span> index <span class="token keyword">in</span> subviews<span class="token punctuation">.</span>indices <span class="token punctuation">&#123;</span>      subviews<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">place</span><span class="token punctuation">(</span>        at<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> nextX<span class="token punctuation">,</span> y<span class="token punctuation">:</span> bounds<span class="token punctuation">.</span>midY<span class="token punctuation">)</span><span class="token punctuation">,</span>        anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">,</span>        proposal<span class="token punctuation">:</span> placementProposal<span class="token punctuation">)</span>      nextX <span class="token operator">+=</span> maxSize<span class="token punctuation">.</span>width <span class="token operator">+</span> spacing<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">/// Finds the largest ideal size of the subviews.</span>  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">maxSize</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGSize</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> subviewSizes <span class="token operator">=</span> subviews<span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">sizeThatFits</span><span class="token punctuation">(</span><span class="token punctuation">.</span>unspecified<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> maxSize<span class="token punctuation">:</span> <span class="token class-name">CGSize</span> <span class="token operator">=</span> subviewSizes<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">.</span>zero<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> currentMax<span class="token punctuation">,</span> subviewSize <span class="token keyword">in</span>      <span class="token class-name">CGSize</span><span class="token punctuation">(</span>        width<span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span>currentMax<span class="token punctuation">.</span>width<span class="token punctuation">,</span> subviewSize<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span>        height<span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span>currentMax<span class="token punctuation">.</span>height<span class="token punctuation">,</span> subviewSize<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> maxSize  <span class="token punctuation">&#125;</span>  <span class="token comment">/// Gets an array of preferred spacing sizes between subviews in the</span>  <span class="token comment">/// horizontal dimension.</span>  <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">spacing</span><span class="token punctuation">(</span>subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">[</span><span class="token class-name">CGFloat</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>    subviews<span class="token punctuation">.</span>indices<span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> index <span class="token keyword">in</span>      <span class="token keyword">guard</span> index <span class="token operator">&lt;</span> subviews<span class="token punctuation">.</span>count <span class="token operator">-</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token number">0</span> <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span> subviews<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>spacing<span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span>        to<span class="token punctuation">:</span> subviews<span class="token punctuation">[</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>spacing<span class="token punctuation">,</span>        along<span class="token punctuation">:</span> <span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自定义 layout 只能访问子视图代理 <code>Layout.Subviews</code> ，而不是视图或数据模型。我们可以通过 LayoutValueKey 在每个子视图上存储自定义值，通过 <code>layoutValue(key:value:)</code> modifier 设置。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">private</span> <span class="token keyword">struct</span> <span class="token class-name">Rank</span><span class="token punctuation">:</span> <span class="token class-name">LayoutValueKey</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">static</span> <span class="token keyword">let</span> defaultValue<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">func</span> <span class="token function-definition function">rank</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> value<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 👈🏻 convenience method</span>    <span class="token function">layoutValue</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token class-name">Rank</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> value<span class="token punctuation">)</span> <span class="token comment">// 👈🏻 the new modifier</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后，我们就可以通过 Layout 方法中的 <code>Layout.Subviews</code> 代理读取自定义 <code>LayoutValueKey</code> 值：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">func</span> <span class="token function-definition function">placeSubviews</span><span class="token punctuation">(</span>  <span class="token keyword">in</span> bounds<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">,</span>  proposal<span class="token punctuation">:</span> <span class="token class-name">ProposedViewSize</span><span class="token punctuation">,</span>  subviews<span class="token punctuation">:</span> <span class="token class-name">Subviews</span><span class="token punctuation">,</span>  cache<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> ranks <span class="token operator">=</span> subviews<span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> subview <span class="token keyword">in</span>    subview<span class="token punctuation">[</span><span class="token class-name">Rank</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span> <span class="token comment">// 👈🏻</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>要在布局之间变化使用动画，需要用 AnyLayout，代码示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PAnyLayout</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isVertical <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> layout <span class="token operator">=</span> isVertical <span class="token operator">?</span> <span class="token class-name">AnyLayout</span><span class="token punctuation">(</span><span class="token class-name">VStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token class-name">AnyLayout</span><span class="token punctuation">(</span><span class="token class-name">HStack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        layout <span class="token punctuation">&#123;</span>            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"star"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>yellow<span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Starming.com"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"戴铭"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Click"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            withAnimation <span class="token punctuation">&#123;</span>                isVertical<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end button</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>同时 Text 和图片也支持了样式布局变化，代码示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PTextTransitionsView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> expandMessage <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> mintWithShadow<span class="token punctuation">:</span> <span class="token class-name">AnyShapeStyle</span> <span class="token operator">=</span> <span class="token class-name">AnyShapeStyle</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>mint<span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> primaryWithoutShadow<span class="token punctuation">:</span> <span class="token class-name">AnyShapeStyle</span> <span class="token operator">=</span> <span class="token class-name">AnyShapeStyle</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>primary<span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Dai Ming Swift Pamphlet"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span>expandMessage <span class="token operator">?</span> <span class="token punctuation">.</span>largeTitle<span class="token punctuation">.</span><span class="token function">weight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>heavy<span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>body<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span>expandMessage <span class="token operator">?</span> mintWithShadow <span class="token punctuation">:</span> primaryWithoutShadow<span class="token punctuation">)</span>            <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span> withAnimation <span class="token punctuation">&#123;</span> expandMessage<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> expandMessage <span class="token operator">?</span> <span class="token number">150</span> <span class="token punctuation">:</span> <span class="token number">250</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">drawingGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token punctuation">.</span>cyan<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ContentUnavailableView"><a href="#ContentUnavailableView" class="headerlink" title="ContentUnavailableView"></a>ContentUnavailableView</h2><p>基本用法</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArchivedInfosView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>modelContext<span class="token punctuation">)</span> <span class="token keyword">var</span> modelContext    <span class="token attribute atrule">@Query</span> <span class="token keyword">var</span> infos<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">IOInfo</span><span class="token punctuation">]</span>    <span class="token operator">...</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token punctuation">(</span>selection<span class="token punctuation">:</span> $selectInfo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>infos<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> info <span class="token keyword">in</span>                <span class="token operator">...</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>overlay <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> infos<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span>                <span class="token class-name">ContentUnavailableView</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"无归档"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"archivebox"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span> description<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"点击下方按钮添加一个归档资料"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span> actions<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"新增"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token function">addInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>搜索</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Bindable</span> <span class="token keyword">var</span> vm<span class="token punctuation">:</span> <span class="token class-name">VModel</span>    <span class="token operator">...</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>items<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token operator">...</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Products"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span>overlay <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> vm<span class="token punctuation">.</span>items<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span>                    <span class="token class-name">ContentUnavailableView</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> vm<span class="token punctuation">.</span>query<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $vm<span class="token punctuation">.</span>query<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容已整理到小册子中，小册子代码在 &lt;a href=&quot;https://github.com/ming1016/SwiftPamphletApp&quot;&gt;Github&lt;/a&gt; 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买&lt;a href=&quot;https://apps
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</title>
    <link href="https://starming.com/2024/05/18/pamphlet-series-listdataview/"/>
    <id>https://starming.com/2024/05/18/pamphlet-series-listdataview/</id>
    <published>2024-05-18T01:06:54.000Z</published>
    <updated>2024-05-25T12:27:25.211Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容已整理到小册子中，小册子代码在 <a href="https://github.com/ming1016/SwiftPamphletApp">Github</a> 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">“戴铭的开发小册子”</a>应用(98元)，来跟踪查看本文内容新增和更新。</p><p>本文属于小册子系列中的一篇，已发布系列文章有：</p><ul><li><a href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/">小册子之如何使用 SwiftData 开发 SwiftUI 应用</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-widget/">小册子之简说 Widget 小组件</a></li><li>【本篇】<a href="https://starming.com/2024/05/18/pamphlet-series-listdataview/">小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-layout/">小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-form/">小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/25/pamphlet-series-animation/">小册子之 SwiftUI 动画</a></li></ul><h2 id="ForEach"><a href="#ForEach" class="headerlink" title="ForEach"></a>ForEach</h2><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>在 SwiftUI 中，<code>ForEach</code> 是一个结构体，它可以创建一组视图，每个视图都有一个与数据集中的元素相对应的唯一标识符。这对于在列表或其他集合视图中显示数据非常有用。</p><p>以下视图集会用到 ForEach：</p><ul><li>List</li><li>ScrollView</li><li>LazyVStack &#x2F; LazyHStack</li><li>Picker</li><li>Grids (LazyVGrid &#x2F; LazyHGrid)</li></ul><p>例如，如果你有一个 <code>BookmarkModel</code> 的数组，并且你想为每个书签创建一个文本视图，你可以这样做：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> bookmarks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">BookmarkModel</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>bookmarks<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> bookmark <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>bookmark<span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>ForEach</code> 遍历 <code>bookmarks</code> 数组，并为每个 <code>BookmarkModel</code> 对象创建一个 <code>Text</code> 视图。<code>bookmark</code> 参数是当前遍历的 <code>BookmarkModel</code> 对象。</p><p><code>BookmarkModel</code> 必须遵循 <code>Identifiable</code> 协议，这样 SwiftUI 才能知道如何唯一地标识每个视图。在你的代码中，<code>BookmarkModel</code> 已经有一个 <code>id</code> 属性，所以你只需要让 <code>BookmarkModel</code> 遵循 <code>Identifiable</code> 协议即可：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">BookmarkModel</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// your code here</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="使用索引范围进行编号"><a href="#使用索引范围进行编号" class="headerlink" title="使用索引范围进行编号"></a>使用索引范围进行编号</h3><p>你可以使用 <code>ForEach</code> 结构体的另一个版本，它接受一个范围作为其数据源。这个范围可以是一个索引范围，这样你就可以为每个项目编号。</p><p>例如，如果你有一个 <code>BookmarkModel</code> 的数组，并且你想为每个书签创建一个文本视图，并在前面添加一个编号，你可以这样做：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> bookmarks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">BookmarkModel</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>bookmarks<span class="token punctuation">.</span>indices<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">index <span class="token operator">+</span> <span class="token number">1</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">. </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">bookmarks<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，<code>ForEach</code> 遍历 <code>bookmarks</code> 数组的索引，并为每个 <code>BookmarkModel</code> 对象创建一个 <code>Text</code> 视图。<code>index</code> 参数是当前遍历的索引。我们使用 <code>\(index + 1). \(bookmarks[index].name)</code> 来创建一个带有编号的文本视图。请注意，我们使用 <code>index + 1</code> 而不是 <code>index</code>，因为数组的索引是从 0 开始的，但我们通常希望编号是从 1 开始的。</p><h3 id="使用-enumerated-编号"><a href="#使用-enumerated-编号" class="headerlink" title="使用 enumerated 编号"></a>使用 enumerated 编号</h3><p> <code>enumerated()</code> </p><p>以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> bookmarks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">BookmarkModel</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">(</span>bookmarks<span class="token punctuation">.</span><span class="token function">enumerated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index<span class="token punctuation">,</span> bookmark <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">index</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">. </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">bookmark<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们使用 <code>Array(bookmarks.enumerated())</code> 来创建一个元组数组，每个元组包含一个索引和一个 <code>BookmarkModel</code> 对象。然后，我们使用 <code>ForEach</code> 遍历这个元组数组，并为每个元组创建一个 <code>Text</code> 视图。<code>index</code> 参数是当前遍历的索引，<code>bookmark</code> 参数是当前遍历的 <code>BookmarkModel</code> 对象。</p><h3 id="使用-zip-编号"><a href="#使用-zip-编号" class="headerlink" title="使用 zip 编号"></a>使用 zip 编号</h3><p><code>zip(_:_:)</code> 函数可以将两个序列合并为一个元组序列。你可以使用这个函数和 <code>ForEach</code> 结构体来为数组中的每个元素添加一个编号。</p><p>例如，如果你有一个 <code>BookmarkModel</code> 的数组，并且你想为每个书签创建一个文本视图，并在前面添加一个编号，你可以这样做：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> bookmarks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">BookmarkModel</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token function">zip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">...</span><span class="token punctuation">,</span> bookmarks<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">.</span>id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index<span class="token punctuation">,</span> bookmark <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">index</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">. </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">bookmark<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>写出扩展，方便调用</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@dynamicMemberLookup</span><span class="token keyword">struct</span> <span class="token class-name">Numbered</span><span class="token operator">&lt;</span><span class="token class-name">Element</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> number<span class="token punctuation">:</span> <span class="token class-name">Int</span>    <span class="token keyword">var</span> element<span class="token punctuation">:</span> <span class="token class-name">Element</span>        <span class="token keyword">subscript</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">></span><span class="token punctuation">(</span>dynamicMember keyPath<span class="token punctuation">:</span> <span class="token class-name">WritableKeyPath</span><span class="token operator">&lt;</span><span class="token class-name">Element</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">T</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">get</span> <span class="token punctuation">&#123;</span> element<span class="token punctuation">[</span>keyPath<span class="token punctuation">:</span> keyPath<span class="token punctuation">]</span> <span class="token punctuation">&#125;</span>        <span class="token keyword">set</span> <span class="token punctuation">&#123;</span> element<span class="token punctuation">[</span>keyPath<span class="token punctuation">:</span> keyPath<span class="token punctuation">]</span> <span class="token operator">=</span> newValue <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">Sequence</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">numbered</span><span class="token punctuation">(</span>startingAt start<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">[</span><span class="token class-name">Numbered</span><span class="token operator">&lt;</span><span class="token class-name">Element</span><span class="token operator">></span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>        <span class="token function">zip</span><span class="token punctuation">(</span>start<span class="token operator">...</span><span class="token punctuation">,</span> <span class="token keyword">self</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span>map <span class="token punctuation">&#123;</span> <span class="token class-name">Numbered</span><span class="token punctuation">(</span>number<span class="token punctuation">:</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">,</span> element<span class="token punctuation">:</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">Numbered</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token keyword">where</span> <span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> id<span class="token punctuation">:</span> <span class="token class-name">Element</span><span class="token punctuation">.</span><span class="token constant">ID</span> <span class="token punctuation">&#123;</span> element<span class="token punctuation">.</span>id <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">ForEach</span><span class="token punctuation">(</span>bookmark<span class="token punctuation">.</span><span class="token function">numbered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> numberedBookmark <span class="token keyword">in</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">numberedBookmark<span class="token punctuation">.</span>number</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">. </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">numberedBookmark<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Scroll视图"><a href="#Scroll视图" class="headerlink" title="Scroll视图"></a>Scroll视图</h2><h3 id="ScrollView"><a href="#ScrollView" class="headerlink" title="ScrollView"></a>ScrollView</h3><h4 id="新增-modifier"><a href="#新增-modifier" class="headerlink" title="新增 modifier"></a>新增 modifier</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">scrollDisabled</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// 设置是否可滚动</span><span class="token punctuation">.</span><span class="token function">scrollDismissesKeyboard</span><span class="token punctuation">(</span><span class="token punctuation">.</span>interactively<span class="token punctuation">)</span> <span class="token comment">// 关闭键盘</span><span class="token punctuation">.</span><span class="token function">scrollIndicators</span><span class="token punctuation">(</span><span class="token punctuation">.</span>visible<span class="token punctuation">)</span> <span class="token comment">// 设置滚动指示器是否可见</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="ScrollViewReader"><a href="#ScrollViewReader" class="headerlink" title="ScrollViewReader"></a>ScrollViewReader</h4><p>ScrollView 使用 scrollTo 可以直接滚动到指定的位置。ScrollView 还可以透出偏移量，利用偏移量可以定义自己的动态视图，比如向下向上滚动视图时有不同效果，到顶部显示标题视图等。</p><p>示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayScrollView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scrollOffset<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero        <span class="token keyword">var</span> infoView<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">GeometryReader</span> <span class="token punctuation">&#123;</span> g <span class="token keyword">in</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>"移动了 <span class="token punctuation">\</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">(</span>scrollOffset<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">formatted</span><span class="token punctuation">(</span><span class="token punctuation">.</span>number<span class="token punctuation">.</span><span class="token function">precision</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">fractionLength</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rounded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>"<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 标准用法</span>        <span class="token class-name">ScrollViewReader</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>            <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"跳到150"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    s<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end Button</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end ScrollViewReader</span>                <span class="token comment">// 自定义的 ScrollView 透出 offset 供使用</span>        <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">PCScrollView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> whenMoved<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> d <span class="token keyword">in</span>                scrollOffset <span class="token operator">=</span> d            <span class="token punctuation">&#125;</span>            infoView                    <span class="token punctuation">&#125;</span> <span class="token comment">// end ZStack</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 自定义 ScrollView</span><span class="token keyword">struct</span> <span class="token class-name">PCScrollView</span><span class="token operator">&lt;</span><span class="token class-name">C</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> c<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">C</span>    <span class="token keyword">let</span> whenMoved<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">CGFloat</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span>        <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token attribute atrule">@ViewBuilder</span> c<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">C</span><span class="token punctuation">,</span> whenMoved<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">CGFloat</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>c <span class="token operator">=</span> c        <span class="token keyword">self</span><span class="token punctuation">.</span>whenMoved <span class="token operator">=</span> whenMoved    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> offsetReader<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">GeometryReader</span> <span class="token punctuation">&#123;</span> g <span class="token keyword">in</span>            <span class="token class-name">Color</span><span class="token punctuation">.</span>clear                <span class="token punctuation">.</span><span class="token function">preference</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token class-name">OffsetPreferenceKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> g<span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">named</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"frameLayer"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>minY<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>            offsetReader            <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>top<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">coordinateSpace</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"frameLayer"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">onPreferenceChange</span><span class="token punctuation">(</span><span class="token class-name">OffsetPreferenceKey</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> perform<span class="token punctuation">:</span> whenMoved<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span class="token keyword">private</span> <span class="token keyword">struct</span> <span class="token class-name">OffsetPreferenceKey</span><span class="token punctuation">:</span> <span class="token class-name">PreferenceKey</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">static</span> <span class="token keyword">var</span> defaultValue<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero  <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">reduce</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token keyword">inout</span> <span class="token class-name">CGFloat</span><span class="token punctuation">,</span> nextValue<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">CGFloat</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="固定到滚动视图的顶部"><a href="#固定到滚动视图的顶部" class="headerlink" title="固定到滚动视图的顶部"></a>固定到滚动视图的顶部</h3><p>LazyVStack 有个参数 pinnedViews 可以用于固定滚动视图的顶部。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">LazyVStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> pinnedViews<span class="token punctuation">:</span> <span class="token punctuation">.</span>sectionHeaders<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> book <span class="token keyword">in</span>                <span class="token class-name">BookRowView</span><span class="token punctuation">(</span>book<span class="token punctuation">:</span> book<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> header<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">HeaderView</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"小说"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">....</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="滚动到特定的位置"><a href="#滚动到特定的位置" class="headerlink" title="滚动到特定的位置"></a>滚动到特定的位置</h3><h4 id="scrollPostion-版本"><a href="#scrollPostion-版本" class="headerlink" title="scrollPostion 版本"></a>scrollPostion 版本</h4><p><code>scrollPositon(id:)</code> 比 ScrollViewReader 简单，但是只适用于 ScrollView。数据源遵循 Identifiable，不用显式使用 <code>id</code> 修饰符</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> id<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token operator">?</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Scroll to Bookmark 3"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    id <span class="token operator">=</span> <span class="token number">3</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Scroll to Bookmark 13"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    id <span class="token operator">=</span> <span class="token number">13</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ScrollViewReader</span> <span class="token punctuation">&#123;</span> scrollView <span class="token keyword">in</span>                    <span class="token class-name">LazyVStack</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Bookmark</span><span class="token punctuation">.</span><span class="token function">simpleData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> bookmark <span class="token keyword">in</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">bookmark<span class="token punctuation">.</span>index</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>bookmark<span class="token punctuation">.</span>index<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                                            <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">scrollPosition</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> $id<span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">scrollTargetLayout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">struct</span> <span class="token class-name">Bookmark</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span><span class="token class-name">Hashable</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> index<span class="token punctuation">:</span> <span class="token class-name">Int</span>                <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">simpleData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">[</span><span class="token class-name">Bookmark</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> re <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">Bookmark</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token operator">...</span><span class="token number">100</span> <span class="token punctuation">&#123;</span>                re<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Bookmark</span><span class="token punctuation">(</span>index<span class="token punctuation">:</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> re        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>scrollTargetLayout 可以获得当前滚动位置。锚点不可配，默认是 center。</p><h4 id="ScrollViewReader-版本"><a href="#ScrollViewReader-版本" class="headerlink" title="ScrollViewReader 版本"></a>ScrollViewReader 版本</h4><p>ScrollViewReader 这个版本可以适用于 List，也可以配置锚点</p><p>你可以使用 <code>ScrollViewReader</code> 和 <code>scrollTo(_:anchor:)</code> 方法来滚动到特定的元素。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> bookmarks<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Int</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">...</span><span class="token number">100</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedBookmarkId<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token operator">?</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Scroll to Bookmark 3"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                selectedBookmarkId <span class="token operator">=</span> <span class="token number">3</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Scroll to Bookmark 13"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                selectedBookmarkId <span class="token operator">=</span> <span class="token number">13</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ScrollViewReader</span> <span class="token punctuation">&#123;</span> scrollView <span class="token keyword">in</span>                    <span class="token class-name">LazyVStack</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">ForEach</span><span class="token punctuation">(</span>bookmarks<span class="token punctuation">.</span>indices<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index <span class="token keyword">in</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">bookmarks<span class="token punctuation">[</span>index<span class="token punctuation">]</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                        <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> selectedBookmarkId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> oldValue<span class="token punctuation">,</span> newValue <span class="token keyword">in</span>                            <span class="token keyword">if</span> <span class="token keyword">let</span> newValue <span class="token operator">=</span> newValue <span class="token punctuation">&#123;</span>                                withAnimation <span class="token punctuation">&#123;</span>                                    scrollView<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span>newValue<span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">)</span>                                <span class="token punctuation">&#125;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们首先创建了一个 <code>Button</code>，当点击这个按钮时，<code>selectedBookmarkId</code> 的值会被设置为 3。然后，我们创建了一个 <code>ScrollView</code>，并在 <code>ScrollView</code> 中添加了一个 <code>ScrollViewReader</code>。我们在 <code>ScrollViewReader</code> 中添加了一个 <code>LazyVStack</code>，并使用 <code>ForEach</code> 遍历 <code>bookmarks</code> 数组的索引，为每个索引创建一个 <code>Text</code> 视图。我们使用 <code>id(_:)</code> 方法为每个 <code>Text</code> 视图设置了一个唯一的 ID。</p><p>我们使用 <code>onChange(of:perform:)</code> 方法来监听 <code>selectedBookmarkId</code> 的变化。当 <code>selectedBookmarkId</code> 的值改变时，我们会调用 <code>scrollTo(_:anchor:)</code> 方法来滚动到特定的元素。<code>anchor: .top</code> 参数表示我们希望滚动到的元素位于滚动视图的顶部。</p><h3 id="scrollTargetBehavior分页滚动"><a href="#scrollTargetBehavior分页滚动" class="headerlink" title="scrollTargetBehavior分页滚动"></a>scrollTargetBehavior分页滚动</h3><h4 id="按可视尺寸分页"><a href="#按可视尺寸分页" class="headerlink" title="按可视尺寸分页"></a>按可视尺寸分页</h4><p><code>.scrollTargetBehavior(.paging)</code> 可以让 ScrollView 滚动，滚动一页的范围是 ScrollView 的可视尺寸。 </p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LazyHStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">...</span><span class="token number">20</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token function">colorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">scrollTargetBehavior</span><span class="token punctuation">(</span><span class="token punctuation">.</span>paging<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@ViewBuilder</span>    <span class="token keyword">func</span> <span class="token function-definition function">colorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">[</span><span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>yellow<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>mint<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>indigo<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">randomElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="按容器元素对齐分页"><a href="#按容器元素对齐分页" class="headerlink" title="按容器元素对齐分页"></a>按容器元素对齐分页</h4><p>使用 <code>.scrollTargetBehavior(.viewAligned)</code> 配合 scrollTargetLayout。示例代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LazyHStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">...</span><span class="token number">20</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token function">colorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">scrollTargetLayout</span><span class="token punctuation">(</span>isEnabled<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">scrollTargetBehavior</span><span class="token punctuation">(</span><span class="token punctuation">.</span>viewAligned<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@ViewBuilder</span>    <span class="token keyword">func</span> <span class="token function-definition function">colorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">[</span><span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>yellow<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>mint<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>indigo<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">randomElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="scrollTransition视觉效果"><a href="#scrollTransition视觉效果" class="headerlink" title="scrollTransition视觉效果"></a>scrollTransition视觉效果</h3><p>iOS 17 新推出 <code>.scrollTransition</code>，用于处理滚动时的动画。</p><p><code>.transition</code> 用于视图插入和移除视图树时的动画。</p><p><code>.scrollTransition</code> 会和滚动联合起来进行平滑的过渡动画处理。<code>.scrollTransition</code> 可以修改很多属性，比如大小，可见性还有旋转等。</p><p><code>.scrollTransition</code> 可以针对不同阶段进行处理，目前有三个阶段：</p><ul><li><code>topLeading</code>: 视图进入 ScrollView 可见区域</li><li><code>identity</code>: 在可见区域中</li><li><code>bottomTrailing</code>: 视图离开 ScrollView 可见区域</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LazyHStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">...</span><span class="token number">20</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token function">colorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span>scrollTransition <span class="token punctuation">&#123;</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span>                             content                                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>isIdentity <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0.4</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@ViewBuilder</span>    <span class="token keyword">func</span> <span class="token function-definition function">colorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">[</span><span class="token class-name">Color</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>yellow<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>mint<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>indigo<span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">randomElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用阶段的值</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">scrollTransition</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">animated</span><span class="token punctuation">(</span><span class="token punctuation">.</span>bouncy<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span>    content        <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>isIdentity <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> phase<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>不同阶段的产生效果设置</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">scrollTransition</span><span class="token punctuation">(</span>    topLeading<span class="token punctuation">:</span> <span class="token punctuation">.</span>animated<span class="token punctuation">,</span>    bottomTrailing<span class="token punctuation">:</span> <span class="token punctuation">.</span>interactive<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span>    content<span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">radians</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>.rotation3DEffect</code> 也是支持的。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">scrollTransition</span><span class="token punctuation">(</span><span class="token punctuation">.</span>interactive<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span>    content        <span class="token punctuation">.</span><span class="token function">rotation3DEffect</span><span class="token punctuation">(</span>            <span class="token class-name">Angle</span><span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>isIdentity <span class="token operator">?</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token number">120</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            axis<span class="token punctuation">:</span> <span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.9</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span> z<span class="token punctuation">:</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> phase<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ScrollView-参考资料"><a href="#ScrollView-参考资料" class="headerlink" title="ScrollView-参考资料"></a>ScrollView-参考资料</h3><h4 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h4><ul><li><a href="https://developer.apple.com/documentation/swiftui/scrollview">ScrollView | Apple Developer Documentation</a> 官方文档</li><li><a href="https://developer.apple.com/documentation/swiftui/scroll-views">Scroll views | 接口</a> 官方接口文档</li></ul><h4 id="WWDC"><a href="#WWDC" class="headerlink" title="WWDC"></a>WWDC</h4><p>23</p><ul><li><a href="https://developer.apple.com/wwdc23/10159">Beyond scroll views - WWDC23 - Videos - Apple Developer</a></li></ul><h2 id="List列表"><a href="#List列表" class="headerlink" title="List列表"></a>List列表</h2><h3 id="List"><a href="#List" class="headerlink" title="List"></a>List</h3><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/list-ap01.jpeg" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/list-ap01.jpeg"></p><p>List 除了能够展示数据外，还有下拉刷新、过滤搜索和侧滑 Swipe 动作提供更多 Cell 操作的能力。</p><p>通过 List 的可选子项参数提供数据模型的关键路径来制定子项路劲，还可以实现大纲视图，使用 DisclosureGroup 和 OutlineGroup  可以进一步定制大纲视图。</p><p>使用 <code>.listRowSeparator(.hidden, edges: .all)</code> 可以隐藏分割线。</p><p>下面是 List 使用，包括了 DisclosureGroup 和 OutlineGroup 的演示代码：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayListView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@StateObject</span> <span class="token keyword">var</span> l<span class="token punctuation">:</span> <span class="token constant">PLVM</span> <span class="token operator">=</span> <span class="token function">PLVM</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> s<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>        <span class="token keyword">var</span> outlineModel <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"文件夹一"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"folder.fill"</span></span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"个人"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"person.crop.circle.fill"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"群组"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"person.2.circle.fill"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"加好友"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"person.badge.plus"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"文件夹二"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"folder.fill"</span></span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"晴天"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"sun.max.fill"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"夜间"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"moon.fill"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"雨天"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"cloud.rain.fill"</span></span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"雷加雨"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"cloud.bolt.rain.fill"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"太阳雨"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"cloud.sun.rain.fill"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"文件夹三"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"folder.fill"</span></span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"电话"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"phone"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"拍照"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"camera.circle.fill"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">POutlineModel</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"提醒"</span></span><span class="token punctuation">,</span> iconName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"bell"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token comment">// List 通过$语法可以将集合的元素转换成可绑定的值</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>$l<span class="token punctuation">.</span>ls<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> $d <span class="token keyword">in</span>                    <span class="token class-name">PRowView</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> d<span class="token punctuation">.</span>s<span class="token punctuation">,</span> i<span class="token punctuation">:</span> d<span class="token punctuation">.</span>i<span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">listRowInsets</span><span class="token punctuation">(</span><span class="token class-name">EdgeInsets</span><span class="token punctuation">(</span>top<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> leading<span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span> trailing<span class="token punctuation">:</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token punctuation">.</span><span class="token function">listRowBackground</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>black<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span>refreshable <span class="token punctuation">&#123;</span>                <span class="token comment">// 下拉刷新</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $s<span class="token punctuation">)</span> <span class="token comment">// 搜索</span>            <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> s<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> newValue <span class="token keyword">in</span>                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"搜索关键字：</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">s</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token comment">// 自定义 List</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">PCustomListView</span><span class="token punctuation">(</span>$l<span class="token punctuation">.</span>ls<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> $d <span class="token keyword">in</span>                    <span class="token class-name">PRowView</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> d<span class="token punctuation">.</span>s<span class="token punctuation">,</span> i<span class="token punctuation">:</span> d<span class="token punctuation">.</span>i<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token comment">// 添加数据</span>                <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>                    l<span class="token punctuation">.</span>ls<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">PLModel</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"More"</span></span><span class="token punctuation">,</span> i<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"添加"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token comment">// 使用大纲</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>outlineModel<span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                <span class="token class-name">Label</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>title<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> i<span class="token punctuation">.</span>iconName<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>                        <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token comment">// 自定义大纲视图</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"可点击标题展开"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span>                <span class="token class-name">PCOutlineListView</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> outlineModel<span class="token punctuation">,</span> c<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token class-name">Label</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>title<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> i<span class="token punctuation">.</span>iconName<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token class-name">Divider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token comment">// 使用 OutlineGroup 实现大纲视图</span>            <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"OutlineGroup 实现大纲"</span></span><span class="token punctuation">)</span>                                <span class="token class-name">OutlineGroup</span><span class="token punctuation">(</span>outlineModel<span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token class-name">Label</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>title<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> i<span class="token punctuation">.</span>iconName<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                                <span class="token comment">// OutlineGroup 和 List 结合</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"OutlineGroup 和 List 结合"</span></span><span class="token punctuation">)</span>                <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>outlineModel<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> s <span class="token keyword">in</span>                        <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">OutlineGroup</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>children <span class="token operator">??</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                                <span class="token class-name">Label</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>title<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> i<span class="token punctuation">.</span>iconName<span class="token punctuation">)</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span> header<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                            <span class="token class-name">Label</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>title<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> s<span class="token punctuation">.</span>iconName<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span> <span class="token comment">// end ForEach</span>                <span class="token punctuation">&#125;</span> <span class="token comment">// end List</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end VStack</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end HStack</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 自定义大纲视图</span><span class="token keyword">struct</span> <span class="token class-name">PCOutlineListView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">D</span><span class="token punctuation">:</span> <span class="token class-name">RandomAccessCollection</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> v<span class="token punctuation">:</span> <span class="token class-name">PCOutlineView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span>        <span class="token keyword">init</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> <span class="token class-name">D</span><span class="token punctuation">,</span> c<span class="token punctuation">:</span> <span class="token class-name">KeyPath</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token operator">?></span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>v <span class="token operator">=</span> <span class="token class-name">PCOutlineView</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> d<span class="token punctuation">,</span> c<span class="token punctuation">:</span> c<span class="token punctuation">,</span> content<span class="token punctuation">:</span> content<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            v        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PCOutlineView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">D</span><span class="token punctuation">:</span> <span class="token class-name">RandomAccessCollection</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> d<span class="token punctuation">:</span> <span class="token class-name">D</span>    <span class="token keyword">let</span> c<span class="token punctuation">:</span> <span class="token class-name">KeyPath</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token operator">?></span>    <span class="token keyword">let</span> content<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isExpanded <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 控制初始是否展开的状态</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ForEach</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> sub <span class="token operator">=</span> i<span class="token punctuation">[</span>keyPath<span class="token punctuation">:</span> c<span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">PCDisclosureGroup</span><span class="token punctuation">(</span>content<span class="token punctuation">:</span> <span class="token class-name">PCOutlineView</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> sub<span class="token punctuation">,</span> c<span class="token punctuation">:</span> c<span class="token punctuation">,</span> content<span class="token punctuation">:</span> content<span class="token punctuation">)</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token function">content</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token function">content</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end if</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end ForEach</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PCDisclosureGroup</span><span class="token operator">&lt;</span><span class="token class-name">C</span><span class="token punctuation">,</span> <span class="token class-name">L</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">C</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token punctuation">,</span> <span class="token class-name">L</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isExpanded <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> content<span class="token punctuation">:</span> <span class="token class-name">C</span>    <span class="token keyword">var</span> label<span class="token punctuation">:</span> <span class="token class-name">L</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">DisclosureGroup</span><span class="token punctuation">(</span>isExpanded<span class="token punctuation">:</span> $isExpanded<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            content        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>                isExpanded<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                label            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">buttonStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>plain<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 大纲模式数据模型</span><span class="token keyword">struct</span> <span class="token class-name">POutlineModel</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span><span class="token punctuation">,</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> iconName<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">POutlineModel</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - List 的抽象，数据兼容任何集合类型</span><span class="token keyword">struct</span> <span class="token class-name">PCustomListView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">:</span> <span class="token class-name">RandomAccessCollection</span> <span class="token operator">&amp;</span> <span class="token class-name">MutableCollection</span> <span class="token operator">&amp;</span> <span class="token class-name">RangeReplaceableCollection</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Binding</span> <span class="token keyword">var</span> data<span class="token punctuation">:</span> <span class="token class-name">D</span>    <span class="token keyword">var</span> content<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span>        <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> data<span class="token punctuation">:</span> <span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token operator">></span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">Binding</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>_data <span class="token operator">=</span> data        <span class="token keyword">self</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>$data<span class="token punctuation">,</span> content<span class="token punctuation">:</span> content<span class="token punctuation">)</span>                    <span class="token punctuation">.</span>onMove <span class="token punctuation">&#123;</span> indexSet<span class="token punctuation">,</span> offset <span class="token keyword">in</span>                        data<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>fromOffsets<span class="token punctuation">:</span> indexSet<span class="token punctuation">,</span> toOffset<span class="token punctuation">:</span> offset<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span>onDelete <span class="token punctuation">&#123;</span> indexSet <span class="token keyword">in</span>                        data<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>atOffsets<span class="token punctuation">:</span> indexSet<span class="token punctuation">)</span> <span class="token comment">// macOS 暂不支持</span>                    <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> header<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"第一栏，共 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">data<span class="token punctuation">.</span>count</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 项"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> footer<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"The End"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">listStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>plain<span class="token punctuation">)</span> <span class="token comment">// 有.automatic、.inset、.plain、sidebar，macOS 暂不支持的有.grouped 和 .insetGrouped</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - Cell 视图</span><span class="token keyword">struct</span> <span class="token class-name">PRowView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> s<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> i<span class="token punctuation">:</span> <span class="token class-name">Int</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">："</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// MARK: - 数据模型设计</span><span class="token keyword">struct</span> <span class="token class-name">PLModel</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span><span class="token punctuation">,</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> s<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> i<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">&#125;</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token constant">PLVM</span><span class="token punctuation">:</span> <span class="token class-name">ObservableObject</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Published</span> <span class="token keyword">var</span> ls<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">PLModel</span><span class="token punctuation">]</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        ls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">PLModel</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token operator">...</span><span class="token number">20</span> <span class="token punctuation">&#123;</span>            ls<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">PLModel</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">,</span> i<span class="token punctuation">:</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>list 支持 Section footer。</p><p>list 分隔符可以自定义，使用  <code>HorizontalEdge.leading</code> 和 <code>HorizontalEdge.trailing</code> 。</p><p>list 不使用 UITableView 了。</p><p>今年 list 还新增了一个 <a href="https://developer.apple.com/documentation/swiftui/editoperations">EditOperation</a> 可以自动生成移动和删除，新增了 edits 参数，传入 <code>[.delete, .move]</code> 数组即可。这也是一个演示如何更好扩展和配置功能的方式。</p><p><code>.searchable</code> 支持 token 和 scope，示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PSearchTokensAndScopes</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">enum</span> <span class="token class-name">AttendanceScope</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> inPerson<span class="token punctuation">,</span> online    <span class="token punctuation">&#125;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> queryText<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> queryTokens<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">InvitationToken</span><span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scope<span class="token punctuation">:</span> <span class="token class-name">AttendanceScope</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token function">invitationCountView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $queryText<span class="token punctuation">,</span> tokens<span class="token punctuation">:</span> $queryTokens<span class="token punctuation">,</span> scope<span class="token punctuation">:</span> $scope<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> token <span class="token keyword">in</span>                <span class="token class-name">Label</span><span class="token punctuation">(</span>token<span class="token punctuation">.</span>diplayName<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> token<span class="token punctuation">.</span>systemImage<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> scopes<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"In Person"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">AttendanceScope</span><span class="token punctuation">.</span>inPerson<span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Online"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">AttendanceScope</span><span class="token punctuation">.</span>online<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="List-设置样式"><a href="#List-设置样式" class="headerlink" title="List-设置样式"></a>List-设置样式</h3><h4 id="内置样式"><a href="#内置样式" class="headerlink" title="内置样式"></a>内置样式</h4><p>通过 <code>.listStyle</code> 修饰符可以用系统内置样式更改 List 外观。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">List</span> <span class="token punctuation">&#123;</span>   <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">listStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>sidebar<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>不同平台有不同的选项</p><table><thead><tr><th>ListStyle</th><th>iOS</th><th>macOS</th><th>watchOS</th><th>tvOS</th></tr></thead><tbody><tr><td>plain</td><td>iOS 13+</td><td>macOS 10.15+</td><td>watchOS 6+</td><td>tvOS 13+</td></tr><tr><td>sidebar</td><td>iOS 14+</td><td>macOS 10.15+</td><td>-</td><td>-</td></tr><tr><td>inset</td><td>iOS 13+</td><td>macOS 11.15+</td><td>-</td><td>-</td></tr><tr><td>grouped</td><td>iOS 13+</td><td>-</td><td>-</td><td>tvOS 13+</td></tr><tr><td>insetGrouped</td><td>iOS 14+</td><td>-</td><td>-</td><td>-</td></tr><tr><td>bordered</td><td>-</td><td>macOS 12+</td><td>-</td><td>-</td></tr><tr><td>carousel</td><td>-</td><td>-</td><td>watchOS 6+</td><td>-</td></tr><tr><td>elliptical</td><td>-</td><td>-</td><td>watchOS 7+</td><td>-</td></tr></tbody></table><h4 id="行高"><a href="#行高" class="headerlink" title="行高"></a>行高</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">List</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>defaultMinListRowHeight<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>defaultMinListHeaderHeight<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h4><p>listSectionSeparator 和 listRowSeparator 隐藏行和 Section 分隔符。</p><p>listRowSeparatorTint 和 listSectionSeparatorTint 更改分隔符颜色</p><p>例如：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">listRowSeparatorTint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>cyan<span class="token punctuation">,</span> edges<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p><code>.alternatingRowBackgrounds()</code> 可以让 List 的行底色有区分。</p><p>listRowBackground 调整行的背景颜色</p><p>更改背景颜色前需要隐藏内容背景</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">List</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">scrollContentBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>hidden<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>cyan<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个方法同样可用于 ScrollView 和 TextEditor。</p><p>你可以使用 <code>.listRowBackground()</code> 修饰符来更改列表行的背景。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Row </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">index</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">listRowBackground</span><span class="token punctuation">(</span>index <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>blue <span class="token punctuation">:</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>green<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含五个元素的 List。我们使用 <code>.listRowBackground()</code> 修饰符来更改每个元素的背景颜色。如果元素的索引是偶数，我们将背景颜色设置为蓝色，否则我们将背景颜色设置为绿色。</p><h4 id="Section"><a href="#Section" class="headerlink" title="Section"></a>Section</h4><p>你可以使用 <code>Section</code> 视图的 <code>header</code> 和 <code>footer</code> 参数来添加头部和尾部。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Section</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Row </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">index</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> header<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Header"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> footer<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Footer"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>caption<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>headerProminence（.increase） 可以增加 Section Header 的大小。</p><h4 id="safeAreaInset"><a href="#safeAreaInset" class="headerlink" title="safeAreaInset"></a>safeAreaInset</h4><p>你可以使用 <code>.safeAreaInset()</code> 修饰符来调整视图的安全区域插入。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> index <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Row </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">index</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">safeAreaInset</span><span class="token punctuation">(</span>edge<span class="token punctuation">:</span> <span class="token punctuation">.</span>top<span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Header"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含五个元素的 List。然后我们使用 <code>.safeAreaInset()</code> 修饰符来在 List 的顶部添加一个 Header。我们将 <code>edge</code> 参数设置为 <code>.top</code>，将 <code>spacing</code> 参数设置为 20，然后提供一个视图作为 Header。这个 Header 是一个文本视图，它的背景颜色是蓝色，前景颜色是白色，它被居中对齐，并且它的宽度和 List 的宽度相同。</p><h3 id="List-移动元素"><a href="#List-移动元素" class="headerlink" title="List-移动元素"></a>List-移动元素</h3><p>你可以使用 <code>.onMove(perform:)</code> 修饰符来允许用户移动 List 中的元素。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 5"</span></span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">onMove</span><span class="token punctuation">(</span>perform<span class="token punctuation">:</span> move<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>                <span class="token class-name">EditButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">move</span><span class="token punctuation">(</span>from source<span class="token punctuation">:</span> <span class="token class-name">IndexSet</span><span class="token punctuation">,</span> to destination<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        items<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>fromOffsets<span class="token punctuation">:</span> source<span class="token punctuation">,</span> toOffset<span class="token punctuation">:</span> destination<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含五个元素的 List。我们使用 <code>.onMove(perform:)</code> 修饰符来允许用户移动这些元素，并提供了一个 <code>move(from:to:)</code> 方法来处理移动操作。我们还添加了一个 <code>EditButton</code>，用户可以点击它来进入编辑模式，然后就可以移动元素了。</p><h3 id="List-搜索"><a href="#List-搜索" class="headerlink" title="List-搜索"></a>List-搜索</h3><h4 id="搜索和搜索建议"><a href="#搜索和搜索建议" class="headerlink" title="搜索和搜索建议"></a>搜索和搜索建议</h4><p>你可以使用 <code>.searchable()</code> 修饰符的 <code>suggestions</code> 参数来提供搜索建议。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 5"</span></span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> searchText<span class="token punctuation">.</span>isEmpty <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token punctuation">:</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>searchText<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $searchText<span class="token punctuation">,</span> suggestions<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                 <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                    searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Item 1"</span></span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                    searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">navigationBarTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Items"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含五个元素的 List，并添加了一个搜索框。当用户在搜索框中输入文本时，List 会自动更新以显示匹配的元素。同时，我们提供了两个搜索建议 “Item 1” 和 “Item 2”，用户可以点击这些建议来快速填充搜索框。</p><h4 id="在列表中显示搜索建议"><a href="#在列表中显示搜索建议" class="headerlink" title="在列表中显示搜索建议"></a>在列表中显示搜索建议</h4><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>searchSuggestionsPlacement<span class="token punctuation">)</span> <span class="token keyword">var</span> placement    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 5"</span></span><span class="token punctuation">]</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">NavigationView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SearchSuggestionView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> searchText<span class="token punctuation">.</span>isEmpty <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token punctuation">:</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>searchText<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $searchText<span class="token punctuation">,</span> suggestions<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                        searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Item 1"</span></span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                        searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">searchSuggestions</span><span class="token punctuation">(</span><span class="token punctuation">.</span>hidden<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>content<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">navigationBarTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Items"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@ViewBuilder</span>    <span class="token keyword">func</span> <span class="token function-definition function">SearchSuggestionView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> placement <span class="token operator">==</span> <span class="token punctuation">.</span>content <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Item 1"</span></span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="搜索状态"><a href="#搜索状态" class="headerlink" title="搜索状态"></a>搜索状态</h4><p>搜索中</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>isSearching<span class="token punctuation">)</span> <span class="token keyword">var</span> isSearching<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关闭搜索</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>dismissSearch<span class="token punctuation">)</span> <span class="token keyword">var</span> dismissSearch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>提交搜索</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">List</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $vm<span class="token punctuation">.</span>searchTerm<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onSubmit</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token punctuation">.</span>search<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="搜索栏外观"><a href="#搜索栏外观" class="headerlink" title="搜索栏外观"></a>搜索栏外观</h4><p>占位文字说明</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $wwdcVM<span class="token punctuation">.</span>searchText<span class="token punctuation">,</span> prompt<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"搜索 WWDC Session 内容"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一直显示搜索栏</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $wwdcVM<span class="token punctuation">.</span>searchText<span class="token punctuation">,</span>             placement<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">navigationBarDrawer</span><span class="token punctuation">(</span>displayMode<span class="token punctuation">:</span><span class="token punctuation">.</span>always<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>更改搜索栏的位置</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $wwdcVM<span class="token punctuation">.</span>searchText<span class="token punctuation">,</span> placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>sidebar<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="搜索去抖动"><a href="#搜索去抖动" class="headerlink" title="搜索去抖动"></a>搜索去抖动</h4><p>你可以使用 Combine 框架来实现搜索的去抖动功能。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">Combine</span><span class="token keyword">class</span> <span class="token class-name">SearchViewModel</span><span class="token punctuation">:</span> <span class="token class-name">ObservableObject</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Published</span> <span class="token keyword">var</span> searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">""</span></span>    <span class="token attribute atrule">@Published</span> <span class="token keyword">var</span> searchResults<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">private</span> <span class="token keyword">var</span> cancellables <span class="token operator">=</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token class-name">AnyCancellable</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        $searchText            <span class="token punctuation">.</span><span class="token function">debounce</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">milliseconds</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span> scheduler<span class="token punctuation">:</span> <span class="token class-name">RunLoop</span><span class="token punctuation">.</span>main<span class="token punctuation">)</span>            <span class="token punctuation">.</span>sink <span class="token punctuation">&#123;</span> <span class="token punctuation">[</span><span class="token keyword">weak</span> <span class="token keyword">self</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token keyword">self</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">store</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>cancellables<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">search</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> text<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 这里是你的搜索逻辑</span>        <span class="token comment">// 例如，你可以从一个数组中过滤出匹配的元素</span>        <span class="token keyword">let</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 5"</span></span><span class="token punctuation">]</span>        searchResults <span class="token operator">=</span> items<span class="token punctuation">.</span>filter <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@StateObject</span> <span class="token keyword">private</span> <span class="token keyword">var</span> viewModel <span class="token operator">=</span> <span class="token class-name">SearchViewModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Search"</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $viewModel<span class="token punctuation">.</span>searchText<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token class-name">List</span><span class="token punctuation">(</span>viewModel<span class="token punctuation">.</span>searchResults<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> result <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个 <code>SearchViewModel</code> 类，它有一个 <code>searchText</code> 属性和一个 <code>searchResults</code> 属性。当 <code>searchText</code> 属性的值发生变化时，我们使用 Combine 的 <code>debounce(for:scheduler:)</code> 方法来延迟执行搜索操作，从而实现去抖动功能。然后我们在 <code>ContentView</code> 中使用这个 <code>SearchViewModel</code> 来显示搜索框和搜索结果。</p><h3 id="List-下拉刷新"><a href="#List-下拉刷新" class="headerlink" title="List-下拉刷新"></a>List-下拉刷新</h3><p>你可以使用 <code>.refreshable()</code> 修饰符来添加下拉刷新功能。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 5"</span></span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>refreshable <span class="token punctuation">&#123;</span>            <span class="token keyword">await</span> <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 这里是你的刷新逻辑</span>        <span class="token comment">// 例如，你可以从网络获取新的数据，然后更新 items 数组</span>        <span class="token comment">// 这里我们只是简单地将 items 数组反转</span>        items<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含五个元素的 List，并添加了下拉刷新功能。当用户下拉 List 时，<code>refresh()</code> 方法会被调用，然后我们将 items 数组反转，从而模拟刷新操作。注意，<code>refresh()</code> 方法需要是一个异步方法，因为刷新操作通常需要一些时间来完成。</p><h3 id="List-轻扫操作"><a href="#List-轻扫操作" class="headerlink" title="List-轻扫操作"></a>List-轻扫操作</h3><p>你可以使用 <code>.swipeActions()</code> 修饰符来添加轻扫操作。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">"Item 1"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 2"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 3"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 4"</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">"Item 5"</span></span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>                <span class="token punctuation">.</span>swipeActions <span class="token punctuation">&#123;</span>                    <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                        <span class="token comment">// 这里是你的删除操作</span>                        <span class="token keyword">if</span> <span class="token keyword">let</span> index <span class="token operator">=</span> items<span class="token punctuation">.</span><span class="token function">firstIndex</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> item<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            items<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> index<span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Delete"</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"trash"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含五个元素的 List，并为每个元素添加了一个滑动操作。当用户向左轻扫一个元素时，会显示一个 “Delete” 按钮，用户可以点击这个按钮来删除该元素。</p><h3 id="List-大纲视图"><a href="#List-大纲视图" class="headerlink" title="List-大纲视图"></a>List-大纲视图</h3><h4 id="List-树状结构"><a href="#List-树状结构" class="headerlink" title="List 树状结构"></a>List 树状结构</h4><p>通过 children 参数指定子树路径。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">List</span><span class="token punctuation">(</span>outlineModel<span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>children<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>    <span class="token class-name">Label</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>title<span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> i<span class="token punctuation">.</span>iconName<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="DisclosureGroup-实现展开和折叠"><a href="#DisclosureGroup-实现展开和折叠" class="headerlink" title="DisclosureGroup 实现展开和折叠"></a>DisclosureGroup 实现展开和折叠</h4><p><code>DisclosureGroup</code> 视图可以用来创建一个可以展开和折叠的内容区域。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isExpanded <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">DisclosureGroup</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Options"</span></span><span class="token punctuation">,</span> isExpanded<span class="token punctuation">:</span> $isExpanded<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Option 1"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Option 2"</span></span><span class="token punctuation">)</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Option 3"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个 <code>DisclosureGroup</code> 视图，它的标题是 “Options”，并且它包含三个选项。我们使用一个 <code>@State</code> 属性 <code>isExpanded</code> 来控制 <code>DisclosureGroup</code> 视图是否展开。当用户点击标题时，<code>DisclosureGroup</code> 视图会自动展开或折叠，同时 <code>isExpanded</code> 属性的值也会相应地改变。</p><h4 id="OutlineGroup-创建大纲视图"><a href="#OutlineGroup-创建大纲视图" class="headerlink" title="OutlineGroup 创建大纲视图"></a>OutlineGroup 创建大纲视图</h4><p>可以使用 <code>OutlineGroup</code> 视图来创建一个大纲视图。以下是一个例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">OutlineGroup</span><span class="token punctuation">(</span>sampleData<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">Item</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Item</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> sampleData<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Item</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token class-name">Item</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Parent 1"</span></span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token class-name">Item</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Child 1"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Item</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Child 2"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token class-name">Item</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Parent 2"</span></span><span class="token punctuation">,</span> children<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token class-name">Item</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Child 3"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Item</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Child 4"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个 <code>Item</code> 结构体，它有一个 <code>name</code> 属性和一个 <code>children</code> 属性。然后我们创建了一个 <code>sampleData</code> 数组，它包含两个父项，每个父项都有两个子项。最后我们在 <code>ContentView</code> 中使用 <code>OutlineGroup</code> 视图来显示这个数组，每个父项和子项都显示为一个文本视图。</p><h4 id="结合-OutlineGroup-和-DisclosureGroup-实现自定义可折叠大纲视图"><a href="#结合-OutlineGroup-和-DisclosureGroup-实现自定义可折叠大纲视图" class="headerlink" title="结合 OutlineGroup 和 DisclosureGroup 实现自定义可折叠大纲视图"></a>结合 OutlineGroup 和 DisclosureGroup 实现自定义可折叠大纲视图</h4><p>代码如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SPOutlineListView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">D</span><span class="token punctuation">:</span> <span class="token class-name">RandomAccessCollection</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">let</span> v<span class="token punctuation">:</span> <span class="token class-name">SPOutlineView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span>        <span class="token keyword">init</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> <span class="token class-name">D</span><span class="token punctuation">,</span> c<span class="token punctuation">:</span> <span class="token class-name">KeyPath</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token operator">?></span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>v <span class="token operator">=</span> <span class="token class-name">SPOutlineView</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> d<span class="token punctuation">,</span> c<span class="token punctuation">:</span> c<span class="token punctuation">,</span> content<span class="token punctuation">:</span> content<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            v        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SPOutlineView</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">D</span><span class="token punctuation">:</span> <span class="token class-name">RandomAccessCollection</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Content</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> d<span class="token punctuation">:</span> <span class="token class-name">D</span>    <span class="token keyword">let</span> c<span class="token punctuation">:</span> <span class="token class-name">KeyPath</span><span class="token operator">&lt;</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">,</span> <span class="token class-name">D</span><span class="token operator">?></span>    <span class="token keyword">let</span> content<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token class-name">D</span><span class="token punctuation">.</span><span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Content</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isExpanded <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment">// 控制初始是否展开的状态</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ForEach</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>            <span class="token keyword">if</span> <span class="token keyword">let</span> sub <span class="token operator">=</span> i<span class="token punctuation">[</span>keyPath<span class="token punctuation">:</span> c<span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">SPDisclosureGroup</span><span class="token punctuation">(</span>content<span class="token punctuation">:</span> <span class="token class-name">SPOutlineView</span><span class="token punctuation">(</span>d<span class="token punctuation">:</span> sub<span class="token punctuation">,</span> c<span class="token punctuation">:</span> c<span class="token punctuation">,</span> content<span class="token punctuation">:</span> content<span class="token punctuation">)</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token function">content</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token function">content</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token comment">// end if</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end ForEach</span>    <span class="token punctuation">&#125;</span> <span class="token comment">// end body</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SPDisclosureGroup</span><span class="token operator">&lt;</span><span class="token class-name">C</span><span class="token punctuation">,</span> <span class="token class-name">L</span><span class="token operator">></span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token keyword">where</span> <span class="token class-name">C</span><span class="token punctuation">:</span> <span class="token class-name">View</span><span class="token punctuation">,</span> <span class="token class-name">L</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> isExpanded <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token keyword">var</span> content<span class="token punctuation">:</span> <span class="token class-name">C</span>    <span class="token keyword">var</span> label<span class="token punctuation">:</span> <span class="token class-name">L</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">DisclosureGroup</span><span class="token punctuation">(</span>isExpanded<span class="token punctuation">:</span> $isExpanded<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            content        <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Button</span> <span class="token punctuation">&#123;</span>                withAnimation <span class="token punctuation">&#123;</span>                    isExpanded<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                label            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">buttonStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>plain<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="List-完全可点击的行"><a href="#List-完全可点击的行" class="headerlink" title="List-完全可点击的行"></a>List-完全可点击的行</h3><p>使用 <code>.contentShape(Rectangle())</code> 可以使整个区域都可点击 </p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">..&lt;</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> num <span class="token keyword">in</span>                <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">num</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">.</span><span class="token function">contentShape</span><span class="token punctuation">(</span><span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">&#123;</span>                    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Clicked </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">num</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token comment">// end list</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="List-索引标题"><a href="#List-索引标题" class="headerlink" title="List-索引标题"></a>List-索引标题</h3><p>这个代码是在创建一个带有索引标题的列表，用户可以通过拖动索引标题来快速滚动列表。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token operator">...</span><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span>  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ScrollViewReader</span> <span class="token punctuation">&#123;</span> proxy <span class="token keyword">in</span>      <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ArticleListView</span>      <span class="token punctuation">&#125;</span>      <span class="token punctuation">.</span><span class="token function">listStyle</span><span class="token punctuation">(</span><span class="token class-name">InsetGroupedListStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span><span class="token class-name">IndexView</span><span class="token punctuation">(</span>proxy<span class="token punctuation">:</span> proxy<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">IndexView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> proxy<span class="token punctuation">:</span> <span class="token class-name">ScrollViewProxy</span>  <span class="token keyword">let</span> titles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span>  <span class="token attribute atrule">@GestureState</span> <span class="token keyword">private</span> <span class="token keyword">var</span> dragLocation<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span> <span class="token operator">=</span> <span class="token punctuation">.</span>zero  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">VStack</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">ForEach</span><span class="token punctuation">(</span>titles<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> title <span class="token keyword">in</span>        <span class="token class-name">TitleView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> title<span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span><span class="token function">gesture</span><span class="token punctuation">(</span>      <span class="token class-name">DragGesture</span><span class="token punctuation">(</span>minimumDistance<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> coordinateSpace<span class="token punctuation">:</span> <span class="token punctuation">.</span>global<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">updating</span><span class="token punctuation">(</span>$dragLocation<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> value<span class="token punctuation">,</span> state<span class="token punctuation">,</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span>          state <span class="token operator">=</span> value<span class="token punctuation">.</span>location        <span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">func</span> <span class="token function-definition function">drag</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">GeometryReader</span> <span class="token punctuation">&#123;</span> geometry <span class="token keyword">in</span>      <span class="token function">drag</span><span class="token punctuation">(</span>geometry<span class="token punctuation">:</span> geometry<span class="token punctuation">,</span> title<span class="token punctuation">:</span> title<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">func</span> <span class="token function-definition function">drag</span><span class="token punctuation">(</span>geometry<span class="token punctuation">:</span> <span class="token class-name">GeometryProxy</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> geometry<span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>global<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>dragLocation<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token keyword">async</span> <span class="token punctuation">&#123;</span>        proxy<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span> anchor<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>clear<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面代码中 <code>ContentView</code> 是主视图，它包含一个 <code>List</code> 和一个 <code>IndexView</code>。<code>List</code> 中的内容由 <code>ArticleListView</code> 提供。<code>IndexView</code> 是一个自定义视图，它显示了所有的索引标题。</p><p><code>IndexView</code> 接受一个 <code>ScrollViewProxy</code> 和一个标题数组。它使用 <code>VStack</code> 和 <code>ForEach</code> 来创建一个垂直的索引标题列表。每个标题都是一个 <code>TitleView</code>，并且它有一个背景，这个背景是通过 <code>drag(title:)</code> 方法创建的。</p><p><code>drag(title:)</code> 方法接受一个标题，并返回一个视图。这个视图是一个 <code>GeometryReader</code>，它可以获取其包含的视图的几何信息。然后，这个 <code>GeometryReader</code> 使用 <code>drag(geometry:title:)</code> 方法来创建一个新的视图。</p><p><code>drag(geometry:title:)</code> 方法接受一个 <code>GeometryProxy</code> 和一个标题，并返回一个视图。如果 <code>GeometryProxy</code> 的全局帧包含当前的拖动位置，那么这个方法将返回一个特定的视图。</p><p><code>IndexView</code> 还有一个手势，这个手势是一个 <code>DragGesture</code>。当用户拖动索引标题时，这个手势会更新 <code>dragLocation</code> 属性的值，这个属性是一个 <code>@GestureState</code> 属性，它表示当前的拖动位置。</p><h3 id="List-加载更多"><a href="#List-加载更多" class="headerlink" title="List-加载更多"></a>List-加载更多</h3><p>你可以通过检测列表滚动到底部来实现加载更多的功能。以下是一个简单的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">20</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>items<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Item </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">item</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span>onAppear <span class="token punctuation">&#123;</span>                        <span class="token keyword">if</span> item <span class="token operator">==</span> items<span class="token punctuation">.</span>last <span class="token punctuation">&#123;</span>                            <span class="token function">loadMore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">onAppear</span><span class="token punctuation">(</span>perform<span class="token punctuation">:</span> loadMore<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">loadMore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">DispatchQueue</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">asyncAfter</span><span class="token punctuation">(</span>deadline<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> newItems <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token keyword">self</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>count<span class="token operator">..&lt;</span><span class="token keyword">self</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">)</span>            <span class="token keyword">self</span><span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>contentsOf<span class="token punctuation">:</span> newItems<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个包含多个元素的 List。当 List 出现最后一项时，我们调用 <code>loadMore</code> 方法来加载更多的元素。在 <code>loadMore</code> 方法中，模拟在一秒后添加新的元素到 <code>items</code> 数组中。</p><p>请注意，这只是一个基本的使用示例，实际的使用方式可能会根据你的需求而变化。例如，你可能需要从网络获取新的元素，而不是像这个例子中那样直接创建新的元素。</p><h2 id="Lazy容器"><a href="#Lazy容器" class="headerlink" title="Lazy容器"></a>Lazy容器</h2><h3 id="LazyVStack和LazyHStack"><a href="#LazyVStack和LazyHStack" class="headerlink" title="LazyVStack和LazyHStack"></a>LazyVStack和LazyHStack</h3><p>LazyVStack 和 LazyHStack 里的视图只有在滚到时才会被创建。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayLazyVStackAndLazyHStackView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LazyVStack</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">...</span><span class="token number">300</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                    <span class="token class-name">PLHSRowView</span><span class="token punctuation">(</span>i<span class="token punctuation">:</span> i<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">PLHSRowView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> i<span class="token punctuation">:</span> <span class="token class-name">Int</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"第 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 个"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">init</span><span class="token punctuation">(</span>i<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"第 </span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> 个初始化了"</span></span><span class="token punctuation">)</span> <span class="token comment">// 用来查看什么时候创建的。</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>i <span class="token operator">=</span> i    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="LazyVGrid和LazyHGrid"><a href="#LazyVGrid和LazyHGrid" class="headerlink" title="LazyVGrid和LazyHGrid"></a>LazyVGrid和LazyHGrid</h3><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/240505/lazyvgridandlazyhgrid-ap01.jpeg" class="lozad post-image"src="https://ming1016.github.io/qdimg/240505/lazyvgridandlazyhgrid-ap01.jpeg"></p><p>列的设置有三种，这三种也可以组合用。</p><ul><li>GridItem(.fixed(10)) 会固定设置有多少列。</li><li>GridItem(.flexible()) 会充满没有使用的空间。</li><li>GridItem(.adaptive(minimum: 10)) 表示会根据设置大小自动设置有多少列展示。</li></ul><p>示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">PlayLazyVGridAndLazyHGridView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> colors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span><span class="token class-name">Color</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string-literal"><span class="token string">"red"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>red<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"orange"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>orange<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"yellow"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>yellow<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"green"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>green<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"mint"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>mint<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"teal"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>teal<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"cyan"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>cyan<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"blue"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>blue<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"indigo"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>indigo<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"purple"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>purple<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"pink"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>pink<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"brown"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>brown<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"gray"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>gray<span class="token punctuation">,</span>        <span class="token string-literal"><span class="token string">"black"</span></span> <span class="token punctuation">:</span> <span class="token punctuation">.</span>black    <span class="token punctuation">]</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ScrollView</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">LazyVGrid</span><span class="token punctuation">(</span>columns<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token class-name">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">adaptive</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span> pinnedViews<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>sectionHeaders<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Section</span><span class="token punctuation">(</span>header<span class="token punctuation">:</span>                            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"🎨调色板"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> maxHeight<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">)</span>                                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span>                                                <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>black<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">(</span>colors<span class="token punctuation">.</span>keys<span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> k <span class="token keyword">in</span>                        colors<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span><span class="token class-name">Double</span><span class="token punctuation">(</span><span class="token class-name">Int</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">50</span><span class="token operator">...</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">overlay</span><span class="token punctuation">(</span>                                <span class="token class-name">Text</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>                            <span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token class-name">LazyVGrid</span><span class="token punctuation">(</span>columns<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token class-name">GridItem</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">adaptive</span><span class="token punctuation">(</span>minimum<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> spacing<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>            <span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Section</span><span class="token punctuation">(</span>header<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"图标集"</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">...</span><span class="token number">30</span><span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                        <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"p</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">aspectRatio</span><span class="token punctuation">(</span>contentMode<span class="token punctuation">:</span> <span class="token punctuation">.</span>fit<span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>black<span class="token punctuation">,</span> radius<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Grid"><a href="#Grid" class="headerlink" title="Grid"></a>Grid</h2><p>Grid 会将最大的一个单元格大小应用于所有单元格</p><p>代码例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Grid</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>center<span class="token punctuation">,</span>             horizontalSpacing<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span>             verticalSpacing<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">GridRow</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Tropical"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Mango"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Pineapple"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">gridCellColumns</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">GridRow</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Leafy"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Spinach"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Kale"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Lettuce"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>gridCellAnchor</code> 可以让 GridRow 给自己设置对齐方式。</p><p><code>gridCellColumns()</code>  modifier 可以让一个单元格跨多列。</p><p>GridRow 的间距通过 Grid 的 <code>horizontalSpacing</code> 和 <code>verticalSpacing</code> 参数来控制。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> numbers<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token class-name">Int</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span>    <span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Grid</span><span class="token punctuation">(</span>horizontalSpacing<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> verticalSpacing<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span>indices<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> i <span class="token keyword">in</span>                <span class="token class-name">GridRow</span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">ForEach</span><span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>indices<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> j <span class="token keyword">in</span>                        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation">numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">,</span> maxHeight<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                            <span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span>gray<span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>按照以上代码这样写，每个数字 GridRow 之间的间隔就是0了。</p><p>空白的单元格可以这样写：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Color</span><span class="token punctuation">.</span>clear    <span class="token punctuation">.</span><span class="token function">gridCellUnsizedAxes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">,</span> <span class="token punctuation">.</span>vertical<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Table表格"><a href="#Table表格" class="headerlink" title="Table表格"></a>Table表格</h2><h3 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h3><p>今年 iOS 和 iPadOS 也可以使用去年只能在 macOS 上使用的 Table了，据 digital lounges 里说，iOS table 的性能和 list 差不多，table 默认为 plian list。我想 iOS 上加上 table 只是为了兼容 macOS 代码吧。</p><p>table 使用示例如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Table</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">.</span><span class="token function">simpleData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"名字"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"颜色"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>color<span class="token punctuation">)</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"颜色"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token short-argument">$0</span><span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>footnote<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>cyan<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">contextMenu</span><span class="token punctuation">(</span>forSelectionType<span class="token punctuation">:</span> <span class="token class-name">Fruit</span><span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> selection <span class="token keyword">in</span>            <span class="token keyword">if</span> selection<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"添加"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> selection<span class="token punctuation">.</span>count <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"收藏"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"收藏多个"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">struct</span> <span class="token class-name">Fruit</span><span class="token punctuation">:</span><span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>        <span class="token keyword">let</span> color<span class="token punctuation">:</span> <span class="token class-name">String</span>                <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">simpleData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">[</span><span class="token class-name">Fruit</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> re <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">Fruit</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            re<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Apple"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>            re<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Banana"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Yellow"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>            re<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Cherry"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>            re<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Date"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Brown"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>            re<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Elderberry"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Purple"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> re        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Table-样式"><a href="#Table-样式" class="headerlink" title="Table-样式"></a>Table-样式</h3><p>在 SwiftUI 中，<code>Table</code> 视图的 <code>.tableStyle</code> 修改器可以用来设置表格的样式。目前，SwiftUI 提供了以下几种表格样式：</p><ul><li>inset：默认</li><li><code>inset(alternatesRowBackgrounds: Bool)</code>：是否开启行交错背景</li><li>bordered：加边框</li><li><code>bordered(alternatesRowBackgrounds: Bool)</code>： 是否开启行交错背景</li></ul><p>你可以使用 <code>.tableStyle</code> 修改器来设置表格的样式，例如：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Table</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">tableStyle</span><span class="token punctuation">(</span><span class="token class-name">InsetGroupedListStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码会将表格的样式设置为 <code>InsetGroupedListStyle</code>。</p><h3 id="Table-行的选择"><a href="#Table-行的选择" class="headerlink" title="Table-行的选择"></a>Table-行的选择</h3><p>你可以使用 Table 视图的 selection 参数来实现单选和多选。selection 参数接受一个绑定到一个可选的 Set 的变量，这个 Set 包含了被选中的元素的标识。</p><p>以下是一个使用 Table 视图实现单选和多选的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectionOne<span class="token punctuation">:</span> <span class="token constant">UUID</span><span class="token operator">?</span> <span class="token comment">// 单选</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selection<span class="token punctuation">:</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token constant">UUID</span><span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 多选</span>    <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Apple"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Banana"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Yellow"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Cherry"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Date"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Brown"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Elderberry"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Purple"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Table</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selectionOne<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Fruit"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Color"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> item <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>color<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">Fruit</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> color<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们首先定义了一个 @State 变量 selection，它是一个 Set，包含了被选中的元素的标识。然后，我们将这个变量绑定到 Table 视图的 selection 参数。</p><p>现在，当用户选择或取消选择一个元素时，selection 变量就会被更新。你可以使用这个变量来判断哪些元素被选中，或者实现其他的交互功能。</p><h3 id="Table-多属性排序"><a href="#Table-多属性排序" class="headerlink" title="Table-多属性排序"></a>Table-多属性排序</h3><p>你可以使用 <code>Table</code> 视图的 <code>sortOrder</code> 参数来实现多属性排序。<code>sortOrder</code> 参数接受一个绑定到一个 <code>SortDescriptor</code> 数组的变量，这个数组定义了排序的顺序和方式。</p><p>以下是一个使用 <code>Table</code> 视图实现多属性排序的例子：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> sortOrder<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">KeyPathComparator</span><span class="token operator">&lt;</span><span class="token class-name">Fruit</span><span class="token operator">></span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Apple"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Banana"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Yellow"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Cherry"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Red"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Date"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Brown"</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token class-name">Fruit</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Elderberry"</span></span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Purple"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token function">sortKeyPathView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 排序状态</span>        <span class="token class-name">Table</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> sortOrder<span class="token punctuation">:</span> $sortOrder<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Fruit"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Color"</span></span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>color<span class="token punctuation">)</span>            <span class="token comment">// 不含 value 参数的不支持排序</span>            <span class="token class-name">TableColumn</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"ColorNoOrder"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"</span><span class="token interpolation-punctuation punctuation">\(</span><span class="token interpolation"><span class="token short-argument">$0</span><span class="token punctuation">.</span>color</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">"</span></span><span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>footnote<span class="token punctuation">)</span>                    <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>mint<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>task <span class="token punctuation">&#123;</span>            data<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>using<span class="token punctuation">:</span> sortOrder<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> sortOrder<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> oldValue<span class="token punctuation">,</span> newValue <span class="token keyword">in</span>            data<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>using<span class="token punctuation">:</span> newValue<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token attribute atrule">@ViewBuilder</span>    <span class="token keyword">func</span> <span class="token function-definition function">sortKeyPathView</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HStack</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>sortOrder<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> order <span class="token keyword">in</span>                <span class="token class-name">Text</span><span class="token punctuation">(</span>order<span class="token punctuation">.</span>keyPath <span class="token operator">==</span> <span class="token punctuation">\</span><span class="token class-name">Fruit</span><span class="token punctuation">.</span>name <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"名字"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"颜色"</span></span><span class="token punctuation">)</span>                <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> order<span class="token punctuation">.</span>order <span class="token operator">==</span> <span class="token punctuation">.</span>reverse <span class="token operator">?</span> <span class="token string-literal"><span class="token string">"chevron.down"</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"chevron.up"</span></span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>top<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">Fruit</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> color<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们首先定义了一个 <code>@State</code> 变量 <code>sortOrder</code>，它是一个 <code>SortDescriptor</code> 数组，定义了排序的顺序和方式。然后，我们将这个变量绑定到 <code>Table</code> 视图的 <code>sortOrder</code> 参数。</p><p>现在，当用户点击表头来排序一个列时，<code>sortOrder</code> 变量就会被更新。你可以使用这个变量来实现多属性排序，或者实现其他的交互功能。</p><h3 id="Table-contextMenu"><a href="#Table-contextMenu" class="headerlink" title="Table-contextMenu"></a>Table-contextMenu</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selection<span class="token punctuation">:</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token constant">UUID</span><span class="token operator">></span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Table</span><span class="token punctuation">(</span><span class="token class-name">Fruit</span><span class="token punctuation">.</span><span class="token function">simpleData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token operator">...</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">contextMenu</span><span class="token punctuation">(</span>forSelectionType<span class="token punctuation">:</span> <span class="token class-name">Fruit</span><span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> selection <span class="token keyword">in</span>            <span class="token keyword">if</span> selection<span class="token punctuation">.</span>isEmpty <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"添加"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> selection<span class="token punctuation">.</span>count <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"收藏"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"收藏多个"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token comment">// ...</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> primaryAction<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> items <span class="token keyword">in</span>            <span class="token comment">// 双击某一行时</span>            <span class="token function">debugPrint</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容已整理到小册子中，小册子代码在 &lt;a href=&quot;https://github.com/ming1016/SwiftPamphletApp&quot;&gt;Github&lt;/a&gt; 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买&lt;a href=&quot;https://apps
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>小册子之简说 Widget 小组件</title>
    <link href="https://starming.com/2024/05/18/pamphlet-series-widget/"/>
    <id>https://starming.com/2024/05/18/pamphlet-series-widget/</id>
    <published>2024-05-18T00:07:31.000Z</published>
    <updated>2024-05-25T12:28:20.743Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容已整理到小册子中，小册子代码在 <a href="https://github.com/ming1016/SwiftPamphletApp">Github</a> 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">“戴铭的开发小册子”</a>应用(98元)，来跟踪查看本文内容新增和更新。</p><p>本文属于小册子系列中的一篇，已发布系列文章有：</p><ul><li><a href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/">小册子之如何使用 SwiftData 开发 SwiftUI 应用</a></li><li>【本篇】<a href="https://starming.com/2024/05/18/pamphlet-series-widget/">小册子之简说 Widget 小组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-listdataview/">小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-layout/">小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-form/">小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/25/pamphlet-series-animation/">小册子之 SwiftUI 动画</a></li></ul><p>Widge 允许开发者在用户的主屏幕或通知中心展示应用的信息。Widget 可以提供快速的信息预览，或者提供快速访问应用的方式。</p><p>开发 Widget 的基本步骤如下：</p><ol><li><p><strong>创建 Widget Extension</strong>：在 Xcode 中，你需要创建一个新的 Widget Extension。这将会生成一个新的 target，包含了创建 Widget 所需的基本代码。</p></li><li><p><strong>定义 Timeline Entry</strong>：Timeline Entry 是 Widget 数据的模型。你需要创建一个遵循 <code>TimelineEntry</code> 协议的结构体，定义你的 Widget 所需的数据。</p></li><li><p><strong>创建 Widget View</strong>：Widget View 是 Widget 的用户界面。你需要创建一个 <code>View</code>，展示你的 Widget 的内容。</p></li><li><p><strong>实现 Timeline Provider</strong>：Timeline Provider 是 Widget 数据的提供者。你需要创建一个遵循 <code>TimelineProvider</code> 协议的结构体，提供 Widget 的数据。</p></li><li><p><strong>配置 Widget</strong>：在 Widget 的主结构体中，你需要配置你的 Widget，包括它的类型（静态或者动态）、数据提供者、视图等。</p></li><li><p><strong>测试 Widget</strong>：在模拟器或者真机上测试你的 Widget，确保它的数据和视图都按预期工作。</p></li></ol><p>接下来，我们将详细介绍 Widget 的开发流程。</p><h2 id="小组件-StaticConfiguration-静态配置"><a href="#小组件-StaticConfiguration-静态配置" class="headerlink" title="小组件-StaticConfiguration 静态配置"></a>小组件-StaticConfiguration 静态配置</h2><p>在 Xcode 中，File -&gt; New -&gt; Target，选择 Widget Extension。这将会生成一个新的 target，包含了创建 Widget 所需的基本代码。</p><p>以下是一个简单的小组件代码示例：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">WidgetKit</span><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token comment">// Timeline Entry</span><span class="token keyword">struct</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">:</span> <span class="token class-name">TimelineEntry</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> date<span class="token punctuation">:</span> <span class="token class-name">Date</span>    <span class="token keyword">let</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">&#125;</span><span class="token comment">// Widget View</span><span class="token keyword">struct</span> <span class="token class-name">ArticleWidgetView</span> <span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> entry<span class="token punctuation">:</span> <span class="token class-name">ArticleEntry</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span>title<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// Timeline Provider</span><span class="token keyword">struct</span> <span class="token class-name">ArticleTimelineProvider</span><span class="token punctuation">:</span> <span class="token class-name">TimelineProvider</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">typealias</span> <span class="token class-name">Entry</span> <span class="token operator">=</span> <span class="token class-name">ArticleEntry</span>        <span class="token keyword">func</span> <span class="token function-definition function">placeholder</span><span class="token punctuation">(</span><span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Entry</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 占位大小，内容不会显示</span>        <span class="token keyword">return</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Placeholder"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">getSnapshot</span><span class="token punctuation">(</span><span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">,</span> completion<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> entry <span class="token operator">=</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Snapshot"</span></span><span class="token punctuation">)</span>        <span class="token function">completion</span><span class="token punctuation">(</span>entry<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">getTimeline</span><span class="token punctuation">(</span><span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">,</span> completion<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">Timeline</span><span class="token operator">&lt;</span><span class="token class-name">Entry</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> entry <span class="token operator">=</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"Timeline"</span></span><span class="token punctuation">)</span>        <span class="token keyword">let</span> timeline <span class="token operator">=</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>entries<span class="token punctuation">:</span> <span class="token punctuation">[</span>entry<span class="token punctuation">]</span><span class="token punctuation">,</span> policy<span class="token punctuation">:</span> <span class="token punctuation">.</span>never<span class="token punctuation">)</span>        <span class="token function">completion</span><span class="token punctuation">(</span>timeline<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// Widget Configuration</span><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">ArticleWidget</span><span class="token punctuation">:</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">WidgetConfiguration</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">StaticConfiguration</span><span class="token punctuation">(</span>            kind<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"com.starming.articleWidget"</span></span><span class="token punctuation">,</span>            provider<span class="token punctuation">:</span> <span class="token class-name">ArticleTimelineProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> entry <span class="token keyword">in</span>            <span class="token class-name">ArticleWidgetView</span><span class="token punctuation">(</span>entry<span class="token punctuation">:</span> entry<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">configurationDisplayName</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Article Widget"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"这是一个 Article Widget."</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">supportedFamilies</span><span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">.</span>systemSmall<span class="token punctuation">,</span>            <span class="token punctuation">.</span>systemMedium<span class="token punctuation">,</span>            <span class="token punctuation">.</span>systemLarge<span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上面的代码中，我们定义了一个 ArticleWidget 小组件，它包含了一个 ArticleEntry 数据模型、一个 ArticleWidgetView 视图、一个 ArticleTimelineProvider 数据提供者和一个 ArticleWidget 配置。</p><h2 id="小组件-AppIntentConfiguration"><a href="#小组件-AppIntentConfiguration" class="headerlink" title="小组件-AppIntentConfiguration"></a>小组件-AppIntentConfiguration</h2><p>iOS 17 开始可以使用 AppIntentConfiguration 来配置小组件，这样可以让小组件和 AppIntent 交互。这样可以让小组件和 App 之间的进行交互。</p><p>下面是一个简单的小组件代码示例，展示了如何使用 AppIntentConfiguration 来配置小组件和 AppIntent 交互</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span><span class="token keyword">import</span> <span class="token class-name">WidgetKit</span><span class="token keyword">import</span> <span class="token class-name">AppIntents</span><span class="token keyword">struct</span> <span class="token class-name">ArticleWidget</span><span class="token punctuation">:</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">WidgetConfiguration</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">AppIntentConfiguration</span><span class="token punctuation">(</span>            kind<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"com.starming.articleWidget"</span></span><span class="token punctuation">,</span>            intent<span class="token punctuation">:</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span>            provider<span class="token punctuation">:</span> <span class="token class-name">ArticleIntentProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> entry <span class="token keyword">in</span>            <span class="token class-name">ArticleWidgetView</span><span class="token punctuation">(</span>entry<span class="token punctuation">:</span> entry<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">configurationDisplayName</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Article Widget"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"这是一个 Article Widget."</span></span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">supportedFamilies</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span>systemSmall<span class="token punctuation">,</span> <span class="token punctuation">.</span>systemMedium<span class="token punctuation">,</span> <span class="token punctuation">.</span>systemLarge<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ArticleWidgetView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> entry<span class="token punctuation">:</span> <span class="token class-name">IntentProvider</span><span class="token punctuation">.</span><span class="token class-name">Entry</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span>author<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ArticleIntentProvider</span><span class="token punctuation">:</span> <span class="token class-name">AppIntentTimelineProvider</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">snapshot</span><span class="token punctuation">(</span><span class="token keyword">for</span> configuration<span class="token punctuation">:</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">,</span> <span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">ArticleEntry</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>            date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"snapshot"</span></span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">placeholder</span><span class="token punctuation">(</span><span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">ArticleEntry</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>            date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"某人"</span></span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">timeline</span><span class="token punctuation">(</span><span class="token keyword">for</span> configuration<span class="token punctuation">:</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">,</span> <span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">Timeline</span><span class="token operator">&lt;</span><span class="token class-name">ArticleEntry</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>            entries<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      author<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>author<span class="token punctuation">,</span>                      rate<span class="token punctuation">:</span> <span class="token keyword">await</span> <span class="token class-name">ArticleStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            policy<span class="token punctuation">:</span> <span class="token punctuation">.</span>never<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">:</span> <span class="token class-name">TimelineEntry</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> date<span class="token punctuation">:</span> <span class="token class-name">Date</span>    <span class="token keyword">let</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> rate<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span>    <span class="token comment">//...</span><span class="token punctuation">&#125;</span><span class="token comment">// 放在主应用中和小组件交互</span><span class="token keyword">struct</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">:</span> <span class="token class-name">WidgetConfigurationIntent</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">static</span> <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">LocalizedStringResource</span>  <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"文章"</span></span>    <span class="token keyword">var</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"某某某"</span></span>    <span class="token keyword">func</span> <span class="token function-definition function">perform</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token keyword">throws</span> <span class="token operator">-></span> <span class="token keyword">some</span> <span class="token class-name">IntentResult</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//...</span>        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token function">result</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">ArticleStore</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//... SwiftData 相关配置</span>    <span class="token attribute atrule">@MainActor</span>    <span class="token keyword">func</span> <span class="token function-definition function">rate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">Int</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//... 获取</span>        <span class="token keyword">return</span> <span class="token number">5</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如上代码所示，我们定义了一个 ArticleWidget 小组件，它包含了一个 ArticleIntent 数据模型、一个 ArticleWidgetView 视图、一个 ArticleIntentProvider 数据提供者和一个 ArticleWidget 配置。</p><h2 id="小组件-配置选项"><a href="#小组件-配置选项" class="headerlink" title="小组件-配置选项"></a>小组件-配置选项</h2><h3 id="显示区域"><a href="#显示区域" class="headerlink" title="显示区域"></a>显示区域</h3><p>iOS 17 新增显示区域配置，有下面四种</p><ul><li>homeScreen：主屏幕</li><li>lockScreen：锁屏</li><li>standBy：待机</li><li>iPhoneWidgetsOnMac：iPhone 上的 Mac 小组件</li></ul><p>设置小组件不在哪个区域显示某尺寸。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SomeWidget</span><span class="token punctuation">:</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">WidgetConfiguration</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">AppIntentConfiguration</span><span class="token punctuation">(</span>            <span class="token operator">...</span> <span class="token punctuation">&#123;</span> entry <span class="token keyword">in</span>            <span class="token operator">...</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 在 StandBy 中取消显示 systemSmall 尺寸</span>        <span class="token punctuation">.</span><span class="token function">disfavoredLocations</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span>standBy<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>systemSmall<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="取消内容边距"><a href="#取消内容边距" class="headerlink" title="取消内容边距"></a>取消内容边距</h3><p>使用 <code>.contentMarginsDisabled()</code> 取消内容边距。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SomeWidget</span><span class="token punctuation">:</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">WidgetConfiguration</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">AppIntentConfiguration</span><span class="token punctuation">(</span>            <span class="token operator">...</span> <span class="token punctuation">&#123;</span> entry <span class="token keyword">in</span>            <span class="token operator">...</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 使 Content margin 失效</span>        <span class="token punctuation">.</span><span class="token function">contentMarginsDisabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每个平台内容边距大小不同，环境变量 <code>\.widgetContentMargins</code> 可以读取内容边距的大小。</p><h3 id="取消背景删除"><a href="#取消背景删除" class="headerlink" title="取消背景删除"></a>取消背景删除</h3><p>在 StandBy 和 LockScreen 的某些情况，小组件的背景是会被自动删除的。</p><p>使用 <code>containerBackgroundRemovable()</code> 修饰符可以取消背景删除。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SomeWidget</span><span class="token punctuation">:</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">WidgetConfiguration</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">AppIntentConfiguration</span><span class="token punctuation">(</span>            <span class="token operator">...</span> <span class="token punctuation">&#123;</span> entry <span class="token keyword">in</span>            <span class="token operator">...</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">// 取消背景删除</span>        <span class="token punctuation">.</span><span class="token function">containerBackgroundRemovable</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>        <span class="token comment">// 让自己的背景可以全覆盖</span>        <span class="token punctuation">.</span><span class="token function">contentMarginsDisabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="后台网络处理"><a href="#后台网络处理" class="headerlink" title="后台网络处理"></a>后台网络处理</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span>onBackgroundURLSessionEvents <span class="token punctuation">&#123;</span> <span class="token punctuation">(</span>identifier<span class="token punctuation">,</span> completion<span class="token punctuation">)</span> <span class="token keyword">in</span>    <span class="token comment">//...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="AppIntentTimelineProvider"><a href="#AppIntentTimelineProvider" class="headerlink" title="AppIntentTimelineProvider"></a>AppIntentTimelineProvider</h2><p>AppIntentConfiguration 需要 AppIntentTimelineProvider，AppIntentTimelineProvider 需要实现 <code>snapshot</code>、<code>placeholder</code> 和 <code>timeline</code> 三个方法来确定小组件在展示和实际运行时间线时的视图和数据。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArticleIntentProvider</span><span class="token punctuation">:</span> <span class="token class-name">AppIntentTimelineProvider</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">snapshot</span><span class="token punctuation">(</span><span class="token keyword">for</span> configuration<span class="token punctuation">:</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">,</span> <span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">ArticleEntry</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>            date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"snapshot"</span></span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">placeholder</span><span class="token punctuation">(</span><span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">ArticleEntry</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>            date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            author<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"某人"</span></span>        <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">func</span> <span class="token function-definition function">timeline</span><span class="token punctuation">(</span><span class="token keyword">for</span> configuration<span class="token punctuation">:</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">,</span> <span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">Timeline</span><span class="token operator">&lt;</span><span class="token class-name">ArticleEntry</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>            entries<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                      author<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>author<span class="token punctuation">,</span>                      rate<span class="token punctuation">:</span> <span class="token keyword">await</span> <span class="token class-name">ArticleStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            policy<span class="token punctuation">:</span> <span class="token punctuation">.</span>never<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">:</span> <span class="token class-name">TimelineEntry</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> date<span class="token punctuation">:</span> <span class="token class-name">Date</span>    <span class="token keyword">let</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">var</span> rate<span class="token punctuation">:</span> <span class="token class-name">Int</span> <span class="token operator">=</span> <span class="token number">0</span>    <span class="token comment">//...</span><span class="token punctuation">&#125;</span>````## <span class="token class-name">Widget</span> <span class="token class-name">View</span>### 不同的大小设置不同视图```swift<span class="token keyword">struct</span> <span class="token class-name">ArticleWidgetView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> entry<span class="token punctuation">:</span> <span class="token class-name">Provider</span><span class="token punctuation">.</span><span class="token class-name">Entry</span>  <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>widgetFamily<span class="token punctuation">)</span> <span class="token keyword">var</span> family  <span class="token attribute atrule">@ViewBuilder</span>  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">switch</span> family <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token punctuation">.</span>systemSmall<span class="token punctuation">:</span>        <span class="token class-name">SomeViewSmall</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">default</span><span class="token punctuation">:</span>      <span class="token class-name">SomeViewDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="锁屏小组件"><a href="#锁屏小组件" class="headerlink" title="锁屏小组件"></a>锁屏小组件</h3><p>让小组件支持锁屏</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArticleWidget</span><span class="token punctuation">:</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">WidgetConfiguration</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">StaticConfiguration</span><span class="token punctuation">(</span>            <span class="token operator">...</span>        <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> entry <span class="token keyword">in</span>            <span class="token operator">...</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">...</span>        <span class="token punctuation">.</span><span class="token function">supportedFamilies</span><span class="token punctuation">(</span><span class="token punctuation">[</span>            <span class="token punctuation">.</span>systemSmall<span class="token punctuation">,</span>            <span class="token punctuation">.</span>systemMedium<span class="token punctuation">,</span>            <span class="token punctuation">.</span>systemLarge<span class="token punctuation">,</span>            <span class="token comment">// 添加支持到 Lock Screen widgets</span>            <span class="token punctuation">.</span>accessoryCircular<span class="token punctuation">,</span>            <span class="token punctuation">.</span>accessoryRectangular<span class="token punctuation">,</span>            <span class="token punctuation">.</span>accessoryInline<span class="token punctuation">,</span>        <span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="不同类型-widgetFamily-实现不同视图"><a href="#不同类型-widgetFamily-实现不同视图" class="headerlink" title="不同类型 widgetFamily 实现不同视图"></a>不同类型 widgetFamily 实现不同视图</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArticleWidgetView</span> <span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>       <span class="token keyword">let</span> entry<span class="token punctuation">:</span> <span class="token class-name">ViewSizeEntry</span>    <span class="token comment">// 获取 widget family 值</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>widgetFamily<span class="token punctuation">)</span> <span class="token keyword">var</span> family    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> family <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>accessoryRectangular<span class="token punctuation">:</span>            <span class="token class-name">RectangularWidgetView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>accessoryCircular<span class="token punctuation">:</span>            <span class="token class-name">CircularWidgetView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>accessoryInline<span class="token punctuation">:</span>            <span class="token class-name">InlineWidgetView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">default</span><span class="token punctuation">:</span>            <span class="token class-name">ArticleWidgetView</span><span class="token punctuation">(</span>entry<span class="token punctuation">:</span> entry<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="不同渲染模式实现不同视图"><a href="#不同渲染模式实现不同视图" class="headerlink" title="不同渲染模式实现不同视图"></a>不同渲染模式实现不同视图</h3><p>小组件有三种不同的渲染模式：</p><ul><li>Full-color：主屏用</li><li>Vibrant：用于待机模式和锁屏</li><li>The accented：用于手表</li></ul><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArticleWidgetView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> entry<span class="token punctuation">:</span> <span class="token class-name">Entry</span>        <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>widgetRenderingMode<span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">var</span> renderingMode        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">switch</span> renderingMode <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>accented<span class="token punctuation">:</span>            <span class="token class-name">AccentedWidgetView</span><span class="token punctuation">(</span>entry<span class="token punctuation">:</span> entry<span class="token punctuation">)</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>fullColor<span class="token punctuation">:</span>            <span class="token class-name">FullColorWidgetView</span><span class="token punctuation">(</span>entry<span class="token punctuation">:</span> entry<span class="token punctuation">)</span>        <span class="token keyword">case</span> <span class="token punctuation">.</span>vibrant<span class="token punctuation">:</span>            <span class="token class-name">VibrantWidgetView</span><span class="token punctuation">(</span>entry<span class="token punctuation">:</span> entry<span class="token punctuation">)</span>        <span class="token keyword">default</span><span class="token punctuation">:</span>            <span class="token class-name">DefaultView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="视图交互"><a href="#视图交互" class="headerlink" title="视图交互"></a>视图交互</h3><p>使用 AppIntent</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArticleWidgetView</span> <span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> entry<span class="token punctuation">:</span> <span class="token class-name">IntentProvider</span><span class="token punctuation">.</span><span class="token class-name">Entry</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">VStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token operator">...</span>            <span class="token class-name">Button</span><span class="token punctuation">(</span>intent<span class="token punctuation">:</span> <span class="token class-name">RunIntent</span><span class="token punctuation">(</span>rate<span class="token punctuation">:</span> entry<span class="token punctuation">.</span>rate<span class="token punctuation">)</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>                <span class="token operator">...</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="刷新小组件"><a href="#刷新小组件" class="headerlink" title="刷新小组件"></a>刷新小组件</h2><h3 id="通过-Text-视图更新"><a href="#通过-Text-视图更新" class="headerlink" title="通过 Text 视图更新"></a>通过 Text 视图更新</h3><p>倒计时</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> futureDate <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span>byAdding<span class="token punctuation">:</span> components<span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token comment">// 日期会在 Text 视图中动态变化</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">CountdownWidgetView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token function">futureDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> style<span class="token punctuation">:</span> <span class="token punctuation">.</span>timer<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">private</span> <span class="token keyword">func</span> <span class="token function-definition function">futureDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Date</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> components <span class="token operator">=</span> <span class="token class-name">DateComponents</span><span class="token punctuation">(</span>second<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> futureDate <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span>byAdding<span class="token punctuation">:</span> components<span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!</span>        <span class="token keyword">return</span> futureDate    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Timeline-Provider-更新"><a href="#Timeline-Provider-更新" class="headerlink" title="Timeline Provider 更新"></a>Timeline Provider 更新</h3><p>在 timeline 方法中实现，entries 包含了不同更新的数据。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">func</span> <span class="token function-definition function">timeline</span><span class="token punctuation">(</span><span class="token keyword">for</span> configuration<span class="token punctuation">:</span> <span class="token class-name">ArticleIntent</span><span class="token punctuation">,</span> <span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">Timeline</span><span class="token operator">&lt;</span><span class="token class-name">ArticleEntry</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>        entries<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  author<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>author<span class="token punctuation">,</span>                  rate<span class="token punctuation">:</span> <span class="token keyword">await</span> <span class="token class-name">ArticleStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        policy<span class="token punctuation">:</span> <span class="token punctuation">.</span>never<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="更新策略"><a href="#更新策略" class="headerlink" title="更新策略"></a>更新策略</h3><p>3 种类型的刷新策略：</p><ul><li><code>atEnd</code>：上个刷新完成直接进入下个刷新，但是进入下一个刷新的时间由系统决定。</li><li><code>after(Date)</code>：指定进入下个刷新的时间，但是具体时间还是由系统说了算，因此可以理解为是指定的是最早进入下个刷新的时间。</li><li><code>never</code>：不会进入下个刷新，除非显式调用 <code>reloadTimelines(ofKind:)</code></li></ul><p>举例，指定下个刷新周期至少是上个周期结束10秒后：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> lastUpdateDate <span class="token operator">=</span> entries<span class="token punctuation">.</span>last<span class="token operator">!</span><span class="token punctuation">.</span>date<span class="token keyword">let</span> nextUpdateDate <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span>byAdding<span class="token punctuation">:</span> <span class="token class-name">DateComponents</span><span class="token punctuation">(</span>second<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> lastUpdate<span class="token punctuation">)</span><span class="token operator">!</span><span class="token keyword">let</span> timeline <span class="token operator">=</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>entries<span class="token punctuation">:</span> entries<span class="token punctuation">,</span> policy<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>nextUpdate<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Relevance-优先级"><a href="#Relevance-优先级" class="headerlink" title="Relevance 优先级"></a>Relevance 优先级</h3><p>App 自定义刷新 Timeline 的优先级，使用 Relevance。先在 TimelineEntry 里定义：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">:</span> <span class="token class-name">TimelineEntry</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> date<span class="token punctuation">:</span> <span class="token class-name">Date</span>    <span class="token operator">...</span>    <span class="token keyword">let</span> relevance<span class="token punctuation">:</span> <span class="token class-name">TimelineEntryRelevance</span><span class="token operator">?</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 timeline 方法中根据必要刷新程序，定义不同 relevance 的值。</p><h3 id="App-主动刷新"><a href="#App-主动刷新" class="headerlink" title="App 主动刷新"></a>App 主动刷新</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token comment">// 刷新单个小组件</span><span class="token class-name">WidgetCenter</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">reloadTimelines</span><span class="token punctuation">(</span>ofKind<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"CountryWidget"</span></span><span class="token punctuation">)</span><span class="token comment">// 刷新所有小组件</span><span class="token class-name">WidgetCenter</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">reloadAllTimelines</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="刷新小组件的最佳实践"><a href="#刷新小组件的最佳实践" class="headerlink" title="刷新小组件的最佳实践"></a>刷新小组件的最佳实践</h3><p>调试时刷新率不会有限制，生产环境每天最多40到70次，相当于每15到60分钟刷新一次。</p><h2 id="小组件动画"><a href="#小组件动画" class="headerlink" title="小组件动画"></a>小组件动画</h2><h3 id="Text-视图动态时间"><a href="#Text-视图动态时间" class="headerlink" title="Text 视图动态时间"></a>Text 视图动态时间</h3><p>利用 Text 的动态时间能力</p><h3 id="timeline-动画"><a href="#timeline-动画" class="headerlink" title="timeline 动画"></a>timeline 动画</h3><p>timeline 是由一组时间和数据组成的，每次刷新时，小组件通过和上次数据不一致加入动画效果。</p><p>默认情况小组件使用的是弹簧动画。我们也可以添加转场（Transition）、动画（Animation）和内容过渡（Content Transition）动画效果。</p><h3 id="文本内容过渡动画效果"><a href="#文本内容过渡动画效果" class="headerlink" title="文本内容过渡动画效果"></a>文本内容过渡动画效果</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">contentTransition</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">numericText</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> rate<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="从底部翻上来的专场"><a href="#从底部翻上来的专场" class="headerlink" title="从底部翻上来的专场"></a>从底部翻上来的专场</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> <span class="token punctuation">.</span>bottom<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="小组件-远程定时获取数据"><a href="#小组件-远程定时获取数据" class="headerlink" title="小组件-远程定时获取数据"></a>小组件-远程定时获取数据</h2><p>在 TimelineProvider 中的 timeline 方法中加入请求逻辑</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">func</span> <span class="token function-definition function">timeline</span><span class="token punctuation">(</span><span class="token keyword">for</span> configuration<span class="token punctuation">:</span> <span class="token class-name">RunIntent</span><span class="token punctuation">,</span> <span class="token keyword">in</span> context<span class="token punctuation">:</span> <span class="token class-name">Context</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-></span> <span class="token class-name">Timeline</span><span class="token operator">&lt;</span><span class="token class-name">ArticleEntry</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">guard</span> <span class="token keyword">let</span> article <span class="token operator">=</span> <span class="token keyword">try</span><span class="token operator">?</span> <span class="token keyword">await</span> <span class="token class-name">ArticleFetch</span><span class="token punctuation">.</span><span class="token function">fetchNewestArticle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> entry <span class="token operator">=</span> <span class="token class-name">ArticleEntry</span><span class="token punctuation">(</span>date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> article<span class="token punctuation">:</span> article<span class="token punctuation">)</span>        <span class="token comment">// 下次在 30 分钟后再请求</span>    <span class="token keyword">let</span> afterDate <span class="token operator">=</span> <span class="token class-name">Calendar</span><span class="token punctuation">.</span>current<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span>byAdding<span class="token punctuation">:</span> <span class="token class-name">DateComponents</span><span class="token punctuation">(</span>minute<span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!</span>    <span class="token keyword">return</span> <span class="token class-name">Timeline</span><span class="token punctuation">(</span>entries<span class="token punctuation">:</span> <span class="token punctuation">[</span>entry<span class="token punctuation">]</span><span class="token punctuation">,</span> policy<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>afterDate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，我们在 timeline 方法中请求了最新的文章数据，并且设置了下次请求的时间是当前时间的 30 分钟后。</p><h2 id="小组件-获取位置权限更新内容"><a href="#小组件-获取位置权限更新内容" class="headerlink" title="小组件-获取位置权限更新内容"></a>小组件-获取位置权限更新内容</h2><p>小组件获取位置权限和主应用 target 里获取方式很类似，步骤：</p><ul><li>在 info 里添加 <code>NSWidgetUseLocation = ture</code>。</li><li>使用 CLLocationManager 来获取位置信息，设置较低的精度。</li><li>用 <code>isAuthorizedForWidgetUpdates</code> 请求位置权限。</li></ul><h2 id="支持多个小组件"><a href="#支持多个小组件" class="headerlink" title="支持多个小组件"></a>支持多个小组件</h2><p>widget bundle 可以支持多个小组件。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">FirstWidgetBundle</span><span class="token punctuation">:</span> <span class="token class-name">WidgetBundle</span> <span class="token punctuation">&#123;</span>        <span class="token attribute atrule">@WidgetBundleBuilder</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">FirstWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token class-name">SecondWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token operator">...</span>        <span class="token class-name">SecondWidgetBundle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>body    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SecondWidgetBundle</span><span class="token punctuation">:</span> <span class="token class-name">WidgetBundle</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@WidgetBundleBuilder</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Widget</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SomeWidgetOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token class-name">SomeWidgetTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token operator">...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取小组件形状"><a href="#获取小组件形状" class="headerlink" title="获取小组件形状"></a>获取小组件形状</h2><p>不同设备小组件大小和形状都不同，比如要加个边框，就很困难。这就需要使用 <code>ContainerRelativeShape</code> 来获取 Shape 视图容器。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">ZStack</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">ContainerRelativeShape</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">inset</span><span class="token punctuation">(</span>by<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>pink<span class="token punctuation">)</span>    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Hello world"</span></span><span class="token punctuation">)</span>    <span class="token operator">...</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="小组件-Deep-link"><a href="#小组件-Deep-link" class="headerlink" title="小组件-Deep link"></a>小组件-Deep link</h2><p>medium 和 large 的小组件可以使用 Link，small 小组件使用 <code>.widgetURL</code> 修饰符。</p><h2 id="小组件访问SwiftData"><a href="#小组件访问SwiftData" class="headerlink" title="小组件访问SwiftData"></a>小组件访问SwiftData</h2><p>Wdiget target 访问主应用 target 的 SwiftData 数据步骤如下：</p><ul><li>对主应用和 Widget 的 target 中的 Signing &amp; Capabilities 都添加 App Groups，并创建一个新组，名字相同。</li><li>SwiftData 的模型同时在主应用和 Widget 的 target 中。</li><li>StaticConfiguration 或 AppIntentConfiguration 中添加 <code>modelContainer()</code> 修饰符，让 SwiftData 的容器可用。</li></ul><h2 id="小组件-参考资料"><a href="#小组件-参考资料" class="headerlink" title="小组件-参考资料"></a>小组件-参考资料</h2><ul><li><a href="https://developer.apple.com/videos/play/wwdc2022/10050/">Complications and widgets: Reloaded - WWDC22 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/documentation/WidgetKit">WidgetKit 官方</a></li><li>官方指南 <a href="https://developer.apple.com/documentation/WidgetKit/Creating-lock-screen-widgets-and-watch-complications">Creating Lock Screen Widgets and Watch Complications</a></li><li><a href="https://developer.apple.com/widgets/">WidgetKit 主题</a></li><li><a href="https://developer.apple.com/documentation/widgetkit/debugging-widgets">Debugging Widgets</a></li><li><a href="https://developer.apple.com/videos/all-videos/?q=WidgetKit">WidgetKit Session</a></li><li><a href="https://developer.apple.com/videos/play/wwdc2022/10050">Complications and widgets: Reloaded - WWDC22 - Videos - Apple Developer</a></li></ul><p>WWDC</p><ul><li>介绍怎么将 widgets 添加到 lock screen 的 session <a href="https://developer.apple.com/videos/play/wwdc2022-10050">Complications and widgets: Reloaded</a>。对应的实例代码 <a href="https://developer.apple.com/documentation/widgetkit/adding_widgets_to_the_lock_screen_and_watch_faces">Adding widgets to the Lock Screen and watch faces</a></li></ul><p>23</p><ul><li><a href="https://developer.apple.com/wwdc23/10028">Bring widgets to life - WWDC23 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/wwdc23/10029">Build widgets for the Smart Stack on Apple Watch - WWDC23 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/wwdc23/10027">Bring widgets to new places - WWDC23 - Videos - Apple Developer</a></li></ul><p>22</p><ul><li><a href="https://developer.apple.com/wwdc22/10051">Go further with Complications in WidgetKit - WWDC22 - Videos - Apple Developer</a> 进一步了解 WidgetKit 中的复杂功能</li><li><a href="https://developer.apple.com/news/?id=2q8t97ob">Challenge: WidgetKit workshop - Discover - Apple Developer</a> 挑战：WidgetKit 研讨会</li><li><a href="https://developer.apple.com/wwdc22/10050">Complications and widgets: Reloaded - WWDC22 - Videos - Apple Developer</a> 复杂功能和小组件：重新载入</li><li><a href="https://developer.apple.com/wwdc22/10051">Go further with Complications in WidgetKit - WWDC22 - Videos - Apple Developer</a> 进一步了解 WidgetKit 中的复杂功能</li></ul><p>21</p><ul><li><a href="https://developer.apple.com/wwdc21/10048">Principles of great widgets - WWDC21 - Videos - Apple Developer</a> 优秀小组件的原则</li><li><a href="https://developer.apple.com/wwdc21/10049">Add intelligence to your widgets - WWDC21 - Videos - Apple Developer</a> 让您的小组件更加智能</li><li><a href="https://developer.apple.com/news/?id=zawi5f1g">Documentation Spotlight: Dynamically display timely data in your widgets - Discover - Apple Developer</a> 聚焦文档：在小组件中适时动态显示数据</li></ul><p>20</p><ul><li><a href="https://developer.apple.com/wwdc20/10033">Build SwiftUI views for widgets - WWDC20 - Videos - Apple Developer</a> 为小组件构建 SwiftUI 视图。中文：<a href="https://xiaozhuanlan.com/topic/3691507248">WWDC20 - Build SwiftUI views for widgets － 小专栏</a></li><li><a href="https://developer.apple.com/news/?id=yv6so7ie">Widgets code-along - Discover - Apple Developer</a> 小组件编写临摹课程</li><li><a href="https://developer.apple.com/wwdc20/10034">Widgets Code-along, part 1: The adventure begins - WWDC20 - Videos - Apple Developer</a> 小组件编程临摹课程1：开始学习</li><li><a href="https://developer.apple.com/wwdc20/10035">Widgets Code-along, part 2: Alternate timelines - WWDC20 - Videos - Apple Developer</a> 小组件编程临摹课程2：变更时间线</li><li><a href="https://developer.apple.com/wwdc20/10036">Widgets Code-along, part 3: Advancing timelines - WWDC20 - Videos - Apple Developer</a> 小组件编程临摹课程3：加速时间线</li><li><a href="https://developer.apple.com/wwdc20/10028">Meet WidgetKit - WWDC20 - Videos - Apple Developer</a> 为你介绍 WidgetKit</li><li><a href="https://developer.apple.com/news/?id=yv6so7ie">Widgets code-along - Discover - Apple Developer</a> 小组件编程临摹课程</li><li><a href="https://developer.apple.com/wwdc20/10194">Add configuration and intelligence to your widgets - WWDC20 - Videos - Apple Developer</a> 为小组件添加配置和智能</li><li><a href="https://developer.apple.com/wwdc20/10028">Meet WidgetKit - WWDC20 - Videos - Apple Developer</a> 为你介绍 WidgetKit</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容已整理到小册子中，小册子代码在 &lt;a href=&quot;https://github.com/ming1016/SwiftPamphletApp&quot;&gt;Github&lt;/a&gt; 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买&lt;a href=&quot;https://apps
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>小册子之如何使用 SwiftData 开发 SwiftUI 应用</title>
    <link href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/"/>
    <id>https://starming.com/2024/05/18/pamphlet-series-swiftdata/</id>
    <published>2024-05-17T16:17:12.000Z</published>
    <updated>2024-05-25T12:27:58.603Z</updated>
    
    <content type="html"><![CDATA[<p>以下内容已整理到小册子中，小册子代码在 <a href="https://github.com/ming1016/SwiftPamphletApp">Github</a> 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">“戴铭的开发小册子”</a>应用(98元)，来跟踪查看本文内容新增和更新。</p><p>本文属于小册子系列中的一篇，已发布系列文章有：</p><ul><li>【本篇】<a href="https://starming.com/2024/05/18/pamphlet-series-swiftdata/">小册子之如何使用 SwiftData 开发 SwiftUI 应用</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-widget/">小册子之简说 Widget 小组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-listdataview/">小册子之 List、Lazy 容器、ScrollView、Grid 和 Table 数据集合 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-layout/">小册子之详说 Navigation、ViewThatFits、Layout 协议等布局 SwiftUI 组件</a></li><li><a href="https://starming.com/2024/05/18/pamphlet-series-form/">小册子之 Form、Picker、Toggle、Slider 和 Stepper 表单相关 SwiftUI 视图</a></li><li><a href="https://starming.com/2024/05/25/pamphlet-series-animation/">小册子之 SwiftUI 动画</a></li></ul><p>小册子代码里有大量 SwiftData 实际使用实践的代码。</p><p>在 Swift 中，有许多库可以用于处理数据，包括但不限于 SwiftData、CoreData、Realm、SQLite.swift 等。这些库各有优势。</p><p>但，如果使用 SwiftData，你可以在 Swift 中更加方便地处理数据。SwiftData 是 Apple 在 WWDC23 上推出的一个新的数据持久化框架，它是 CoreData 的替代品，提供了更简单、更易用的 API。</p><h2 id="创建-Model模型"><a href="#创建-Model模型" class="headerlink" title="创建@Model模型"></a>创建@Model模型</h2><p>先说说如何创建 SwiftData 模型。</p><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>用 <code>@Model</code> 宏装饰类</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Model</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> content<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> publishedDate<span class="token punctuation">:</span> <span class="token class-name">Date</span>        <span class="token keyword">init</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> content<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> publishedDate<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">self</span><span class="token punctuation">.</span>title <span class="token operator">=</span> title        <span class="token keyword">self</span><span class="token punctuation">.</span>author <span class="token operator">=</span> author        <span class="token keyword">self</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content        <span class="token keyword">self</span><span class="token punctuation">.</span>publishedDate <span class="token operator">=</span> publishedDate    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码创建了一个 Article 模型，包含了标题、作者、内容和发布日期。</p><p>以下数据类型默认支持：</p><ul><li>基础类型：Int, Int8, Int16, Int32, Int64, UInt, UInt8, UInt16, UInt32, UInt64, Float, Double, Bool, String, Date, Data 等</li><li>复杂的类型：Array, Dictionary, Set, Optional, Enum, Struct, Codable 等</li><li>模型关系：一对一、一对多、多对多</li></ul><p>默认数据库路径： <code>Data/Library/Application Support/default.store</code></p><h3 id="Attribute"><a href="#Attribute" class="headerlink" title="@Attribute"></a><code>@Attribute</code></h3><p>接下来说说如何使用 <code>@Attribute</code> 宏。</p><p>一些常用的：</p><ul><li>spotlight：使其能出现在 Spotlight 搜索结果里</li><li>unique：值是唯一的</li><li>externalStorage：值存储为二进制数据</li><li>transient：值不存储</li><li>encrypt：加密存储</li></ul><p>使用方法</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Attribute</span><span class="token punctuation">(</span><span class="token punctuation">.</span>externalStorage<span class="token punctuation">)</span> <span class="token keyword">var</span> imgData<span class="token punctuation">:</span> <span class="token class-name">Data</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>二进制会将其存储为单独的文件，然后在数据库中引用文件名。文件会存到  <code>Data/Library/Application Support/.default_SUPPORT/_EXTERNAL_DATA</code> 目录下。</p><h3 id="Transient-不存"><a href="#Transient-不存" class="headerlink" title="@Transient 不存"></a><code>@Transient</code> 不存</h3><p>如果有的属性不希望进行存储，可以使用 <code>@Transient</code></p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Model</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token attribute atrule">@Transient</span> <span class="token keyword">var</span> content<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="transformable"><a href="#transformable" class="headerlink" title="transformable"></a>transformable</h3><p>SwiftData 除了能够存储字符串和整数这样基本类型，还可以存储更复杂的自定义类型。要存储自定义类型，可用 transformable。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Model</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> author<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> content<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token keyword">let</span> publishedDate<span class="token punctuation">:</span> <span class="token class-name">Date</span>    <span class="token attribute atrule">@Attribute</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">transformable</span><span class="token punctuation">(</span>by<span class="token punctuation">:</span> <span class="token class-name">UIColorValueTransformer</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">var</span> bgColor<span class="token punctuation">:</span> <span class="token class-name">UIColor</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>UIColorValueTransformer 类的实现</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">class</span> <span class="token class-name">UIColorValueTransformer</span><span class="token punctuation">:</span> <span class="token class-name">ValueTransformer</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// return data</span>    <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">transformedValue</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> value<span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">Any</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">guard</span> <span class="token keyword">let</span> color <span class="token operator">=</span> value <span class="token keyword">as</span><span class="token operator">?</span> <span class="token class-name">UIColor</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token nil constant">nil</span> <span class="token punctuation">&#125;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">NSKeyedArchiver</span><span class="token punctuation">.</span><span class="token function">archivedData</span><span class="token punctuation">(</span>withRootObject<span class="token punctuation">:</span> color<span class="token punctuation">,</span> requiringSecureCoding<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> data        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token nil constant">nil</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// return UIColor</span>    <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">reverseTransformedValue</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> value<span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token keyword">Any</span><span class="token operator">?</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">guard</span> <span class="token keyword">let</span> data <span class="token operator">=</span> value <span class="token keyword">as</span><span class="token operator">?</span> <span class="token class-name">Data</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token nil constant">nil</span> <span class="token punctuation">&#125;</span>                <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> color <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">NSKeyedUnarchiver</span><span class="token punctuation">.</span><span class="token function">unarchivedObject</span><span class="token punctuation">(</span>ofClass<span class="token punctuation">:</span> <span class="token class-name">UIColor</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> data<span class="token punctuation">)</span>            <span class="token keyword">return</span> color        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token nil constant">nil</span>         <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注册</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SwiftPamphletAppApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ValueTransformer</span><span class="token punctuation">.</span><span class="token function">setValueTransformer</span><span class="token punctuation">(</span><span class="token class-name">UIColorValueTransformer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> forName<span class="token punctuation">:</span> <span class="token class-name">NSValueTransformerName</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"UIColorValueTransformer"</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WindowGroup</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SwiftData-模型关系"><a href="#SwiftData-模型关系" class="headerlink" title="SwiftData-模型关系"></a>SwiftData-模型关系</h2><p>使用 &#96;&#96;@Relationship&#96; 添加关系，但是不加这个宏也可以，SwiftData 会自动添加模型之间的关系。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Model</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Author</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token attribute atrule">@Relationship</span><span class="token punctuation">(</span>deleteRule<span class="token punctuation">:</span> <span class="token punctuation">.</span>cascade<span class="token punctuation">,</span> inverse<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token class-name">Brew</span><span class="token punctuation">.</span>brewer<span class="token punctuation">)</span>    <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token attribute atrule">@Model</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>    <span class="token keyword">var</span> author<span class="token punctuation">:</span> <span class="token class-name">Author</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>默认情况 deleteRule 是 <code>.nullify</code>，这个删除后只会删除引用关系。<code>.cascade</code> 会在删除用户后删除其所有文章。</p><p>SwiftData 可以添加一对一，一对多，多对多的关系。</p><p>限制关系表数量</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Relationship</span><span class="token punctuation">(</span>maximumModelCount<span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span>    <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="容器配置modelContainer"><a href="#容器配置modelContainer" class="headerlink" title="容器配置modelContainer"></a>容器配置modelContainer</h2><h3 id="多模型"><a href="#多模型" class="headerlink" title="多模型"></a>多模型</h3><p>配置方法</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">SomeApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WindowGroup</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token class-name">Author</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有关系的两个模型，只需要加父模型，SwiftData 会推断出子模型。</p><h3 id="数据存内存"><a href="#数据存内存" class="headerlink" title="数据存内存"></a>数据存内存</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> configuration <span class="token operator">=</span> <span class="token class-name">ModelConfiguration</span><span class="token punctuation">(</span>inMemory<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token keyword">let</span> container <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">ModelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> schema<span class="token punctuation">,</span> configurations<span class="token punctuation">:</span> <span class="token punctuation">[</span>configuration<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="数据只读"><a href="#数据只读" class="headerlink" title="数据只读"></a>数据只读</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token class-name">ModelConfiguration</span><span class="token punctuation">(</span>allowsSave<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="自定义存储文件和位置"><a href="#自定义存储文件和位置" class="headerlink" title="自定义存储文件和位置"></a>自定义存储文件和位置</h3><p>如果要指定数据库存储的位置，可以按下面写法：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">SomeApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> container<span class="token punctuation">:</span> <span class="token class-name">ModelContainer</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> storeURL <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span>documentsDirectory<span class="token punctuation">.</span><span class="token function">appending</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"database.sqlite"</span></span><span class="token punctuation">)</span>            <span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token class-name">ModelConfiguration</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> storeURL<span class="token punctuation">)</span>            container <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">ModelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> configurations<span class="token punctuation">:</span> config<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>            <span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Failed"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WindowGroup</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="iCloud-支持"><a href="#iCloud-支持" class="headerlink" title="iCloud 支持"></a>iCloud 支持</h3><p>如果要添加 iCloud 支持，需要先确定模型满足以下条件：</p><ul><li>没有唯一约束</li><li>关系是可选的</li><li>有所值有默认值</li></ul><p>iCloud 支持操作步骤：</p><ul><li>进入 Signing &amp; Capabilities 中，在 Capability 里选择 iCloud</li><li>选中 CloudKit 旁边的框</li><li>设置 bundle identifier</li><li>再按 Capability，选择 Background Modes</li><li>选择 Remote Notifications</li></ul><h3 id="指定部分表同步到-iCloud"><a href="#指定部分表同步到-iCloud" class="headerlink" title="指定部分表同步到 iCloud"></a>指定部分表同步到 iCloud</h3><p>使用多个 ModelConfiguration 对象来配置，这样可以指定哪个配置成同步到 iCloud，哪些不同步。</p><h3 id="添加多个配置"><a href="#添加多个配置" class="headerlink" title="添加多个配置"></a>添加多个配置</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@main</span><span class="token keyword">struct</span> <span class="token class-name">SomeApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> container<span class="token punctuation">:</span> <span class="token class-name">ModelContainer</span>    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> c1 <span class="token operator">=</span> <span class="token class-name">ModelConfiguration</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span>            <span class="token keyword">let</span> c2 <span class="token operator">=</span> <span class="token class-name">ModelConfiguration</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Author</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> isStoredInMemoryOnly<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span>            container <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">ModelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token class-name">Author</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> configurations<span class="token punctuation">:</span> c1<span class="token punctuation">,</span> c2<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>            <span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Failed"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">WindowGroup</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="撤销和重做"><a href="#撤销和重做" class="headerlink" title="撤销和重做"></a>撤销和重做</h3><p>创建容器时进行指定</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> isUndoEnabled<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样 modelContext 就可以调用撤销和重做函数。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SomeView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>modelContext<span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">var</span> context    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            context<span class="token punctuation">.</span>undoManager<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">undo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"撤销"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="context"><a href="#context" class="headerlink" title="context"></a>context</h3><p>View 之外的地方，可以通过 ModelContainer 的 context 属性来获取 modelContext。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> context <span class="token operator">=</span> container<span class="token punctuation">.</span>mainContext<span class="token keyword">let</span> context <span class="token operator">=</span> <span class="token class-name">ModelContext</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="预先导入数据"><a href="#预先导入数据" class="headerlink" title="预先导入数据"></a>预先导入数据</h3><p>方法如下：</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> result <span class="token keyword">in</span>    <span class="token keyword">do</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> container <span class="token operator">=</span> <span class="token keyword">try</span> result<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">// 先检查有没数据</span>        <span class="token keyword">let</span> descriptor <span class="token operator">=</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">let</span> existingArticles <span class="token operator">=</span> <span class="token keyword">try</span> container<span class="token punctuation">.</span>mainContext<span class="token punctuation">.</span><span class="token function">fetchCount</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span>        <span class="token keyword">guard</span> existingArticles <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token punctuation">&#125;</span>        <span class="token comment">// 读取 bundle 里的文件</span>        <span class="token keyword">guard</span> <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token class-name">Bundle</span><span class="token punctuation">.</span>main<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span>forResource<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"articles"</span></span><span class="token punctuation">,</span> withExtension<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"json"</span></span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Failed"</span></span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">Data</span><span class="token punctuation">(</span>contentsOf<span class="token punctuation">:</span> url<span class="token punctuation">)</span>        <span class="token keyword">let</span> articles <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">JSONDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> data<span class="token punctuation">)</span>        <span class="token keyword">for</span> article <span class="token keyword">in</span> articles <span class="token punctuation">&#123;</span>            container<span class="token punctuation">.</span>mainContext<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Failed"</span></span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="增删modelContext"><a href="#增删modelContext" class="headerlink" title="增删modelContext"></a>增删modelContext</h2><h3 id="添加保存数据"><a href="#添加保存数据" class="headerlink" title="添加保存数据"></a>添加保存数据</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SomeView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>   <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>modelContext<span class="token punctuation">)</span> <span class="token keyword">var</span> context   <span class="token operator">...</span>   <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>         <span class="token operator">...</span>         <span class="token class-name">Button</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>             <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> label<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span>             <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"添加"</span></span><span class="token punctuation">)</span>         <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">func</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token operator">...</span>      context<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>默认不用使用 <code>context.save()</code>，SwiftData 会自动进行保存，如果不想自动保存，可以在容器中设置</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">&#123;</span>   <span class="token class-name">WindowGroup</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span>   <span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> isAutosaveEnabled<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span>       <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="编辑和删除数据"><a href="#编辑和删除数据" class="headerlink" title="编辑和删除数据"></a>编辑和删除数据</h3><p>编辑数据使用 <code>@Bindable</code>。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">struct</span> <span class="token class-name">SomeView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>    <span class="token attribute atrule">@Bindable</span> <span class="token keyword">var</span> article<span class="token punctuation">:</span> <span class="token class-name">Article</span>    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>modelContext<span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">var</span> modelContext    <span class="token operator">...</span>        <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Form</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"文章标题"</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $article<span class="token punctuation">.</span>title<span class="token punctuation">)</span>            <span class="token operator">...</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">.</span>toolbar <span class="token punctuation">&#123;</span>            <span class="token class-name">ToolbarItem</span><span class="token punctuation">(</span>placement<span class="token punctuation">:</span> <span class="token punctuation">.</span>destructiveAction<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"删除"</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    modelContext<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>article<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SwiftData-检索"><a href="#SwiftData-检索" class="headerlink" title="SwiftData-检索"></a>SwiftData-检索</h2><h3 id="Query"><a href="#Query" class="headerlink" title="@Query"></a><code>@Query</code></h3><p>使用 <code>@Query</code> 会从数据库中获取数据。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Query</span> <span class="token keyword">private</span> <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>@Query</code> 还支持 filter、sort、order 和 animation 等参数。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Query</span><span class="token punctuation">(</span>sort<span class="token punctuation">:</span> <span class="token punctuation">\</span><span class="token class-name">Article</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>forward<span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>sort 可支持多个 SortDescriptor，SwiftData 会按顺序处理。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Query</span><span class="token punctuation">(</span>sort<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token class-name">Article</span><span class="token punctuation">.</span>isArchived<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>forward<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token class-name">Article</span><span class="token punctuation">.</span>updateDate<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Predicate"><a href="#Predicate" class="headerlink" title="Predicate"></a>Predicate</h3><p>filter 使用的是 <code>#Predicate</code> </p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">static</span> <span class="token keyword">var</span> now<span class="token punctuation">:</span> <span class="token class-name">Date</span> <span class="token punctuation">&#123;</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>now <span class="token punctuation">&#125;</span><span class="token attribute atrule">@Query</span><span class="token punctuation">(</span>filter<span class="token punctuation">:</span> <span class="token other-directive property">#Predicate</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span> <span class="token punctuation">&#123;</span> article <span class="token keyword">in</span>    article<span class="token punctuation">.</span>releaseDate <span class="token operator">></span> now<span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token keyword">var</span> draftArticles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Predicate 支持的内置方法主要有 <code>contains</code>、<code>allSatisfy</code>、<code>flatMap</code>、<code>filter</code>、<code>subscript</code>、<code>starts</code>、<code>min</code>、<code>max</code>、<code>localizedStandardContains</code>、<code>localizedCompare</code>、<code>caseInsensitiveCompare</code> 等。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Query</span><span class="token punctuation">(</span>filter<span class="token punctuation">:</span> <span class="token other-directive property">#Predicate</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span> <span class="token punctuation">&#123;</span> article <span class="token keyword">in</span>    article<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">starts</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">"苹果发布会"</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>需要注意的是 <code>.isEmpty</code>  不能使用  <code>article.title.isEmpty == false</code> ，否则会崩溃。</p><h3 id="FetchDescriptor"><a href="#FetchDescriptor" class="headerlink" title="FetchDescriptor"></a>FetchDescriptor</h3><p>FetchDescriptor 可以在模型中查找数据，而不必在视图层做。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@Model</span><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span>    <span class="token operator">...</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> all<span class="token punctuation">:</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>        <span class="token class-name">FetchDescriptor</span><span class="token punctuation">(</span>sortBy<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token class-name">Article</span><span class="token punctuation">.</span>updateDate<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">struct</span> <span class="token class-name">SomeView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">&#123;</span>       <span class="token attribute atrule">@Query</span><span class="token punctuation">(</span><span class="token class-name">Article</span><span class="token punctuation">.</span>all<span class="token punctuation">)</span> <span class="token keyword">private</span> <span class="token keyword">var</span> articles<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">]</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="获取数量而不加载"><a href="#获取数量而不加载" class="headerlink" title="获取数量而不加载"></a>获取数量而不加载</h3><p>使用 <code>fetchCount()</code> 方法，可完成整个计数，且很快，内存占用少。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> descriptor <span class="token operator">=</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span><span class="token punctuation">(</span>predicate<span class="token punctuation">:</span> <span class="token other-directive property">#Predicate</span> <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>words <span class="token operator">></span> <span class="token number">50</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">try</span><span class="token operator">?</span> modelContext<span class="token punctuation">.</span><span class="token function">fetchCount</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="fetchLimit-限制获取数量"><a href="#fetchLimit-限制获取数量" class="headerlink" title="fetchLimit 限制获取数量"></a>fetchLimit 限制获取数量</h3><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">var</span> descriptor <span class="token operator">=</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span><span class="token punctuation">(</span>  predicate<span class="token punctuation">:</span> <span class="token other-directive property">#Predicate</span> <span class="token punctuation">&#123;</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>read <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  sortBy<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token class-name">Article</span><span class="token punctuation">.</span>updateDate<span class="token punctuation">,</span>           order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>descriptor<span class="token punctuation">.</span>fetchLimit <span class="token operator">=</span> <span class="token number">30</span><span class="token keyword">let</span> articles <span class="token operator">=</span> <span class="token keyword">try</span> context<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">)</span><span class="token comment">// 翻页</span><span class="token keyword">let</span> pSize <span class="token operator">=</span> <span class="token number">30</span><span class="token keyword">let</span> pNumber <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">var</span> fetchDescriptor <span class="token operator">=</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span><span class="token punctuation">(</span>sortBy<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token class-name">Article</span><span class="token punctuation">.</span>updateDate<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>fetchDescriptor<span class="token punctuation">.</span>fetchOffset <span class="token operator">=</span> pNumber <span class="token operator">*</span> pSizefetchDescriptor<span class="token punctuation">.</span>fetchLimit <span class="token operator">=</span> pSize<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="限制获取的属性"><a href="#限制获取的属性" class="headerlink" title="限制获取的属性"></a>限制获取的属性</h3><p>只请求要用的属性</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">var</span> fetchDescriptor <span class="token operator">=</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span><span class="token punctuation">(</span>sortBy<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\</span><span class="token punctuation">.</span>updateDate<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>fetchDescriptor<span class="token punctuation">.</span>propertiesToFetch <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">\</span><span class="token punctuation">.</span>title<span class="token punctuation">,</span> <span class="token punctuation">\</span><span class="token punctuation">.</span>updateDate<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="SwiftData-处理大量数据"><a href="#SwiftData-处理大量数据" class="headerlink" title="SwiftData-处理大量数据"></a>SwiftData-处理大量数据</h2><p>SwiftData 模型上下文有个方法叫 <code>enumerate()</code>，可以高效遍历大量数据。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">let</span> descriptor <span class="token operator">=</span> <span class="token class-name">FetchDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Article</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">...</span><span class="token keyword">do</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> modelContext<span class="token punctuation">.</span><span class="token function">enumerate</span><span class="token punctuation">(</span>descriptor<span class="token punctuation">,</span> batchSize<span class="token punctuation">:</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> article <span class="token keyword">in</span>        <span class="token operator">...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">&#123;</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">"Failed."</span></span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中 batchSize 参数是调整批量处理的数量，也就是一次加载多少对象。因此可以通过这个值来权衡内存和IO数量。这个值默认是 5000。</p><h2 id="SwiftData多线程"><a href="#SwiftData多线程" class="headerlink" title="SwiftData多线程"></a>SwiftData多线程</h2><p>创建一个 Actor，然后 SwiftData 上下文在其中执行操作。</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token attribute atrule">@ModelActor</span><span class="token keyword">actor</span> <span class="token class-name">DataHandler</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">extension</span> <span class="token class-name">DataHandler</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">func</span> <span class="token function-definition function">addInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token operator">-></span> <span class="token class-name">IOInfo</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> info <span class="token operator">=</span> <span class="token class-name">IOInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        modelContext<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>        <span class="token keyword">try</span> modelContext<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> info    <span class="token punctuation">&#125;</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token class-name">Task</span><span class="token punctuation">.</span>detached <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token class-name">DataHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">let</span> item <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token keyword">await</span> handler<span class="token punctuation">.</span><span class="token function">addInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token operator">...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SwiftData-版本迁移"><a href="#SwiftData-版本迁移" class="headerlink" title="SwiftData-版本迁移"></a>SwiftData-版本迁移</h2><p>以下的小改动 SwiftData 会自动执行轻量迁移：</p><ul><li>增加模型</li><li>增加有默认值的新属性</li><li>重命名属性</li><li>删除属性</li><li>增加或删除 <code>.externalStorage</code> 或 <code>.allowsCloudEncryption</code> 属性。</li><li>增加所有值都是唯一属性为 <code>.unique</code></li><li>调整关系的删除规则</li></ul><p>其他情况需要用到版本迁移，版本迁移步骤如下：</p><ul><li>用 VersionedSchema 创建 SwiftData 模型的版本</li><li>用 SchemaMigrationPlan 对创建的版本进行排序</li><li>为每个迁移定义一个迁移阶段</li></ul><p>设置版本</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">enum</span> <span class="token class-name">ArticleV1Schema</span><span class="token punctuation">:</span> <span class="token class-name">VersionedSchema</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> versionIdentifier<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token string-literal"><span class="token string">"v1"</span></span>    <span class="token keyword">static</span> <span class="token keyword">var</span> models<span class="token punctuation">:</span> <span class="token punctuation">[</span>any <span class="token class-name">PersistentModel</span><span class="token punctuation">.</span><span class="token keyword">Type</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">[</span><span class="token class-name">Article</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span> <span class="token punctuation">&#125;</span>    <span class="token attribute atrule">@Model</span>    <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Article</span> <span class="token punctuation">&#123;</span>        <span class="token operator">...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SchemaMigrationPlan 轻量迁移</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">enum</span> <span class="token class-name">ArticleMigrationPlan</span><span class="token punctuation">:</span> <span class="token class-name">SchemaMigrationPlan</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> schemas<span class="token punctuation">:</span> <span class="token punctuation">[</span>any <span class="token class-name">VersionedSchema</span><span class="token punctuation">.</span><span class="token keyword">Type</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">[</span><span class="token class-name">ArticleV1Schema</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token class-name">ArticleV2Schema</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">var</span> stages<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">MigrationStage</span><span class="token punctuation">]</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">[</span>migrateV1toV2<span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">let</span> migrateV1toV2 <span class="token operator">=</span> <span class="token class-name">MigrationStage</span><span class="token punctuation">.</span><span class="token function">lightweight</span><span class="token punctuation">(</span>        fromVersion<span class="token punctuation">:</span> <span class="token class-name">ArticleV1Schema</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span>        toVersion<span class="token punctuation">:</span> <span class="token class-name">ArticleV2Schema</span><span class="token punctuation">.</span><span class="token keyword">self</span>    <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自定义迁移</p><pre class="line-numbers language-swift" data-language="swift"><code class="language-swift"><span class="token keyword">static</span> <span class="token keyword">let</span> migrateV1toV2 <span class="token operator">=</span> <span class="token class-name">MigrationStage</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span>    fromVersion<span class="token punctuation">:</span> <span class="token class-name">ArticleV1Schema</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span>    toVersion<span class="token punctuation">:</span> <span class="token class-name">ArticleV2Schema</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span>    willMigrate<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> context <span class="token keyword">in</span>        <span class="token comment">// 合并前的处理</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    didMigrate<span class="token punctuation">:</span> <span class="token punctuation">&#123;</span> context <span class="token keyword">in</span>        <span class="token comment">// 合并后的处理</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SwiftData-调试"><a href="#SwiftData-调试" class="headerlink" title="SwiftData-调试"></a>SwiftData-调试</h2><p>CoreData 的调试方式依然适用于 SwiftData。</p><p>你可以设置启动参数来让 CoreData 打印出执行的 SQL 语句。在你的项目中，选择 “Product” -&gt; “Scheme” -&gt; “Edit Scheme”，然后在 “Arguments” 标签下的 “Arguments Passed On Launch” 中添加 -com.apple.CoreData.SQLDebug 1。这样，每当 CoreData 执行 SQL 语句时，都会在控制台中打印出来。</p><p>使用 <code>-com.apple.CoreData.SQLDebug 3</code> 获取后台更多信息。</p><h2 id="SwiftData-资料"><a href="#SwiftData-资料" class="headerlink" title="SwiftData-资料"></a>SwiftData-资料</h2><h3 id="WWDC"><a href="#WWDC" class="headerlink" title="WWDC"></a>WWDC</h3><p>23</p><ul><li><a href="https://developer.apple.com/wwdc23/10196">Dive deeper into SwiftData - WWDC23 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/wwdc23/10189">Migrate to SwiftData - WWDC23 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/wwdc23/10187">Meet SwiftData - WWDC23 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/wwdc23/10195">Model your schema with SwiftData - WWDC23 - Videos - Apple Developer</a></li><li><a href="https://developer.apple.com/wwdc23/10154">Build an app with SwiftData - WWDC23 - Videos - Apple Developer</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下内容已整理到小册子中，小册子代码在 &lt;a href=&quot;https://github.com/ming1016/SwiftPamphletApp&quot;&gt;Github&lt;/a&gt; 上，本文会随着系统更新和我更多的实践而新增和更新，你可以购买&lt;a href=&quot;https://apps
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="SwiftUI" scheme="https://starming.com/tags/SwiftUI/"/>
    
  </entry>
  
  <entry>
    <title>戴铭的开发小册子6.0，使用SwiftUI、SwiftData、Observable、NavigationSplitView 进行了重构</title>
    <link href="https://starming.com/2024/05/08/swiftpamphletapp6/"/>
    <id>https://starming.com/2024/05/08/swiftpamphletapp6/</id>
    <published>2024-05-08T13:05:31.000Z</published>
    <updated>2024-05-15T13:19:40.797Z</updated>
    
    <content type="html"><![CDATA[<p>目前戴铭的开发小册子已经上架 macOS 应用商店，<a href="https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90/id1609702529?mt=12">点击安装</a>，或在 macOS 应用商店“戴铭”关键字。</p><p><a href="https://apps.apple.com/cn/app/id1609702529"><img src="https://ming1016.github.io/qdimg/badge-download-on-the-mac-app-store.svg" alt="Available on the App Store" srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="https://ming1016.github.io/qdimg/badge-download-on-the-mac-app-store.svg" class="lozad post-image"></a></p><p>本版本解决了以前的几个问题。</p><p>第一个，存储的问题。以前使用的是三方数据库，写法比较繁琐且和 SwiftUI 结合的不好。现在用的是 SwiftData，写法简洁了很多，代码也好维护了。更多技术重构细节可以直接查看 App <a href="https://github.com/ming1016/SwiftPamphletApp">代码</a>。</p><p>第二，手册内容和资料之间的关系。以前比较隔离，资料和手册没有联系。现在采用的是每个知识点都可以添加相关资料，这样更利于知识的积累。</p><p>第三，Github 库和开发者信息的管理问题。以前添加和删除都在代码层面，现在可以直接在 App 内进行。</p><p>这三个问题解决后，可以将更多精力花在内容的更新增加以及 App 使用体验上了。</p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftpamphletapp6/01.png" class="lozad post-image"src="/uploads/swiftpamphletapp6/01.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftpamphletapp6/02.png" class="lozad post-image"src="/uploads/swiftpamphletapp6/02.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftpamphletapp6/03.png" class="lozad post-image"src="/uploads/swiftpamphletapp6/03.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftpamphletapp6/04.png" class="lozad post-image"src="/uploads/swiftpamphletapp6/04.png"></p><p><img  srcset="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E" data-src="/uploads/swiftpamphletapp6/05.png" class="lozad post-image"src="/uploads/swiftpamphletapp6/05.png"></p><p>内容主要包含</p><ul><li>Apple 技术知识点以及示例</li><li>历年 WWDC</li></ul><p>功能主要包含</p><ul><li>手册书签收藏</li><li>资料收集整理</li><li>离线保存资料</li><li>知识点和资料关联</li><li>手册、WWDC和资料可搜索</li><li>Github 开发者和仓库信息添加管理</li></ul><p>知识点目前主要有 Swift 基础语法，SwiftUI，SwiftData，小组件等知识内容。其他内容还在迭代新增和更新中。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;目前戴铭的开发小册子已经上架 macOS 应用商店，&lt;a href=&quot;https://apps.apple.com/cn/app/%E6%88%B4%E9%93%AD%E7%9A%84%E5%BC%80%E5%8F%91%E5%B0%8F%E5%86%8C%E5%AD%90
      
    
    </summary>
    
      <category term="App" scheme="https://starming.com/categories/App/"/>
    
    
      <category term="App" scheme="https://starming.com/tags/App/"/>
    
  </entry>
  
</feed>
